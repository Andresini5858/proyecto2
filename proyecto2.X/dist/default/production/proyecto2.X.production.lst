

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Nov 12 13:45:29 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     008F                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     0105                     	;# 
   129     0107                     	;# 
   130     0108                     	;# 
   131     0109                     	;# 
   132     010C                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     0185                     	;# 
   138     0187                     	;# 
   139     0188                     	;# 
   140     0189                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008F                     	;# 
   188     0090                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009E                     	;# 
   205     009F                     	;# 
   206     0105                     	;# 
   207     0107                     	;# 
   208     0108                     	;# 
   209     0109                     	;# 
   210     010C                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     0185                     	;# 
   216     0187                     	;# 
   217     0188                     	;# 
   218     0189                     	;# 
   219     018C                     	;# 
   220     018D                     	;# 
   221     0019                     _TXREG	set	25
   222     0018                     _RCSTAbits	set	24
   223     001D                     _CCP2CONbits	set	29
   224     001D                     _CCP2CON	set	29
   225     0012                     _T2CONbits	set	18
   226     0017                     _CCP1CONbits	set	23
   227     0017                     _CCP1CON	set	23
   228     0009                     _PORTE	set	9
   229     0008                     _PORTD	set	8
   230     0006                     _PORTB	set	6
   231     0005                     _PORTA	set	5
   232     0008                     _PORTDbits	set	8
   233     0007                     _PORTCbits	set	7
   234     0001                     _TMR0	set	1
   235     001B                     _CCPR2L	set	27
   236     001E                     _ADRESH	set	30
   237     0015                     _CCPR1L	set	21
   238     001F                     _ADCON0bits	set	31
   239     000C                     _PIR1bits	set	12
   240     0006                     _PORTBbits	set	6
   241     000B                     _INTCONbits	set	11
   242     0099                     _SPBRG	set	153
   243     009A                     _SPBRGH	set	154
   244     0098                     _TXSTAbits	set	152
   245     0092                     _PR2	set	146
   246     009F                     _ADCON1bits	set	159
   247     0096                     _IOCBbits	set	150
   248     0095                     _WPUBbits	set	149
   249     0081                     _OPTION_REGbits	set	129
   250     008F                     _OSCCONbits	set	143
   251     008C                     _PIE1bits	set	140
   252     0088                     _TRISD	set	136
   253     0089                     _TRISE	set	137
   254     0087                     _TRISCbits	set	135
   255     0086                     _TRISBbits	set	134
   256     010C                     _EEDATA	set	268
   257     010F                     _EEADRH	set	271
   258     010D                     _EEADR	set	269
   259     018D                     _EECON2	set	397
   260     018C                     _EECON1bits	set	396
   261     0187                     _BAUDCTLbits	set	391
   262     0188                     _ANSELbits	set	392
   263     0189                     _ANSELH	set	393
   264                           
   265                           	psect	strings
   266     030F                     __pstrings:
   267     030F                     stringtab:
   268     030F                     __stringtab:
   269     030F                     stringcode:	
   270                           ;	String table - string pointers are 1 byte each
   271                           
   272     030F                     stringdir:
   273     030F  3003               	movlw	high stringdir
   274     0310  008A               	movwf	10
   275     0311  0804               	movf	4,w
   276     0312  0A84               	incf	4,f
   277     0313  0782               	addwf	2,f
   278     0314                     __stringbase:
   279     0314  3400               	retlw	0
   280     0315                     __end_of__stringtab:
   281     0315                     STR_1:
   282     0315  340A               	retlw	10
   283     0316  340D               	retlw	13
   284     0317  342D               	retlw	45	;'-'
   285     0318  342D               	retlw	45	;'-'
   286     0319  342D               	retlw	45	;'-'
   287     031A  342D               	retlw	45	;'-'
   288     031B  342D               	retlw	45	;'-'
   289     031C  342D               	retlw	45	;'-'
   290     031D  342D               	retlw	45	;'-'
   291     031E  342D               	retlw	45	;'-'
   292     031F  342D               	retlw	45	;'-'
   293     0320  342D               	retlw	45	;'-'
   294     0321  342D               	retlw	45	;'-'
   295     0322  342D               	retlw	45	;'-'
   296     0323  342D               	retlw	45	;'-'
   297     0324  344D               	retlw	77	;'M'
   298     0325  3445               	retlw	69	;'E'
   299     0326  344E               	retlw	78	;'N'
   300     0327  3455               	retlw	85	;'U'
   301     0328  342D               	retlw	45	;'-'
   302     0329  342D               	retlw	45	;'-'
   303     032A  342D               	retlw	45	;'-'
   304     032B  342D               	retlw	45	;'-'
   305     032C  342D               	retlw	45	;'-'
   306     032D  342D               	retlw	45	;'-'
   307     032E  342D               	retlw	45	;'-'
   308     032F  342D               	retlw	45	;'-'
   309     0330  342D               	retlw	45	;'-'
   310     0331  342D               	retlw	45	;'-'
   311     0332  342D               	retlw	45	;'-'
   312     0333  342D               	retlw	45	;'-'
   313     0334  342D               	retlw	45	;'-'
   314     0335  342D               	retlw	45	;'-'
   315     0336  342D               	retlw	45	;'-'
   316     0337  342D               	retlw	45	;'-'
   317     0338  342D               	retlw	45	;'-'
   318     0339  342D               	retlw	45	;'-'
   319     033A  340A               	retlw	10
   320     033B  340D               	retlw	13
   321     033C  3400               	retlw	0
   322                           
   323                           	psect	cinit
   324     0011                     start_initialization:	
   325                           ; #config settings
   326                           
   327     0011                     __initialization:
   328                           
   329                           ; Clear objects allocated to COMMON
   330     0011  01FD               	clrf	__pbssCOMMON& (0+127)
   331                           
   332                           ; Clear objects allocated to BANK0
   333     0012  1383               	bcf	3,7	;select IRP bank0
   334     0013  3033               	movlw	low __pbssBANK0
   335     0014  0084               	movwf	4
   336     0015  3045               	movlw	low (__pbssBANK0+18)
   337     0016  120A  118A  2426  120A  118A  	fcall	clear_ram0
   338     001B                     end_of_initialization:	
   339                           ;End of C runtime variable initialization code
   340                           
   341     001B                     __end_of__initialization:
   342     001B  0183               	clrf	3
   343     001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   344                           
   345                           	psect	bssCOMMON
   346     007D                     __pbssCOMMON:
   347     007D                     _dato:
   348     007D                     	ds	1
   349                           
   350                           	psect	bssBANK0
   351     0033                     __pbssBANK0:
   352     0033                     _val3:
   353     0033                     	ds	2
   354     0035                     _val2:
   355     0035                     	ds	2
   356     0037                     _val1:
   357     0037                     	ds	2
   358     0039                     _val0:
   359     0039                     	ds	2
   360     003B                     _pot1:
   361     003B                     	ds	2
   362     003D                     _pot:
   363     003D                     	ds	2
   364     003F                     _loop:
   365     003F                     	ds	2
   366     0041                     _bandera:
   367     0041                     	ds	2
   368     0043                     _selector:
   369     0043                     	ds	2
   370                           
   371                           	psect	clrtext
   372     0426                     clear_ram0:	
   373                           ;	Called with FSR containing the base address, and
   374                           ;	W with the last address+1
   375                           
   376     0426  0064               	clrwdt	;clear the watchdog before getting into this loop
   377     0427                     clrloop0:
   378     0427  0180               	clrf	0	;clear RAM location pointed to by FSR
   379     0428  0A84               	incf	4,f	;increment pointer
   380     0429  0604               	xorwf	4,w	;XOR with final address
   381     042A  1903               	btfsc	3,2	;have we reached the end yet?
   382     042B  3400               	retlw	0	;all done for this memory range, return
   383     042C  0604               	xorwf	4,w	;XOR again to restore value
   384     042D  2C27               	goto	clrloop0	;do the next byte
   385                           
   386                           	psect	cstackCOMMON
   387     0070                     __pcstackCOMMON:
   388     0070                     ?_delay:
   389     0070                     ?_setup:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_setupADC:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ?_setupPWM:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_setupUART:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_cadena:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_writeEEPROM:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_interrup:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_readEEPROM:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?_isr:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?___wmul:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0070                     delay@micro:	
   423                           ; 2 bytes @ 0x0
   424                           
   425     0070                     ___wmul@multiplier:	
   426                           ; 2 bytes @ 0x0
   427                           
   428                           
   429                           ; 2 bytes @ 0x0
   430     0070                     	ds	2
   431     0072                     ??_delay:
   432     0072                     ___wmul@multiplicand:	
   433                           ; 1 bytes @ 0x2
   434                           
   435                           
   436                           ; 2 bytes @ 0x2
   437     0072                     	ds	2
   438     0074                     ??___wmul:
   439     0074                     ___wmul@product:	
   440                           ; 1 bytes @ 0x4
   441                           
   442                           
   443                           ; 2 bytes @ 0x4
   444     0074                     	ds	2
   445     0076                     ?___awdiv:
   446     0076                     ___awdiv@divisor:	
   447                           ; 2 bytes @ 0x6
   448                           
   449                           
   450                           ; 2 bytes @ 0x6
   451     0076                     	ds	2
   452     0078                     ___awdiv@dividend:
   453                           
   454                           ; 2 bytes @ 0x8
   455     0078                     	ds	2
   456     007A                     ??___awdiv:
   457                           
   458                           ; 1 bytes @ 0xA
   459     007A                     	ds	1
   460     007B                     ??_map:
   461                           
   462                           ; 1 bytes @ 0xB
   463     007B                     	ds	1
   464     007C                     map@value:
   465                           
   466                           ; 1 bytes @ 0xC
   467     007C                     	ds	1
   468                           
   469                           	psect	cstackBANK0
   470     0020                     __pcstackBANK0:
   471     0020                     ___awdiv@counter:
   472                           
   473                           ; 1 bytes @ 0x0
   474     0020                     	ds	1
   475     0021                     ___awdiv@sign:
   476                           
   477                           ; 1 bytes @ 0x1
   478     0021                     	ds	1
   479     0022                     ___awdiv@quotient:
   480                           
   481                           ; 2 bytes @ 0x2
   482     0022                     	ds	2
   483     0024                     ?_map:
   484     0024                     map@inputmin:	
   485                           ; 2 bytes @ 0x4
   486                           
   487                           
   488                           ; 2 bytes @ 0x4
   489     0024                     	ds	2
   490     0026                     map@inputmax:
   491                           
   492                           ; 2 bytes @ 0x6
   493     0026                     	ds	2
   494     0028                     map@outmin:
   495                           
   496                           ; 2 bytes @ 0x8
   497     0028                     	ds	2
   498     002A                     map@outmax:
   499                           
   500                           ; 2 bytes @ 0xA
   501     002A                     	ds	2
   502     002C                     ??_isr:
   503                           
   504                           ; 1 bytes @ 0xC
   505     002C                     	ds	3
   506     002F                     ??_setup:
   507     002F                     ??_setupADC:	
   508                           ; 1 bytes @ 0xF
   509                           
   510     002F                     ??_setupPWM:	
   511                           ; 1 bytes @ 0xF
   512                           
   513     002F                     ??_setupUART:	
   514                           ; 1 bytes @ 0xF
   515                           
   516     002F                     ??_cadena:	
   517                           ; 1 bytes @ 0xF
   518                           
   519     002F                     ??_writeEEPROM:	
   520                           ; 1 bytes @ 0xF
   521                           
   522     002F                     ??_interrup:	
   523                           ; 1 bytes @ 0xF
   524                           
   525     002F                     ??_readEEPROM:	
   526                           ; 1 bytes @ 0xF
   527                           
   528     002F                     writeEEPROM@data:	
   529                           ; 1 bytes @ 0xF
   530                           
   531                           
   532                           ; 1 bytes @ 0xF
   533     002F                     	ds	1
   534     0030                     cadena@cursor:
   535                           
   536                           ; 1 bytes @ 0x10
   537     0030                     	ds	1
   538     0031                     ??_main:
   539                           
   540                           ; 1 bytes @ 0x11
   541     0031                     	ds	2
   542                           
   543                           	psect	maintext
   544     001F                     __pmaintext:	
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 110 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : B00/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       2       0       0       0
   567 ;;      Totals:         0       2       0       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels required when called: 5
   570 ;; This function calls:
   571 ;;		_cadena
   572 ;;		_interrup
   573 ;;		_readEEPROM
   574 ;;		_setup
   575 ;;		_setupADC
   576 ;;		_setupPWM
   577 ;;		_setupUART
   578 ;;		_writeEEPROM
   579 ;; This function is called by:
   580 ;;		Startup code after reset
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584     001F                     _main:	
   585                           ;psect for function _main
   586                           
   587     001F                     l1497:	
   588                           ;incstack = 0
   589                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   590                           
   591                           
   592                           ;main.c: 111:     setup();
   593     001F  120A  118A  229C  120A  118A  	fcall	_setup
   594     0024                     l1499:
   595                           
   596                           ;main.c: 112:     setupADC();
   597     0024  120A  118A  23D3  120A  118A  	fcall	_setupADC
   598     0029                     l1501:
   599                           
   600                           ;main.c: 113:     setupPWM();
   601     0029  120A  118A  2367  120A  118A  	fcall	_setupPWM
   602     002E                     l1503:
   603                           
   604                           ;main.c: 114:     setupUART();
   605     002E  120A  118A  23EA  120A  118A  	fcall	_setupUART
   606                           
   607                           ;main.c: 115:     TMR0 = 246;
   608     0033  30F6               	movlw	246
   609     0034  1283               	bcf	3,5	;RP0=0, select bank0
   610     0035  1303               	bcf	3,6	;RP1=0, select bank0
   611     0036  0081               	movwf	1	;volatile
   612     0037                     l1505:
   613                           
   614                           ;main.c: 116:     cadena("\n\r-------------MENU------------------\n\r");
   615     0037  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   616     0038  120A  118A  23B2  120A  118A  	fcall	_cadena
   617     003D                     l1507:
   618                           
   619                           ;main.c: 118:         if (selector == 0){
   620     003D  1283               	bcf	3,5	;RP0=0, select bank0
   621     003E  1303               	bcf	3,6	;RP1=0, select bank0
   622     003F  0843               	movf	_selector,w
   623     0040  0444               	iorwf	_selector+1,w
   624     0041  1D03               	btfss	3,2
   625     0042  2844               	goto	u761
   626     0043  2845               	goto	u760
   627     0044                     u761:
   628     0044  28AA               	goto	l1547
   629     0045                     u760:
   630     0045                     l1509:
   631                           
   632                           ;main.c: 119:             loop = 1;
   633     0045  3001               	movlw	1
   634     0046  00BF               	movwf	_loop
   635     0047  3000               	movlw	0
   636     0048  00C0               	movwf	_loop+1
   637                           
   638                           ;main.c: 120:             while (loop == 1){
   639     0049  28A4               	goto	l1545
   640     004A                     l155:
   641                           
   642                           ;main.c: 121:                 if (ADCON0bits.GO == 0){
   643     004A  189F               	btfsc	31,1	;volatile
   644     004B  284D               	goto	u771
   645     004C  284E               	goto	u770
   646     004D                     u771:
   647     004D  284F               	goto	l156
   648     004E                     u770:
   649     004E                     l1511:
   650                           
   651                           ;main.c: 122:                     ADCON0bits.GO = 1;}
   652     004E  149F               	bsf	31,1	;volatile
   653     004F                     l156:
   654                           
   655                           ;main.c: 123:                 PORTDbits.RD5 = 1;
   656     004F  1688               	bsf	8,5	;volatile
   657                           
   658                           ;main.c: 124:                 PORTDbits.RD6 = 0;
   659     0050  1308               	bcf	8,6	;volatile
   660                           
   661                           ;main.c: 125:                 PORTDbits.RD7 = 0;
   662     0051  1388               	bcf	8,7	;volatile
   663                           
   664                           ;main.c: 126:                 if (PORTBbits.RB6 == 0){
   665     0052  1B06               	btfsc	6,6	;volatile
   666     0053  2855               	goto	u781
   667     0054  2856               	goto	u780
   668     0055                     u781:
   669     0055  285A               	goto	l1515
   670     0056                     u780:
   671     0056                     l1513:
   672                           
   673                           ;main.c: 127:                     bandera = 2;}
   674     0056  3002               	movlw	2
   675     0057  00C1               	movwf	_bandera
   676     0058  3000               	movlw	0
   677     0059  00C2               	movwf	_bandera+1
   678     005A                     l1515:
   679                           
   680                           ;main.c: 128:                 if (PORTBbits.RB6 == 1 && bandera == 2){
   681     005A  1F06               	btfss	6,6	;volatile
   682     005B  285D               	goto	u791
   683     005C  285E               	goto	u790
   684     005D                     u791:
   685     005D  28A4               	goto	l1545
   686     005E                     u790:
   687     005E                     l1517:
   688     005E  3002               	movlw	2
   689     005F  0641               	xorwf	_bandera,w
   690     0060  0442               	iorwf	_bandera+1,w
   691     0061  1D03               	btfss	3,2
   692     0062  2864               	goto	u801
   693     0063  2865               	goto	u800
   694     0064                     u801:
   695     0064  28A4               	goto	l1545
   696     0065                     u800:
   697     0065                     l1519:
   698                           
   699                           ;main.c: 129:                     EEADR = 0b00000000;
   700     0065  1283               	bcf	3,5	;RP0=0, select bank2
   701     0066  1703               	bsf	3,6	;RP1=1, select bank2
   702     0067  018D               	clrf	13	;volatile
   703     0068                     l1521:
   704                           
   705                           ;main.c: 130:                     writeEEPROM(CCPR1L);
   706     0068  1283               	bcf	3,5	;RP0=0, select bank0
   707     0069  1303               	bcf	3,6	;RP1=0, select bank0
   708     006A  0815               	movf	21,w	;volatile
   709     006B  120A  118A  233D  120A  118A  	fcall	_writeEEPROM
   710     0070                     l1523:
   711                           
   712                           ;main.c: 131:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   713     0070  2871               	nop2	;2 cycle nop
   714     0071  2872               	nop2	;2 cycle nop
   715     0072  0000               	nop
   716     0073                     l1525:
   717                           
   718                           ;main.c: 133:                     EEADR = 0b00000001;
   719     0073  3001               	movlw	1
   720     0074  1283               	bcf	3,5	;RP0=0, select bank2
   721     0075  1703               	bsf	3,6	;RP1=1, select bank2
   722     0076  008D               	movwf	13	;volatile
   723     0077                     l1527:
   724                           
   725                           ;main.c: 134:                     writeEEPROM(CCPR2L);
   726     0077  1283               	bcf	3,5	;RP0=0, select bank0
   727     0078  1303               	bcf	3,6	;RP1=0, select bank0
   728     0079  081B               	movf	27,w	;volatile
   729     007A  120A  118A  233D  120A  118A  	fcall	_writeEEPROM
   730     007F                     l1529:
   731                           
   732                           ;main.c: 135:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   733     007F  2880               	nop2	;2 cycle nop
   734     0080  2881               	nop2	;2 cycle nop
   735     0081  0000               	nop
   736     0082                     l1531:
   737                           
   738                           ;main.c: 137:                     EEADR = 0b00000010;
   739     0082  3002               	movlw	2
   740     0083  1283               	bcf	3,5	;RP0=0, select bank2
   741     0084  1703               	bsf	3,6	;RP1=1, select bank2
   742     0085  008D               	movwf	13	;volatile
   743     0086                     l1533:
   744                           
   745                           ;main.c: 138:                     writeEEPROM(pot);
   746     0086  1283               	bcf	3,5	;RP0=0, select bank0
   747     0087  1303               	bcf	3,6	;RP1=0, select bank0
   748     0088  083D               	movf	_pot,w
   749     0089  120A  118A  233D  120A  118A  	fcall	_writeEEPROM
   750     008E                     l1535:
   751                           
   752                           ;main.c: 139:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   753     008E  288F               	nop2	;2 cycle nop
   754     008F  2890               	nop2	;2 cycle nop
   755     0090  0000               	nop
   756     0091                     l1537:
   757                           
   758                           ;main.c: 141:                     EEADR = 0b00000011;
   759     0091  3003               	movlw	3
   760     0092  1283               	bcf	3,5	;RP0=0, select bank2
   761     0093  1703               	bsf	3,6	;RP1=1, select bank2
   762     0094  008D               	movwf	13	;volatile
   763     0095                     l1539:
   764                           
   765                           ;main.c: 142:                     writeEEPROM(pot1);
   766     0095  1283               	bcf	3,5	;RP0=0, select bank0
   767     0096  1303               	bcf	3,6	;RP1=0, select bank0
   768     0097  083B               	movf	_pot1,w
   769     0098  120A  118A  233D  120A  118A  	fcall	_writeEEPROM
   770     009D                     l1541:
   771                           
   772                           ;main.c: 143:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   773     009D  289E               	nop2	;2 cycle nop
   774     009E  289F               	nop2	;2 cycle nop
   775     009F  0000               	nop
   776     00A0                     l1543:
   777                           
   778                           ;main.c: 145:                     bandera = 0;}
   779     00A0  1283               	bcf	3,5	;RP0=0, select bank0
   780     00A1  1303               	bcf	3,6	;RP1=0, select bank0
   781     00A2  01C1               	clrf	_bandera
   782     00A3  01C2               	clrf	_bandera+1
   783     00A4                     l1545:
   784                           
   785                           ;main.c: 120:             while (loop == 1){
   786     00A4  033F               	decf	_loop,w
   787     00A5  0440               	iorwf	_loop+1,w
   788     00A6  1903               	btfsc	3,2
   789     00A7  28A9               	goto	u811
   790     00A8  28AA               	goto	u810
   791     00A9                     u811:
   792     00A9  284A               	goto	l155
   793     00AA                     u810:
   794     00AA                     l1547:
   795                           
   796                           ;main.c: 149:         if (selector == 1){
   797     00AA  0343               	decf	_selector,w
   798     00AB  0444               	iorwf	_selector+1,w
   799     00AC  1D03               	btfss	3,2
   800     00AD  28AF               	goto	u821
   801     00AE  28B0               	goto	u820
   802     00AF                     u821:
   803     00AF  2925               	goto	l1595
   804     00B0                     u820:
   805     00B0                     l1549:
   806                           
   807                           ;main.c: 150:             interrup();
   808     00B0  120A  118A  2410  120A  118A  	fcall	_interrup
   809     00B5                     l1551:
   810                           
   811                           ;main.c: 151:             loop = 1;
   812     00B5  3001               	movlw	1
   813     00B6  1283               	bcf	3,5	;RP0=0, select bank0
   814     00B7  1303               	bcf	3,6	;RP1=0, select bank0
   815     00B8  00BF               	movwf	_loop
   816     00B9  3000               	movlw	0
   817     00BA  00C0               	movwf	_loop+1
   818                           
   819                           ;main.c: 152:             while (loop == 1){
   820     00BB  291F               	goto	l1593
   821     00BC                     l162:
   822                           
   823                           ;main.c: 153:                 PORTDbits.RD5 = 0;
   824     00BC  1288               	bcf	8,5	;volatile
   825                           
   826                           ;main.c: 154:                 PORTDbits.RD6 = 1;
   827     00BD  1708               	bsf	8,6	;volatile
   828                           
   829                           ;main.c: 155:                 PORTDbits.RD7 = 0;
   830     00BE  1388               	bcf	8,7	;volatile
   831                           
   832                           ;main.c: 156:             if (PORTBbits.RB6 == 0){
   833     00BF  1B06               	btfsc	6,6	;volatile
   834     00C0  28C2               	goto	u831
   835     00C1  28C3               	goto	u830
   836     00C2                     u831:
   837     00C2  28C7               	goto	l1555
   838     00C3                     u830:
   839     00C3                     l1553:
   840                           
   841                           ;main.c: 157:                 bandera = 2;}
   842     00C3  3002               	movlw	2
   843     00C4  00C1               	movwf	_bandera
   844     00C5  3000               	movlw	0
   845     00C6  00C2               	movwf	_bandera+1
   846     00C7                     l1555:
   847                           
   848                           ;main.c: 158:             if (PORTBbits.RB6 == 1 && bandera == 2){
   849     00C7  1F06               	btfss	6,6	;volatile
   850     00C8  28CA               	goto	u841
   851     00C9  28CB               	goto	u840
   852     00CA                     u841:
   853     00CA  291F               	goto	l1593
   854     00CB                     u840:
   855     00CB                     l1557:
   856     00CB  3002               	movlw	2
   857     00CC  0641               	xorwf	_bandera,w
   858     00CD  0442               	iorwf	_bandera+1,w
   859     00CE  1D03               	btfss	3,2
   860     00CF  28D1               	goto	u851
   861     00D0  28D2               	goto	u850
   862     00D1                     u851:
   863     00D1  291F               	goto	l1593
   864     00D2                     u850:
   865     00D2                     l1559:
   866                           
   867                           ;main.c: 159:                 EEADR = 0b00000000;
   868     00D2  1283               	bcf	3,5	;RP0=0, select bank2
   869     00D3  1703               	bsf	3,6	;RP1=1, select bank2
   870     00D4  018D               	clrf	13	;volatile
   871     00D5                     l1561:
   872                           
   873                           ;main.c: 160:                 readEEPROM();
   874     00D5  120A  118A  241D  120A  118A  	fcall	_readEEPROM
   875     00DA                     l1563:
   876                           
   877                           ;main.c: 161:                 CCPR1L = dato;
   878     00DA  087D               	movf	_dato,w
   879     00DB  1283               	bcf	3,5	;RP0=0, select bank0
   880     00DC  1303               	bcf	3,6	;RP1=0, select bank0
   881     00DD  0095               	movwf	21	;volatile
   882     00DE                     l1565:
   883                           
   884                           ;main.c: 162:                 _delay((unsigned long)((40)*(500000/4000000.0)));
   885     00DE  28DF               	nop2	;2 cycle nop
   886     00DF  28E0               	nop2	;2 cycle nop
   887     00E0  0000               	nop
   888     00E1                     l1567:
   889                           
   890                           ;main.c: 164:                 EEADR = 0b00000001;
   891     00E1  3001               	movlw	1
   892     00E2  1283               	bcf	3,5	;RP0=0, select bank2
   893     00E3  1703               	bsf	3,6	;RP1=1, select bank2
   894     00E4  008D               	movwf	13	;volatile
   895     00E5                     l1569:
   896                           
   897                           ;main.c: 165:                 readEEPROM();
   898     00E5  120A  118A  241D  120A  118A  	fcall	_readEEPROM
   899     00EA                     l1571:
   900                           
   901                           ;main.c: 166:                 CCPR2L = dato;
   902     00EA  087D               	movf	_dato,w
   903     00EB  1283               	bcf	3,5	;RP0=0, select bank0
   904     00EC  1303               	bcf	3,6	;RP1=0, select bank0
   905     00ED  009B               	movwf	27	;volatile
   906     00EE                     l1573:
   907                           
   908                           ;main.c: 167:                 _delay((unsigned long)((40)*(500000/4000000.0)));
   909     00EE  28EF               	nop2	;2 cycle nop
   910     00EF  28F0               	nop2	;2 cycle nop
   911     00F0  0000               	nop
   912     00F1                     l1575:
   913                           
   914                           ;main.c: 169:                 EEADR = 0b00000010;
   915     00F1  3002               	movlw	2
   916     00F2  1283               	bcf	3,5	;RP0=0, select bank2
   917     00F3  1703               	bsf	3,6	;RP1=1, select bank2
   918     00F4  008D               	movwf	13	;volatile
   919     00F5                     l1577:
   920                           
   921                           ;main.c: 170:                 readEEPROM();
   922     00F5  120A  118A  241D  120A  118A  	fcall	_readEEPROM
   923     00FA                     l1579:
   924                           
   925                           ;main.c: 171:                 pot = dato;
   926     00FA  087D               	movf	_dato,w
   927     00FB  1283               	bcf	3,5	;RP0=0, select bank0
   928     00FC  1303               	bcf	3,6	;RP1=0, select bank0
   929     00FD  00B1               	movwf	??_main
   930     00FE  01B2               	clrf	??_main+1
   931     00FF  0831               	movf	??_main,w
   932     0100  00BD               	movwf	_pot
   933     0101  0832               	movf	??_main+1,w
   934     0102  00BE               	movwf	_pot+1
   935     0103                     l1581:
   936                           
   937                           ;main.c: 172:                 _delay((unsigned long)((40)*(500000/4000000.0)));
   938     0103  2904               	nop2	;2 cycle nop
   939     0104  2905               	nop2	;2 cycle nop
   940     0105  0000               	nop
   941     0106                     l1583:
   942                           
   943                           ;main.c: 174:                 EEADR = 0b00000011;
   944     0106  3003               	movlw	3
   945     0107  1283               	bcf	3,5	;RP0=0, select bank2
   946     0108  1703               	bsf	3,6	;RP1=1, select bank2
   947     0109  008D               	movwf	13	;volatile
   948     010A                     l1585:
   949                           
   950                           ;main.c: 175:                 readEEPROM();
   951     010A  120A  118A  241D  120A  118A  	fcall	_readEEPROM
   952     010F                     l1587:
   953                           
   954                           ;main.c: 176:                 pot1 = dato;
   955     010F  087D               	movf	_dato,w
   956     0110  1283               	bcf	3,5	;RP0=0, select bank0
   957     0111  1303               	bcf	3,6	;RP1=0, select bank0
   958     0112  00B1               	movwf	??_main
   959     0113  01B2               	clrf	??_main+1
   960     0114  0831               	movf	??_main,w
   961     0115  00BB               	movwf	_pot1
   962     0116  0832               	movf	??_main+1,w
   963     0117  00BC               	movwf	_pot1+1
   964     0118                     l1589:
   965                           
   966                           ;main.c: 177:                 _delay((unsigned long)((40)*(500000/4000000.0)));
   967     0118  2919               	nop2	;2 cycle nop
   968     0119  291A               	nop2	;2 cycle nop
   969     011A  0000               	nop
   970     011B                     l1591:
   971                           
   972                           ;main.c: 179:                 bandera = 0;}
   973     011B  1283               	bcf	3,5	;RP0=0, select bank0
   974     011C  1303               	bcf	3,6	;RP1=0, select bank0
   975     011D  01C1               	clrf	_bandera
   976     011E  01C2               	clrf	_bandera+1
   977     011F                     l1593:
   978                           
   979                           ;main.c: 152:             while (loop == 1){
   980     011F  033F               	decf	_loop,w
   981     0120  0440               	iorwf	_loop+1,w
   982     0121  1903               	btfsc	3,2
   983     0122  2924               	goto	u861
   984     0123  2925               	goto	u860
   985     0124                     u861:
   986     0124  28BC               	goto	l162
   987     0125                     u860:
   988     0125                     l1595:
   989                           
   990                           ;main.c: 183:         if (selector == 2){
   991     0125  3002               	movlw	2
   992     0126  0643               	xorwf	_selector,w
   993     0127  0444               	iorwf	_selector+1,w
   994     0128  1D03               	btfss	3,2
   995     0129  292B               	goto	u871
   996     012A  292C               	goto	u870
   997     012B                     u871:
   998     012B  283D               	goto	l1507
   999     012C                     u870:
  1000     012C                     l1597:
  1001                           
  1002                           ;main.c: 184:             loop = 1;
  1003     012C  3001               	movlw	1
  1004     012D  00BF               	movwf	_loop
  1005     012E  3000               	movlw	0
  1006     012F  00C0               	movwf	_loop+1
  1007                           
  1008                           ;main.c: 185:             while (loop == 1){
  1009     0130  2934               	goto	l1599
  1010     0131                     l168:
  1011                           
  1012                           ;main.c: 186:             PORTDbits.RD5 = 0;
  1013     0131  1288               	bcf	8,5	;volatile
  1014                           
  1015                           ;main.c: 187:             PORTDbits.RD6 = 0;
  1016     0132  1308               	bcf	8,6	;volatile
  1017                           
  1018                           ;main.c: 188:             PORTDbits.RD7 = 1;
  1019     0133  1788               	bsf	8,7	;volatile
  1020     0134                     l1599:
  1021                           
  1022                           ;main.c: 185:             while (loop == 1){
  1023     0134  033F               	decf	_loop,w
  1024     0135  0440               	iorwf	_loop+1,w
  1025     0136  1903               	btfsc	3,2
  1026     0137  2939               	goto	u881
  1027     0138  293A               	goto	u880
  1028     0139                     u881:
  1029     0139  2931               	goto	l168
  1030     013A                     u880:
  1031     013A  283D               	goto	l1507
  1032     013B  120A  118A  280E   	ljmp	start
  1033     013E                     __end_of_main:
  1034                           
  1035                           	psect	text1
  1036     033D                     __ptext1:	
  1037 ;; *************** function _writeEEPROM *****************
  1038 ;; Defined at:
  1039 ;;		line 322 in file "main.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  data            1    wreg     unsigned char 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  data            1   15[BANK0 ] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       1       0       0       0
  1055 ;;      Temps:          0       0       0       0       0
  1056 ;;      Totals:         0       1       0       0       0
  1057 ;;Total ram usage:        1 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 4
  1060 ;; This function calls:
  1061 ;;		_interrup
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067     033D                     _writeEEPROM:	
  1068                           ;psect for function _writeEEPROM
  1069                           
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _writeEEPROM: [wreg+status,2+status,0+pclath+cstack]
  1073                           ;writeEEPROM@data stored from wreg
  1074     033D  1283               	bcf	3,5	;RP0=0, select bank0
  1075     033E  1303               	bcf	3,6	;RP1=0, select bank0
  1076     033F  00AF               	movwf	writeEEPROM@data
  1077     0340                     l1409:
  1078                           
  1079                           ;main.c: 323:     EEDATA = data;
  1080     0340  082F               	movf	writeEEPROM@data,w
  1081     0341  1283               	bcf	3,5	;RP0=0, select bank2
  1082     0342  1703               	bsf	3,6	;RP1=1, select bank2
  1083     0343  008C               	movwf	12	;volatile
  1084     0344                     l1411:
  1085                           
  1086                           ;main.c: 324:     EECON1bits.EEPGD = 0;
  1087     0344  1683               	bsf	3,5	;RP0=1, select bank3
  1088     0345  1703               	bsf	3,6	;RP1=1, select bank3
  1089     0346  138C               	bcf	12,7	;volsfr
  1090     0347                     l1413:
  1091                           
  1092                           ;main.c: 325:     EECON1bits.WREN = 1;
  1093     0347  150C               	bsf	12,2	;volsfr
  1094     0348                     l1415:
  1095                           
  1096                           ;main.c: 327:     INTCONbits.GIE = 0;
  1097     0348  138B               	bcf	11,7	;volatile
  1098     0349                     l193:	
  1099                           ;main.c: 328:     while (INTCONbits.GIE == 1);
  1100                           
  1101     0349  1B8B               	btfsc	11,7	;volatile
  1102     034A  2B4C               	goto	u631
  1103     034B  2B4D               	goto	u630
  1104     034C                     u631:
  1105     034C  2B49               	goto	l193
  1106     034D                     u630:
  1107     034D                     l195:
  1108                           
  1109                           ;main.c: 329:     _delay((unsigned long)((50)*(500000/4000000.0)));
  1110     034D  2B4E               	nop2	;2 cycle nop
  1111     034E  2B4F               	nop2	;2 cycle nop
  1112     034F  2B50               	nop2	;2 cycle nop
  1113     0350                     l1417:
  1114                           
  1115                           ;main.c: 330:     EECON2 = 0x55;
  1116     0350  3055               	movlw	85
  1117     0351  1683               	bsf	3,5	;RP0=1, select bank3
  1118     0352  1703               	bsf	3,6	;RP1=1, select bank3
  1119     0353  008D               	movwf	13	;volsfr
  1120                           
  1121                           ;main.c: 331:     EECON2 = 0xAA;
  1122     0354  30AA               	movlw	170
  1123     0355  008D               	movwf	13	;volsfr
  1124     0356                     l1419:
  1125                           
  1126                           ;main.c: 332:     EECON1bits.WR = 1;
  1127     0356  148C               	bsf	12,1	;volsfr
  1128     0357                     l1421:
  1129                           
  1130                           ;main.c: 333:     interrup();
  1131     0357  120A  118A  2410  120A  118A  	fcall	_interrup
  1132     035C                     l1423:
  1133                           
  1134                           ;main.c: 334:     _delay((unsigned long)((50)*(500000/4000000.0)));
  1135     035C  2B5D               	nop2	;2 cycle nop
  1136     035D  2B5E               	nop2	;2 cycle nop
  1137     035E  2B5F               	nop2	;2 cycle nop
  1138     035F                     l196:	
  1139                           ;main.c: 336:     while (EECON1bits.WR == 1);
  1140                           
  1141     035F  1683               	bsf	3,5	;RP0=1, select bank3
  1142     0360  1703               	bsf	3,6	;RP1=1, select bank3
  1143     0361  188C               	btfsc	12,1	;volsfr
  1144     0362  2B64               	goto	u641
  1145     0363  2B65               	goto	u640
  1146     0364                     u641:
  1147     0364  2B5F               	goto	l196
  1148     0365                     u640:
  1149     0365                     l198:
  1150                           
  1151                           ;main.c: 337:     EECON1bits.WREN = 0;
  1152     0365  110C               	bcf	12,2	;volsfr
  1153     0366                     l199:
  1154     0366  0008               	return
  1155     0367                     __end_of_writeEEPROM:
  1156                           
  1157                           	psect	text2
  1158     0410                     __ptext2:	
  1159 ;; *************** function _interrup *****************
  1160 ;; Defined at:
  1161 ;;		line 340 in file "main.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		None
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0
  1178 ;;      Totals:         0       0       0       0       0
  1179 ;;Total ram usage:        0 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 3
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;;		_writeEEPROM
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190     0410                     _interrup:	
  1191                           ;psect for function _interrup
  1192                           
  1193     0410                     l1205:	
  1194                           ;incstack = 0
  1195                           ; Regs used in _interrup: []
  1196                           
  1197                           
  1198                           ;main.c: 341:     INTCONbits.GIE = 1;
  1199     0410  178B               	bsf	11,7	;volatile
  1200                           
  1201                           ;main.c: 342:     INTCONbits.PEIE = 1;
  1202     0411  170B               	bsf	11,6	;volatile
  1203                           
  1204                           ;main.c: 343:     INTCONbits.RBIE = 1;
  1205     0412  158B               	bsf	11,3	;volatile
  1206                           
  1207                           ;main.c: 344:     INTCONbits.RBIF = 0;
  1208     0413  100B               	bcf	11,0	;volatile
  1209                           
  1210                           ;main.c: 345:     INTCONbits.T0IE = 1;
  1211     0414  168B               	bsf	11,5	;volatile
  1212                           
  1213                           ;main.c: 346:     INTCONbits.T0IF = 0;
  1214     0415  110B               	bcf	11,2	;volatile
  1215                           
  1216                           ;main.c: 347:     PIE1bits.ADIE = 1;
  1217     0416  1683               	bsf	3,5	;RP0=1, select bank1
  1218     0417  1303               	bcf	3,6	;RP1=0, select bank1
  1219     0418  170C               	bsf	12,6	;volatile
  1220                           
  1221                           ;main.c: 348:     PIR1bits.ADIF = 0;
  1222     0419  1283               	bcf	3,5	;RP0=0, select bank0
  1223     041A  1303               	bcf	3,6	;RP1=0, select bank0
  1224     041B  130C               	bcf	12,6	;volatile
  1225     041C                     l202:
  1226     041C  0008               	return
  1227     041D                     __end_of_interrup:
  1228                           
  1229                           	psect	text3
  1230     03EA                     __ptext3:	
  1231 ;; *************** function _setupUART *****************
  1232 ;; Defined at:
  1233 ;;		line 294 in file "main.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; Hardware stack levels required when called: 3
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261     03EA                     _setupUART:	
  1262                           ;psect for function _setupUART
  1263                           
  1264     03EA                     l1385:	
  1265                           ;incstack = 0
  1266                           ; Regs used in _setupUART: [wreg+status,2]
  1267                           
  1268                           
  1269                           ;main.c: 296:     BAUDCTLbits.BRG16 = 1;
  1270     03EA  1683               	bsf	3,5	;RP0=1, select bank3
  1271     03EB  1703               	bsf	3,6	;RP1=1, select bank3
  1272     03EC  1587               	bsf	7,3	;volatile
  1273                           
  1274                           ;main.c: 297:     TXSTAbits.BRGH = 1;
  1275     03ED  1683               	bsf	3,5	;RP0=1, select bank1
  1276     03EE  1303               	bcf	3,6	;RP1=0, select bank1
  1277     03EF  1518               	bsf	24,2	;volatile
  1278     03F0                     l1387:
  1279                           
  1280                           ;main.c: 298:     SPBRGH = 0;
  1281     03F0  019A               	clrf	26	;volatile
  1282     03F1                     l1389:
  1283                           
  1284                           ;main.c: 299:     SPBRG = 12;
  1285     03F1  300C               	movlw	12
  1286     03F2  0099               	movwf	25	;volatile
  1287     03F3                     l1391:
  1288                           
  1289                           ;main.c: 303:     TXSTAbits.SYNC = 0;
  1290     03F3  1218               	bcf	24,4	;volatile
  1291     03F4                     l1393:
  1292                           
  1293                           ;main.c: 304:     RCSTAbits.SPEN = 1;
  1294     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1295     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1296     03F6  1798               	bsf	24,7	;volatile
  1297     03F7                     l1395:
  1298                           
  1299                           ;main.c: 310:     TXSTAbits.TXEN = 1;
  1300     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  1301     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  1302     03F9  1698               	bsf	24,5	;volatile
  1303     03FA                     l1397:
  1304                           
  1305                           ;main.c: 311:     PIR1bits.TXIF = 0;
  1306     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1307     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1308     03FC  120C               	bcf	12,4	;volatile
  1309     03FD                     l1399:
  1310                           
  1311                           ;main.c: 312:     RCSTAbits.CREN = 1;
  1312     03FD  1618               	bsf	24,4	;volatile
  1313     03FE                     l187:
  1314     03FE  0008               	return
  1315     03FF                     __end_of_setupUART:
  1316                           
  1317                           	psect	text4
  1318     0367                     __ptext4:	
  1319 ;; *************** function _setupPWM *****************
  1320 ;; Defined at:
  1321 ;;		line 269 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 3
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     0367                     _setupPWM:	
  1350                           ;psect for function _setupPWM
  1351                           
  1352     0367                     l1359:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
  1355                           
  1356                           
  1357                           ;main.c: 271:     TRISCbits.TRISC2 = 1;
  1358     0367  1683               	bsf	3,5	;RP0=1, select bank1
  1359     0368  1303               	bcf	3,6	;RP1=0, select bank1
  1360     0369  1507               	bsf	7,2	;volatile
  1361     036A                     l1361:
  1362                           
  1363                           ;main.c: 272:     PR2 = 155;
  1364     036A  309B               	movlw	155
  1365     036B  0092               	movwf	18	;volatile
  1366                           
  1367                           ;main.c: 273:     CCP1CON = 0b00001100;
  1368     036C  300C               	movlw	12
  1369     036D  1283               	bcf	3,5	;RP0=0, select bank0
  1370     036E  1303               	bcf	3,6	;RP1=0, select bank0
  1371     036F  0097               	movwf	23	;volatile
  1372     0370                     l1363:
  1373                           
  1374                           ;main.c: 274:     CCP1CONbits.DC1B = 0b11;
  1375     0370  3030               	movlw	48
  1376     0371  0497               	iorwf	23,f	;volatile
  1377     0372                     l1365:
  1378                           
  1379                           ;main.c: 275:     CCPR1L = 11;
  1380     0372  300B               	movlw	11
  1381     0373  0095               	movwf	21	;volatile
  1382     0374                     l1367:
  1383                           
  1384                           ;main.c: 276:     PIR1bits.TMR2IF = 0;
  1385     0374  108C               	bcf	12,1	;volatile
  1386     0375                     l1369:
  1387                           
  1388                           ;main.c: 277:     T2CONbits.T2CKPS1 = 1;
  1389     0375  1492               	bsf	18,1	;volatile
  1390     0376                     l1371:
  1391                           
  1392                           ;main.c: 278:     T2CONbits.T2CKPS0 = 1;
  1393     0376  1412               	bsf	18,0	;volatile
  1394     0377                     l1373:
  1395                           
  1396                           ;main.c: 279:     T2CONbits.TMR2ON = 1;
  1397     0377  1512               	bsf	18,2	;volatile
  1398     0378                     l1375:
  1399                           
  1400                           ;main.c: 282:    TRISCbits.TRISC1 = 1;
  1401     0378  1683               	bsf	3,5	;RP0=1, select bank1
  1402     0379  1303               	bcf	3,6	;RP1=0, select bank1
  1403     037A  1487               	bsf	7,1	;volatile
  1404     037B                     l1377:
  1405                           
  1406                           ;main.c: 283:    CCP2CON = 0b00001100;
  1407     037B  300C               	movlw	12
  1408     037C  1283               	bcf	3,5	;RP0=0, select bank0
  1409     037D  1303               	bcf	3,6	;RP1=0, select bank0
  1410     037E  009D               	movwf	29	;volatile
  1411     037F                     l1379:
  1412                           
  1413                           ;main.c: 284:    CCP2CONbits.DC2B0 = 1;
  1414     037F  161D               	bsf	29,4	;volatile
  1415     0380                     l1381:
  1416                           
  1417                           ;main.c: 285:    CCP2CONbits.DC2B1 = 1;
  1418     0380  169D               	bsf	29,5	;volatile
  1419     0381                     l1383:
  1420                           
  1421                           ;main.c: 286:    CCPR2L = 11;
  1422     0381  300B               	movlw	11
  1423     0382  009B               	movwf	27	;volatile
  1424     0383                     l181:	
  1425                           ;main.c: 288:    while (PIR1bits.TMR2IF == 0);
  1426                           
  1427     0383  1C8C               	btfss	12,1	;volatile
  1428     0384  2B86               	goto	u601
  1429     0385  2B87               	goto	u600
  1430     0386                     u601:
  1431     0386  2B83               	goto	l181
  1432     0387                     u600:
  1433     0387                     l183:
  1434                           
  1435                           ;main.c: 289:     PIR1bits.TMR2IF = 0;
  1436     0387  108C               	bcf	12,1	;volatile
  1437                           
  1438                           ;main.c: 290:     TRISCbits.TRISC2 = 0;
  1439     0388  1683               	bsf	3,5	;RP0=1, select bank1
  1440     0389  1303               	bcf	3,6	;RP1=0, select bank1
  1441     038A  1107               	bcf	7,2	;volatile
  1442                           
  1443                           ;main.c: 291:     TRISCbits.TRISC1 = 0;
  1444     038B  1087               	bcf	7,1	;volatile
  1445     038C                     l184:
  1446     038C  0008               	return
  1447     038D                     __end_of_setupPWM:
  1448                           
  1449                           	psect	text5
  1450     03D3                     __ptext5:	
  1451 ;; *************** function _setupADC *****************
  1452 ;; Defined at:
  1453 ;;		line 250 in file "main.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0
  1469 ;;      Temps:          0       1       0       0       0
  1470 ;;      Totals:         0       1       0       0       0
  1471 ;;Total ram usage:        1 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 3
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481     03D3                     _setupADC:	
  1482                           ;psect for function _setupADC
  1483                           
  1484     03D3                     l1355:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _setupADC: [wreg]
  1487                           
  1488                           
  1489                           ;main.c: 251:     ADCON0bits.ADCS1 = 0;
  1490     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1491     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1492     03D5  139F               	bcf	31,7	;volatile
  1493                           
  1494                           ;main.c: 252:     ADCON0bits.ADCS0 = 0;
  1495     03D6  131F               	bcf	31,6	;volatile
  1496                           
  1497                           ;main.c: 254:     ADCON1bits.VCFG1 = 0;
  1498     03D7  1683               	bsf	3,5	;RP0=1, select bank1
  1499     03D8  1303               	bcf	3,6	;RP1=0, select bank1
  1500     03D9  129F               	bcf	31,5	;volatile
  1501                           
  1502                           ;main.c: 255:     ADCON1bits.VCFG0 = 0;
  1503     03DA  121F               	bcf	31,4	;volatile
  1504                           
  1505                           ;main.c: 257:     ADCON1bits.ADFM = 0;
  1506     03DB  139F               	bcf	31,7	;volatile
  1507                           
  1508                           ;main.c: 259:     ADCON0bits.CHS3 = 0;
  1509     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1510     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1511     03DE  129F               	bcf	31,5	;volatile
  1512                           
  1513                           ;main.c: 260:     ADCON0bits.CHS2 = 0;
  1514     03DF  121F               	bcf	31,4	;volatile
  1515                           
  1516                           ;main.c: 261:     ADCON0bits.CHS1 = 0;
  1517     03E0  119F               	bcf	31,3	;volatile
  1518                           
  1519                           ;main.c: 262:     ADCON0bits.CHS0 = 0;
  1520     03E1  111F               	bcf	31,2	;volatile
  1521                           
  1522                           ;main.c: 264:     ADCON0bits.ADON = 1;
  1523     03E2  141F               	bsf	31,0	;volatile
  1524     03E3                     l1357:
  1525                           
  1526                           ;main.c: 265:     _delay((unsigned long)((100)*(500000/4000000.0)));
  1527     03E3  3003               	movlw	3
  1528     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1529     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1530     03E6  00AF               	movwf	??_setupADC
  1531     03E7                     u897:
  1532     03E7  0BAF               	decfsz	??_setupADC,f
  1533     03E8  2BE7               	goto	u897
  1534     03E9                     l178:
  1535     03E9  0008               	return
  1536     03EA                     __end_of_setupADC:
  1537                           
  1538                           	psect	text6
  1539     029C                     __ptext6:	
  1540 ;; *************** function _setup *****************
  1541 ;; Defined at:
  1542 ;;		line 193 in file "main.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		status,2
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0
  1559 ;;      Totals:         0       0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 3
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570     029C                     _setup:	
  1571                           ;psect for function _setup
  1572                           
  1573     029C                     l1275:	
  1574                           ;incstack = 0
  1575                           ; Regs used in _setup: [status,2]
  1576                           
  1577                           
  1578                           ;main.c: 194:     ANSELH = 0;
  1579     029C  1683               	bsf	3,5	;RP0=1, select bank3
  1580     029D  1703               	bsf	3,6	;RP1=1, select bank3
  1581     029E  0189               	clrf	9	;volatile
  1582     029F                     l1277:
  1583                           
  1584                           ;main.c: 195:     ANSELbits.ANS0 = 1;
  1585     029F  1408               	bsf	8,0	;volatile
  1586     02A0                     l1279:
  1587                           
  1588                           ;main.c: 196:     ANSELbits.ANS1 = 1;
  1589     02A0  1488               	bsf	8,1	;volatile
  1590     02A1                     l1281:
  1591                           
  1592                           ;main.c: 197:     ANSELbits.ANS2 = 1;
  1593     02A1  1508               	bsf	8,2	;volatile
  1594     02A2                     l1283:
  1595                           
  1596                           ;main.c: 198:     ANSELbits.ANS3 = 1;
  1597     02A2  1588               	bsf	8,3	;volatile
  1598     02A3                     l1285:
  1599                           
  1600                           ;main.c: 199:     TRISBbits.TRISB7 = 1;
  1601     02A3  1683               	bsf	3,5	;RP0=1, select bank1
  1602     02A4  1303               	bcf	3,6	;RP1=0, select bank1
  1603     02A5  1786               	bsf	6,7	;volatile
  1604     02A6                     l1287:
  1605                           
  1606                           ;main.c: 200:     TRISBbits.TRISB6 = 1;
  1607     02A6  1706               	bsf	6,6	;volatile
  1608     02A7                     l1289:
  1609                           
  1610                           ;main.c: 201:     TRISBbits.TRISB5 = 1;
  1611     02A7  1686               	bsf	6,5	;volatile
  1612     02A8                     l1291:
  1613                           
  1614                           ;main.c: 202:     TRISBbits.TRISB4 = 1;
  1615     02A8  1606               	bsf	6,4	;volatile
  1616     02A9                     l1293:
  1617                           
  1618                           ;main.c: 203:     TRISBbits.TRISB3 = 1;
  1619     02A9  1586               	bsf	6,3	;volatile
  1620     02AA                     l1295:
  1621                           
  1622                           ;main.c: 204:     TRISCbits.TRISC0 = 0;
  1623     02AA  1007               	bcf	7,0	;volatile
  1624     02AB                     l1297:
  1625                           
  1626                           ;main.c: 205:     TRISCbits.TRISC3 = 0;
  1627     02AB  1187               	bcf	7,3	;volatile
  1628                           
  1629                           ;main.c: 206:     TRISE = 0;
  1630     02AC  0189               	clrf	9	;volatile
  1631                           
  1632                           ;main.c: 207:     TRISD = 0;
  1633     02AD  0188               	clrf	8	;volatile
  1634                           
  1635                           ;main.c: 208:     PORTA = 0;
  1636     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1637     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1638     02B0  0185               	clrf	5	;volatile
  1639                           
  1640                           ;main.c: 209:     PORTB = 0;
  1641     02B1  0186               	clrf	6	;volatile
  1642                           
  1643                           ;main.c: 210:     PORTD = 0;
  1644     02B2  0188               	clrf	8	;volatile
  1645                           
  1646                           ;main.c: 211:     PORTE = 0;
  1647     02B3  0189               	clrf	9	;volatile
  1648     02B4                     l1299:
  1649                           
  1650                           ;main.c: 213:     INTCONbits.GIE = 1;
  1651     02B4  178B               	bsf	11,7	;volatile
  1652     02B5                     l1301:
  1653                           
  1654                           ;main.c: 214:     INTCONbits.PEIE = 1;
  1655     02B5  170B               	bsf	11,6	;volatile
  1656     02B6                     l1303:
  1657                           
  1658                           ;main.c: 215:     INTCONbits.RBIE = 1;
  1659     02B6  158B               	bsf	11,3	;volatile
  1660     02B7                     l1305:
  1661                           
  1662                           ;main.c: 216:     INTCONbits.RBIF = 0;
  1663     02B7  100B               	bcf	11,0	;volatile
  1664     02B8                     l1307:
  1665                           
  1666                           ;main.c: 217:     INTCONbits.T0IE = 1;
  1667     02B8  168B               	bsf	11,5	;volatile
  1668     02B9                     l1309:
  1669                           
  1670                           ;main.c: 218:     INTCONbits.T0IF = 0;
  1671     02B9  110B               	bcf	11,2	;volatile
  1672     02BA                     l1311:
  1673                           
  1674                           ;main.c: 219:     PIE1bits.ADIE = 1;
  1675     02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1676     02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1677     02BC  170C               	bsf	12,6	;volatile
  1678     02BD                     l1313:
  1679                           
  1680                           ;main.c: 220:     PIR1bits.ADIF = 0;
  1681     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1682     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1683     02BF  130C               	bcf	12,6	;volatile
  1684     02C0                     l1315:
  1685                           
  1686                           ;main.c: 222:     OSCCONbits.IRCF2 = 0;
  1687     02C0  1683               	bsf	3,5	;RP0=1, select bank1
  1688     02C1  1303               	bcf	3,6	;RP1=0, select bank1
  1689     02C2  130F               	bcf	15,6	;volatile
  1690     02C3                     l1317:
  1691                           
  1692                           ;main.c: 223:     OSCCONbits.IRCF1 = 1;
  1693     02C3  168F               	bsf	15,5	;volatile
  1694     02C4                     l1319:
  1695                           
  1696                           ;main.c: 224:     OSCCONbits.IRCF0 = 1;
  1697     02C4  160F               	bsf	15,4	;volatile
  1698     02C5                     l1321:
  1699                           
  1700                           ;main.c: 225:     OSCCONbits.SCS = 1;
  1701     02C5  140F               	bsf	15,0	;volatile
  1702     02C6                     l1323:
  1703                           
  1704                           ;main.c: 227:     OPTION_REGbits.nRBPU = 0;
  1705     02C6  1381               	bcf	1,7	;volatile
  1706     02C7                     l1325:
  1707                           
  1708                           ;main.c: 228:     OPTION_REGbits.T0CS = 0;
  1709     02C7  1281               	bcf	1,5	;volatile
  1710     02C8                     l1327:
  1711                           
  1712                           ;main.c: 229:     OPTION_REGbits.PSA = 0;
  1713     02C8  1181               	bcf	1,3	;volatile
  1714     02C9                     l1329:
  1715                           
  1716                           ;main.c: 230:     OPTION_REGbits.PS2 = 1;
  1717     02C9  1501               	bsf	1,2	;volatile
  1718     02CA                     l1331:
  1719                           
  1720                           ;main.c: 231:     OPTION_REGbits.PS1 = 1;
  1721     02CA  1481               	bsf	1,1	;volatile
  1722     02CB                     l1333:
  1723                           
  1724                           ;main.c: 232:     OPTION_REGbits.PS0 = 1;
  1725     02CB  1401               	bsf	1,0	;volatile
  1726     02CC                     l1335:
  1727                           
  1728                           ;main.c: 234:     WPUBbits.WPUB7 = 1;
  1729     02CC  1795               	bsf	21,7	;volatile
  1730     02CD                     l1337:
  1731                           
  1732                           ;main.c: 235:     WPUBbits.WPUB6 = 1;
  1733     02CD  1715               	bsf	21,6	;volatile
  1734     02CE                     l1339:
  1735                           
  1736                           ;main.c: 236:     WPUBbits.WPUB5 = 1;
  1737     02CE  1695               	bsf	21,5	;volatile
  1738     02CF                     l1341:
  1739                           
  1740                           ;main.c: 237:     WPUBbits.WPUB4 = 1;
  1741     02CF  1615               	bsf	21,4	;volatile
  1742     02D0                     l1343:
  1743                           
  1744                           ;main.c: 238:     WPUBbits.WPUB3 = 1;
  1745     02D0  1595               	bsf	21,3	;volatile
  1746     02D1                     l1345:
  1747                           
  1748                           ;main.c: 240:     IOCBbits.IOCB7 = 1;
  1749     02D1  1796               	bsf	22,7	;volatile
  1750     02D2                     l1347:
  1751                           
  1752                           ;main.c: 241:     IOCBbits.IOCB6 = 0;
  1753     02D2  1316               	bcf	22,6	;volatile
  1754     02D3                     l1349:
  1755                           
  1756                           ;main.c: 242:     IOCBbits.IOCB5 = 0;
  1757     02D3  1296               	bcf	22,5	;volatile
  1758     02D4                     l1351:
  1759                           
  1760                           ;main.c: 243:     IOCBbits.IOCB4 = 0;
  1761     02D4  1216               	bcf	22,4	;volatile
  1762     02D5                     l1353:
  1763                           
  1764                           ;main.c: 244:     IOCBbits.IOCB3 = 0;
  1765     02D5  1196               	bcf	22,3	;volatile
  1766                           
  1767                           ;main.c: 246:     EEADRH = 0;
  1768     02D6  1283               	bcf	3,5	;RP0=0, select bank2
  1769     02D7  1703               	bsf	3,6	;RP1=1, select bank2
  1770     02D8  018F               	clrf	15	;volatile
  1771     02D9                     l175:
  1772     02D9  0008               	return
  1773     02DA                     __end_of_setup:
  1774                           
  1775                           	psect	text7
  1776     041D                     __ptext7:	
  1777 ;; *************** function _readEEPROM *****************
  1778 ;; Defined at:
  1779 ;;		line 315 in file "main.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      unsigned char 
  1786 ;; Registers used:
  1787 ;;		wreg
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 3
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807     041D                     _readEEPROM:	
  1808                           ;psect for function _readEEPROM
  1809                           
  1810     041D                     l1425:	
  1811                           ;incstack = 0
  1812                           ; Regs used in _readEEPROM: [wreg]
  1813                           
  1814                           
  1815                           ;main.c: 316:     EECON1bits.EEPGD = 0;
  1816     041D  1683               	bsf	3,5	;RP0=1, select bank3
  1817     041E  1703               	bsf	3,6	;RP1=1, select bank3
  1818     041F  138C               	bcf	12,7	;volsfr
  1819                           
  1820                           ;main.c: 317:     EECON1bits.RD = 1;
  1821     0420  140C               	bsf	12,0	;volsfr
  1822     0421                     l1427:
  1823                           
  1824                           ;main.c: 318:     dato = EEDATA;
  1825     0421  1283               	bcf	3,5	;RP0=0, select bank2
  1826     0422  1703               	bsf	3,6	;RP1=1, select bank2
  1827     0423  080C               	movf	12,w	;volatile
  1828     0424  00FD               	movwf	_dato
  1829     0425                     l190:
  1830     0425  0008               	return
  1831     0426                     __end_of_readEEPROM:
  1832                           
  1833                           	psect	text8
  1834     03B2                     __ptext8:	
  1835 ;; *************** function _cadena *****************
  1836 ;; Defined at:
  1837 ;;		line 360 in file "main.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  cursor          1    wreg     PTR unsigned char 
  1840 ;;		 -> STR_1(40), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  cursor          1   16[BANK0 ] PTR unsigned char 
  1843 ;;		 -> STR_1(40), 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       0       0       0       0
  1854 ;;      Locals:         0       1       0       0       0
  1855 ;;      Temps:          0       1       0       0       0
  1856 ;;      Totals:         0       2       0       0       0
  1857 ;;Total ram usage:        2 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; Hardware stack levels required when called: 3
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867     03B2                     _cadena:	
  1868                           ;psect for function _cadena
  1869                           
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+pclath]
  1873                           ;cadena@cursor stored from wreg
  1874     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1875     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1876     03B4  00B0               	movwf	cadena@cursor
  1877     03B5                     l1401:
  1878                           
  1879                           ;main.c: 361:     while (*cursor != '\0'){
  1880     03B5  2BC6               	goto	l1407
  1881     03B6                     l213:
  1882     03B6  1E0C               	btfss	12,4	;volatile
  1883     03B7  2BB9               	goto	u611
  1884     03B8  2BBA               	goto	u610
  1885     03B9                     u611:
  1886     03B9  2BB6               	goto	l213
  1887     03BA                     u610:
  1888     03BA                     l1403:
  1889                           
  1890                           ;main.c: 363:             TXREG = *cursor;
  1891     03BA  0830               	movf	cadena@cursor,w
  1892     03BB  0084               	movwf	4
  1893     03BC  120A  118A  230F  120A  118A  	fcall	stringdir
  1894     03C1  0099               	movwf	25	;volatile
  1895     03C2                     l1405:
  1896                           
  1897                           ;main.c: 364:             *cursor++;
  1898     03C2  3001               	movlw	1
  1899     03C3  00AF               	movwf	??_cadena
  1900     03C4  082F               	movf	??_cadena,w
  1901     03C5  07B0               	addwf	cadena@cursor,f
  1902     03C6                     l1407:
  1903                           
  1904                           ;main.c: 361:     while (*cursor != '\0'){
  1905     03C6  0830               	movf	cadena@cursor,w
  1906     03C7  0084               	movwf	4
  1907     03C8  120A  118A  230F  120A  118A  	fcall	stringdir
  1908     03CD  3A00               	xorlw	0
  1909     03CE  1D03               	skipz
  1910     03CF  2BD1               	goto	u621
  1911     03D0  2BD2               	goto	u620
  1912     03D1                     u621:
  1913     03D1  2BB6               	goto	l213
  1914     03D2                     u620:
  1915     03D2                     l217:
  1916     03D2  0008               	return
  1917     03D3                     __end_of_cadena:
  1918                           
  1919                           	psect	text9
  1920     013E                     __ptext9:	
  1921 ;; *************** function _isr *****************
  1922 ;; Defined at:
  1923 ;;		line 54 in file "main.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, pclath, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0
  1939 ;;      Temps:          0       3       0       0       0
  1940 ;;      Totals:         0       3       0       0       0
  1941 ;;Total ram usage:        3 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 2
  1944 ;; This function calls:
  1945 ;;		_delay
  1946 ;;		_map
  1947 ;; This function is called by:
  1948 ;;		Interrupt level 1
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952     013E                     _isr:	
  1953                           ;psect for function _isr
  1954                           
  1955     013E                     i1l1431:
  1956                           
  1957                           ;main.c: 55:     if (INTCONbits.RBIF == 1){
  1958     013E  1C0B               	btfss	11,0	;volatile
  1959     013F  2941               	goto	u65_21
  1960     0140  2942               	goto	u65_20
  1961     0141                     u65_21:
  1962     0141  2968               	goto	i1l1451
  1963     0142                     u65_20:
  1964     0142                     i1l1433:
  1965                           
  1966                           ;main.c: 56:         INTCONbits.RBIF = 0;
  1967     0142  100B               	bcf	11,0	;volatile
  1968                           
  1969                           ;main.c: 57:         if (PORTBbits.RB7 == 0){
  1970     0143  1B86               	btfsc	6,7	;volatile
  1971     0144  2946               	goto	u66_21
  1972     0145  2947               	goto	u66_20
  1973     0146                     u66_21:
  1974     0146  294B               	goto	i1l1437
  1975     0147                     u66_20:
  1976     0147                     i1l1435:
  1977                           
  1978                           ;main.c: 58:             bandera = 1;}
  1979     0147  3001               	movlw	1
  1980     0148  00C1               	movwf	_bandera
  1981     0149  3000               	movlw	0
  1982     014A  00C2               	movwf	_bandera+1
  1983     014B                     i1l1437:
  1984                           
  1985                           ;main.c: 59:         if (PORTBbits.RB7 == 1 && bandera == 1){
  1986     014B  1F86               	btfss	6,7	;volatile
  1987     014C  294E               	goto	u67_21
  1988     014D  294F               	goto	u67_20
  1989     014E                     u67_21:
  1990     014E  2968               	goto	i1l1451
  1991     014F                     u67_20:
  1992     014F                     i1l1439:
  1993     014F  0341               	decf	_bandera,w
  1994     0150  0442               	iorwf	_bandera+1,w
  1995     0151  1D03               	btfss	3,2
  1996     0152  2954               	goto	u68_21
  1997     0153  2955               	goto	u68_20
  1998     0154                     u68_21:
  1999     0154  2968               	goto	i1l1451
  2000     0155                     u68_20:
  2001     0155                     i1l1441:
  2002                           
  2003                           ;main.c: 60:             selector++;
  2004     0155  3001               	movlw	1
  2005     0156  07C3               	addwf	_selector,f
  2006     0157  1803               	skipnc
  2007     0158  0AC4               	incf	_selector+1,f
  2008     0159  3000               	movlw	0
  2009     015A  07C4               	addwf	_selector+1,f
  2010     015B                     i1l1443:
  2011                           
  2012                           ;main.c: 61:             loop = 0;
  2013     015B  01BF               	clrf	_loop
  2014     015C  01C0               	clrf	_loop+1
  2015     015D                     i1l1445:
  2016                           
  2017                           ;main.c: 62:             bandera = 0;
  2018     015D  01C1               	clrf	_bandera
  2019     015E  01C2               	clrf	_bandera+1
  2020     015F                     i1l1447:
  2021                           
  2022                           ;main.c: 63:             if (selector == 3){
  2023     015F  3003               	movlw	3
  2024     0160  0643               	xorwf	_selector,w
  2025     0161  0444               	iorwf	_selector+1,w
  2026     0162  1D03               	btfss	3,2
  2027     0163  2965               	goto	u69_21
  2028     0164  2966               	goto	u69_20
  2029     0165                     u69_21:
  2030     0165  2968               	goto	i1l1451
  2031     0166                     u69_20:
  2032     0166                     i1l1449:
  2033                           
  2034                           ;main.c: 64:                 selector = 0;}
  2035     0166  01C3               	clrf	_selector
  2036     0167  01C4               	clrf	_selector+1
  2037     0168                     i1l1451:
  2038                           
  2039                           ;main.c: 68:     if (PIR1bits.ADIF == 1){
  2040     0168  1F0C               	btfss	12,6	;volatile
  2041     0169  296B               	goto	u70_21
  2042     016A  296C               	goto	u70_20
  2043     016B                     u70_21:
  2044     016B  2A0B               	goto	i1l1479
  2045     016C                     u70_20:
  2046     016C                     i1l1453:
  2047                           
  2048                           ;main.c: 69:         if (ADCON0bits.CHS == 0b0000){
  2049     016C  0C1F               	rrf	31,w	;volatile
  2050     016D  00AC               	movwf	??_isr
  2051     016E  0C2C               	rrf	??_isr,w
  2052     016F  390F               	andlw	15
  2053     0170  3A00               	xorlw	0
  2054     0171  1D03               	skipz
  2055     0172  2974               	goto	u71_21
  2056     0173  2975               	goto	u71_20
  2057     0174                     u71_21:
  2058     0174  2993               	goto	i1l1459
  2059     0175                     u71_20:
  2060     0175                     i1l1455:
  2061                           
  2062                           ;main.c: 70:             CCPR1L = map(ADRESH, 0, 255, 7, 15);
  2063     0175  3000               	movlw	0
  2064     0176  00A4               	movwf	map@inputmin
  2065     0177  00A5               	movwf	map@inputmin+1
  2066     0178  30FF               	movlw	255
  2067     0179  00A6               	movwf	map@inputmax
  2068     017A  3000               	movlw	0
  2069     017B  00A7               	movwf	map@inputmax+1
  2070     017C  3007               	movlw	7
  2071     017D  00A8               	movwf	map@outmin
  2072     017E  3000               	movlw	0
  2073     017F  00A9               	movwf	map@outmin+1
  2074     0180  300F               	movlw	15
  2075     0181  00AA               	movwf	map@outmax
  2076     0182  3000               	movlw	0
  2077     0183  00AB               	movwf	map@outmax+1
  2078     0184  081E               	movf	30,w	;volatile
  2079     0185  120A  118A  22DA  120A  118A  	fcall	_map
  2080     018A  1283               	bcf	3,5	;RP0=0, select bank0
  2081     018B  1303               	bcf	3,6	;RP1=0, select bank0
  2082     018C  0824               	movf	?_map,w
  2083     018D  0095               	movwf	21	;volatile
  2084     018E                     i1l1457:
  2085                           
  2086                           ;main.c: 71:             ADCON0bits.CHS = 0b0001;}
  2087     018E  081F               	movf	31,w	;volatile
  2088     018F  39C3               	andlw	-61
  2089     0190  3804               	iorlw	4
  2090     0191  009F               	movwf	31	;volatile
  2091     0192  2A0A               	goto	i1l1477
  2092     0193                     i1l1459:
  2093     0193  0C1F               	rrf	31,w	;volatile
  2094     0194  00AC               	movwf	??_isr
  2095     0195  0C2C               	rrf	??_isr,w
  2096     0196  390F               	andlw	15
  2097     0197  3A01               	xorlw	1
  2098     0198  1D03               	skipz
  2099     0199  299B               	goto	u72_21
  2100     019A  299C               	goto	u72_20
  2101     019B                     u72_21:
  2102     019B  29BA               	goto	i1l1465
  2103     019C                     u72_20:
  2104     019C                     i1l1461:
  2105                           
  2106                           ;main.c: 74:             CCPR2L = map(ADRESH, 0, 255, 7, 15);
  2107     019C  3000               	movlw	0
  2108     019D  00A4               	movwf	map@inputmin
  2109     019E  00A5               	movwf	map@inputmin+1
  2110     019F  30FF               	movlw	255
  2111     01A0  00A6               	movwf	map@inputmax
  2112     01A1  3000               	movlw	0
  2113     01A2  00A7               	movwf	map@inputmax+1
  2114     01A3  3007               	movlw	7
  2115     01A4  00A8               	movwf	map@outmin
  2116     01A5  3000               	movlw	0
  2117     01A6  00A9               	movwf	map@outmin+1
  2118     01A7  300F               	movlw	15
  2119     01A8  00AA               	movwf	map@outmax
  2120     01A9  3000               	movlw	0
  2121     01AA  00AB               	movwf	map@outmax+1
  2122     01AB  081E               	movf	30,w	;volatile
  2123     01AC  120A  118A  22DA  120A  118A  	fcall	_map
  2124     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2125     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2126     01B3  0824               	movf	?_map,w
  2127     01B4  009B               	movwf	27	;volatile
  2128     01B5                     i1l1463:
  2129                           
  2130                           ;main.c: 75:             ADCON0bits.CHS = 0b0010;}
  2131     01B5  081F               	movf	31,w	;volatile
  2132     01B6  39C3               	andlw	-61
  2133     01B7  3808               	iorlw	8
  2134     01B8  009F               	movwf	31	;volatile
  2135     01B9  2A0A               	goto	i1l1477
  2136     01BA                     i1l1465:
  2137     01BA  0C1F               	rrf	31,w	;volatile
  2138     01BB  00AC               	movwf	??_isr
  2139     01BC  0C2C               	rrf	??_isr,w
  2140     01BD  390F               	andlw	15
  2141     01BE  3A02               	xorlw	2
  2142     01BF  1D03               	skipz
  2143     01C0  29C2               	goto	u73_21
  2144     01C1  29C3               	goto	u73_20
  2145     01C2                     u73_21:
  2146     01C2  29E3               	goto	i1l1471
  2147     01C3                     u73_20:
  2148     01C3                     i1l1467:
  2149                           
  2150                           ;main.c: 78:             pot = map(ADRESH, 0, 255, 5, 14);
  2151     01C3  3000               	movlw	0
  2152     01C4  00A4               	movwf	map@inputmin
  2153     01C5  00A5               	movwf	map@inputmin+1
  2154     01C6  30FF               	movlw	255
  2155     01C7  00A6               	movwf	map@inputmax
  2156     01C8  3000               	movlw	0
  2157     01C9  00A7               	movwf	map@inputmax+1
  2158     01CA  3005               	movlw	5
  2159     01CB  00A8               	movwf	map@outmin
  2160     01CC  3000               	movlw	0
  2161     01CD  00A9               	movwf	map@outmin+1
  2162     01CE  300E               	movlw	14
  2163     01CF  00AA               	movwf	map@outmax
  2164     01D0  3000               	movlw	0
  2165     01D1  00AB               	movwf	map@outmax+1
  2166     01D2  081E               	movf	30,w	;volatile
  2167     01D3  120A  118A  22DA  120A  118A  	fcall	_map
  2168     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2169     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2170     01DA  0825               	movf	?_map+1,w
  2171     01DB  00BE               	movwf	_pot+1
  2172     01DC  0824               	movf	?_map,w
  2173     01DD  00BD               	movwf	_pot
  2174     01DE                     i1l1469:
  2175                           
  2176                           ;main.c: 79:             ADCON0bits.CHS = 0b0011;}
  2177     01DE  081F               	movf	31,w	;volatile
  2178     01DF  39C3               	andlw	-61
  2179     01E0  380C               	iorlw	12
  2180     01E1  009F               	movwf	31	;volatile
  2181     01E2  2A0A               	goto	i1l1477
  2182     01E3                     i1l1471:
  2183     01E3  0C1F               	rrf	31,w	;volatile
  2184     01E4  00AC               	movwf	??_isr
  2185     01E5  0C2C               	rrf	??_isr,w
  2186     01E6  390F               	andlw	15
  2187     01E7  3A03               	xorlw	3
  2188     01E8  1D03               	skipz
  2189     01E9  29EB               	goto	u74_21
  2190     01EA  29EC               	goto	u74_20
  2191     01EB                     u74_21:
  2192     01EB  2A0A               	goto	i1l142
  2193     01EC                     u74_20:
  2194     01EC                     i1l1473:
  2195                           
  2196                           ;main.c: 82:             pot1 = map(ADRESH, 0, 255, 5, 14);
  2197     01EC  3000               	movlw	0
  2198     01ED  00A4               	movwf	map@inputmin
  2199     01EE  00A5               	movwf	map@inputmin+1
  2200     01EF  30FF               	movlw	255
  2201     01F0  00A6               	movwf	map@inputmax
  2202     01F1  3000               	movlw	0
  2203     01F2  00A7               	movwf	map@inputmax+1
  2204     01F3  3005               	movlw	5
  2205     01F4  00A8               	movwf	map@outmin
  2206     01F5  3000               	movlw	0
  2207     01F6  00A9               	movwf	map@outmin+1
  2208     01F7  300E               	movlw	14
  2209     01F8  00AA               	movwf	map@outmax
  2210     01F9  3000               	movlw	0
  2211     01FA  00AB               	movwf	map@outmax+1
  2212     01FB  081E               	movf	30,w	;volatile
  2213     01FC  120A  118A  22DA  120A  118A  	fcall	_map
  2214     0201  1283               	bcf	3,5	;RP0=0, select bank0
  2215     0202  1303               	bcf	3,6	;RP1=0, select bank0
  2216     0203  0825               	movf	?_map+1,w
  2217     0204  00BC               	movwf	_pot1+1
  2218     0205  0824               	movf	?_map,w
  2219     0206  00BB               	movwf	_pot1
  2220     0207                     i1l1475:
  2221                           
  2222                           ;main.c: 83:             ADCON0bits.CHS = 0b0000;}
  2223     0207  30C3               	movlw	-61
  2224     0208  059F               	andwf	31,f	;volatile
  2225     0209  2A0A               	goto	i1l1477
  2226     020A                     i1l142:
  2227     020A                     i1l1477:
  2228                           
  2229                           ;main.c: 84:             PIR1bits.ADIF = 0;}
  2230     020A  130C               	bcf	12,6	;volatile
  2231     020B                     i1l1479:
  2232                           
  2233                           ;main.c: 86:     if (INTCONbits.T0IF == 1){
  2234     020B  1D0B               	btfss	11,2	;volatile
  2235     020C  2A0E               	goto	u75_21
  2236     020D  2A0F               	goto	u75_20
  2237     020E                     u75_21:
  2238     020E  2A2C               	goto	i1l147
  2239     020F                     u75_20:
  2240     020F                     i1l1481:
  2241                           
  2242                           ;main.c: 87:         INTCONbits.T0IF = 0;
  2243     020F  110B               	bcf	11,2	;volatile
  2244     0210                     i1l1483:
  2245                           
  2246                           ;main.c: 88:         TMR0 = 246;
  2247     0210  30F6               	movlw	246
  2248     0211  0081               	movwf	1	;volatile
  2249     0212                     i1l1485:
  2250                           
  2251                           ;main.c: 89:         PORTCbits.RC0 = 1;
  2252     0212  1407               	bsf	7,0	;volatile
  2253     0213                     i1l1487:
  2254                           
  2255                           ;main.c: 90:         delay(pot);
  2256     0213  083E               	movf	_pot+1,w
  2257     0214  00F1               	movwf	delay@micro+1
  2258     0215  083D               	movf	_pot,w
  2259     0216  00F0               	movwf	delay@micro
  2260     0217  120A  118A  23FF  120A  118A  	fcall	_delay
  2261     021C                     i1l1489:
  2262                           
  2263                           ;main.c: 91:         PORTCbits.RC0 = 0;
  2264     021C  1283               	bcf	3,5	;RP0=0, select bank0
  2265     021D  1303               	bcf	3,6	;RP1=0, select bank0
  2266     021E  1007               	bcf	7,0	;volatile
  2267     021F                     i1l1491:
  2268                           
  2269                           ;main.c: 92:         PORTCbits.RC3 = 1;
  2270     021F  1587               	bsf	7,3	;volatile
  2271     0220                     i1l1493:
  2272                           
  2273                           ;main.c: 93:         delay(pot1);
  2274     0220  083C               	movf	_pot1+1,w
  2275     0221  00F1               	movwf	delay@micro+1
  2276     0222  083B               	movf	_pot1,w
  2277     0223  00F0               	movwf	delay@micro
  2278     0224  120A  118A  23FF  120A  118A  	fcall	_delay
  2279     0229                     i1l1495:
  2280                           
  2281                           ;main.c: 94:         PORTCbits.RC3 = 0;
  2282     0229  1283               	bcf	3,5	;RP0=0, select bank0
  2283     022A  1303               	bcf	3,6	;RP1=0, select bank0
  2284     022B  1187               	bcf	7,3	;volatile
  2285     022C                     i1l147:
  2286     022C  082E               	movf	??_isr+2,w
  2287     022D  008A               	movwf	10
  2288     022E  0E2D               	swapf	??_isr+1,w
  2289     022F  0083               	movwf	3
  2290     0230  0EFE               	swapf	btemp,f
  2291     0231  0E7E               	swapf	btemp,w
  2292     0232  0009               	retfie
  2293     0233                     __end_of_isr:
  2294                           
  2295                           	psect	intentry
  2296     0004                     __pintentry:	
  2297                           ;incstack = 0
  2298                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2299                           
  2300     0004                     interrupt_function:
  2301     007E                     saved_w	set	btemp
  2302     0004  00FE               	movwf	btemp
  2303     0005  0E03               	swapf	3,w
  2304     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2305     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2306     0008  00AD               	movwf	??_isr+1
  2307     0009  080A               	movf	10,w
  2308     000A  00AE               	movwf	??_isr+2
  2309     000B  120A  118A  293E   	ljmp	_isr
  2310                           
  2311                           	psect	text10
  2312     02DA                     __ptext10:	
  2313 ;; *************** function _map *****************
  2314 ;; Defined at:
  2315 ;;		line 50 in file "main.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  value           1    wreg     unsigned char 
  2318 ;;  inputmin        2    4[BANK0 ] int 
  2319 ;;  inputmax        2    6[BANK0 ] int 
  2320 ;;  outmin          2    8[BANK0 ] int 
  2321 ;;  outmax          2   10[BANK0 ] int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  value           1   12[COMMON] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  2    4[BANK0 ] unsigned int 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, pclath, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         0       8       0       0       0
  2334 ;;      Locals:         1       0       0       0       0
  2335 ;;      Temps:          1       0       0       0       0
  2336 ;;      Totals:         2       8       0       0       0
  2337 ;;Total ram usage:       10 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 1
  2340 ;; This function calls:
  2341 ;;		___awdiv
  2342 ;;		___wmul
  2343 ;; This function is called by:
  2344 ;;		_isr
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348     02DA                     _map:	
  2349                           ;psect for function _map
  2350                           
  2351                           
  2352                           ;incstack = 0
  2353                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2354                           ;map@value stored from wreg
  2355     02DA  00FC               	movwf	map@value
  2356     02DB                     i1l1265:
  2357                           
  2358                           ;main.c: 51:     return ((value - inputmin)*(outmax-outmin)) / (inputmax-inputmin)+outmi
      +                          n;}
  2359     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2360     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2361     02DD  0824               	movf	map@inputmin,w
  2362     02DE  0226               	subwf	map@inputmax,w
  2363     02DF  00F6               	movwf	___awdiv@divisor
  2364     02E0  0825               	movf	map@inputmin+1,w
  2365     02E1  1C03               	skipc
  2366     02E2  0A25               	incf	map@inputmin+1,w
  2367     02E3  0227               	subwf	map@inputmax+1,w
  2368     02E4  00F7               	movwf	___awdiv@divisor+1
  2369     02E5  087C               	movf	map@value,w
  2370     02E6  00FB               	movwf	??_map
  2371     02E7  0824               	movf	map@inputmin,w
  2372     02E8  027B               	subwf	??_map,w
  2373     02E9  00F0               	movwf	___wmul@multiplier
  2374     02EA  0925               	comf	map@inputmin+1,w
  2375     02EB  1803               	skipnc
  2376     02EC  3E01               	addlw	1
  2377     02ED  00F1               	movwf	___wmul@multiplier+1
  2378     02EE  0828               	movf	map@outmin,w
  2379     02EF  022A               	subwf	map@outmax,w
  2380     02F0  00F2               	movwf	___wmul@multiplicand
  2381     02F1  0829               	movf	map@outmin+1,w
  2382     02F2  1C03               	skipc
  2383     02F3  0A29               	incf	map@outmin+1,w
  2384     02F4  022B               	subwf	map@outmax+1,w
  2385     02F5  00F3               	movwf	___wmul@multiplicand+1
  2386     02F6  120A  118A  238D  120A  118A  	fcall	___wmul
  2387     02FB  0871               	movf	?___wmul+1,w
  2388     02FC  00F9               	movwf	___awdiv@dividend+1
  2389     02FD  0870               	movf	?___wmul,w
  2390     02FE  00F8               	movwf	___awdiv@dividend
  2391     02FF  120A  118A  2233  120A  118A  	fcall	___awdiv
  2392     0304  1283               	bcf	3,5	;RP0=0, select bank0
  2393     0305  1303               	bcf	3,6	;RP1=0, select bank0
  2394     0306  0828               	movf	map@outmin,w
  2395     0307  0776               	addwf	?___awdiv,w
  2396     0308  00A4               	movwf	?_map
  2397     0309  0829               	movf	map@outmin+1,w
  2398     030A  1803               	skipnc
  2399     030B  0A29               	incf	map@outmin+1,w
  2400     030C  0777               	addwf	?___awdiv+1,w
  2401     030D  00A5               	movwf	?_map+1
  2402     030E                     i1l129:
  2403     030E  0008               	return
  2404     030F                     __end_of_map:
  2405                           
  2406                           	psect	text11
  2407     038D                     __ptext11:	
  2408 ;; *************** function ___wmul *****************
  2409 ;; Defined at:
  2410 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  multiplier      2    0[COMMON] unsigned int 
  2413 ;;  multiplicand    2    2[COMMON] unsigned int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  product         2    4[COMMON] unsigned int 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2    0[COMMON] unsigned int 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         4       0       0       0       0
  2426 ;;      Locals:         2       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0
  2428 ;;      Totals:         6       0       0       0       0
  2429 ;;Total ram usage:        6 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_map
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438     038D                     ___wmul:	
  2439                           ;psect for function ___wmul
  2440                           
  2441     038D                     i1l1207:	
  2442                           ;incstack = 0
  2443                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2444                           
  2445     038D  01F4               	clrf	___wmul@product
  2446     038E  01F5               	clrf	___wmul@product+1
  2447     038F                     i1l1209:
  2448     038F  1C70               	btfss	___wmul@multiplier,0
  2449     0390  2B92               	goto	u45_21
  2450     0391  2B93               	goto	u45_20
  2451     0392                     u45_21:
  2452     0392  2B99               	goto	i1l303
  2453     0393                     u45_20:
  2454     0393                     i1l1211:
  2455     0393  0872               	movf	___wmul@multiplicand,w
  2456     0394  07F4               	addwf	___wmul@product,f
  2457     0395  1803               	skipnc
  2458     0396  0AF5               	incf	___wmul@product+1,f
  2459     0397  0873               	movf	___wmul@multiplicand+1,w
  2460     0398  07F5               	addwf	___wmul@product+1,f
  2461     0399                     i1l303:
  2462     0399  3001               	movlw	1
  2463     039A                     u46_25:
  2464     039A  1003               	clrc
  2465     039B  0DF2               	rlf	___wmul@multiplicand,f
  2466     039C  0DF3               	rlf	___wmul@multiplicand+1,f
  2467     039D  3EFF               	addlw	-1
  2468     039E  1D03               	skipz
  2469     039F  2B9A               	goto	u46_25
  2470     03A0                     i1l1213:
  2471     03A0  3001               	movlw	1
  2472     03A1                     u47_25:
  2473     03A1  1003               	clrc
  2474     03A2  0CF1               	rrf	___wmul@multiplier+1,f
  2475     03A3  0CF0               	rrf	___wmul@multiplier,f
  2476     03A4  3EFF               	addlw	-1
  2477     03A5  1D03               	skipz
  2478     03A6  2BA1               	goto	u47_25
  2479     03A7                     i1l1215:
  2480     03A7  0870               	movf	___wmul@multiplier,w
  2481     03A8  0471               	iorwf	___wmul@multiplier+1,w
  2482     03A9  1D03               	btfss	3,2
  2483     03AA  2BAC               	goto	u48_21
  2484     03AB  2BAD               	goto	u48_20
  2485     03AC                     u48_21:
  2486     03AC  2B8F               	goto	i1l1209
  2487     03AD                     u48_20:
  2488     03AD                     i1l1217:
  2489     03AD  0875               	movf	___wmul@product+1,w
  2490     03AE  00F1               	movwf	?___wmul+1
  2491     03AF  0874               	movf	___wmul@product,w
  2492     03B0  00F0               	movwf	?___wmul
  2493     03B1                     i1l305:
  2494     03B1  0008               	return
  2495     03B2                     __end_of___wmul:
  2496                           
  2497                           	psect	text12
  2498     0233                     __ptext12:	
  2499 ;; *************** function ___awdiv *****************
  2500 ;; Defined at:
  2501 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  divisor         2    6[COMMON] int 
  2504 ;;  dividend        2    8[COMMON] int 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  quotient        2    2[BANK0 ] int 
  2507 ;;  sign            1    1[BANK0 ] unsigned char 
  2508 ;;  counter         1    0[BANK0 ] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  2    6[COMMON] int 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         4       0       0       0       0
  2519 ;;      Locals:         0       4       0       0       0
  2520 ;;      Temps:          1       0       0       0       0
  2521 ;;      Totals:         5       4       0       0       0
  2522 ;;Total ram usage:        9 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_map
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531     0233                     ___awdiv:	
  2532                           ;psect for function ___awdiv
  2533                           
  2534     0233                     i1l1221:	
  2535                           ;incstack = 0
  2536                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2537                           
  2538     0233  1283               	bcf	3,5	;RP0=0, select bank0
  2539     0234  1303               	bcf	3,6	;RP1=0, select bank0
  2540     0235  01A1               	clrf	___awdiv@sign
  2541     0236                     i1l1223:
  2542     0236  1FF7               	btfss	___awdiv@divisor+1,7
  2543     0237  2A39               	goto	u49_21
  2544     0238  2A3A               	goto	u49_20
  2545     0239                     u49_21:
  2546     0239  2A41               	goto	i1l1229
  2547     023A                     u49_20:
  2548     023A                     i1l1225:
  2549     023A  09F6               	comf	___awdiv@divisor,f
  2550     023B  09F7               	comf	___awdiv@divisor+1,f
  2551     023C  0AF6               	incf	___awdiv@divisor,f
  2552     023D  1903               	skipnz
  2553     023E  0AF7               	incf	___awdiv@divisor+1,f
  2554     023F                     i1l1227:
  2555     023F  01A1               	clrf	___awdiv@sign
  2556     0240  0AA1               	incf	___awdiv@sign,f
  2557     0241                     i1l1229:
  2558     0241  1FF9               	btfss	___awdiv@dividend+1,7
  2559     0242  2A44               	goto	u50_21
  2560     0243  2A45               	goto	u50_20
  2561     0244                     u50_21:
  2562     0244  2A4E               	goto	i1l1235
  2563     0245                     u50_20:
  2564     0245                     i1l1231:
  2565     0245  09F8               	comf	___awdiv@dividend,f
  2566     0246  09F9               	comf	___awdiv@dividend+1,f
  2567     0247  0AF8               	incf	___awdiv@dividend,f
  2568     0248  1903               	skipnz
  2569     0249  0AF9               	incf	___awdiv@dividend+1,f
  2570     024A                     i1l1233:
  2571     024A  3001               	movlw	1
  2572     024B  00FA               	movwf	??___awdiv
  2573     024C  087A               	movf	??___awdiv,w
  2574     024D  06A1               	xorwf	___awdiv@sign,f
  2575     024E                     i1l1235:
  2576     024E  01A2               	clrf	___awdiv@quotient
  2577     024F  01A3               	clrf	___awdiv@quotient+1
  2578     0250                     i1l1237:
  2579     0250  0876               	movf	___awdiv@divisor,w
  2580     0251  0477               	iorwf	___awdiv@divisor+1,w
  2581     0252  1903               	btfsc	3,2
  2582     0253  2A55               	goto	u51_21
  2583     0254  2A56               	goto	u51_20
  2584     0255                     u51_21:
  2585     0255  2A8D               	goto	i1l1257
  2586     0256                     u51_20:
  2587     0256                     i1l1239:
  2588     0256  01A0               	clrf	___awdiv@counter
  2589     0257  0AA0               	incf	___awdiv@counter,f
  2590     0258  2A64               	goto	i1l1245
  2591     0259                     i1l1241:
  2592     0259  3001               	movlw	1
  2593     025A                     u52_25:
  2594     025A  1003               	clrc
  2595     025B  0DF6               	rlf	___awdiv@divisor,f
  2596     025C  0DF7               	rlf	___awdiv@divisor+1,f
  2597     025D  3EFF               	addlw	-1
  2598     025E  1D03               	skipz
  2599     025F  2A5A               	goto	u52_25
  2600     0260                     i1l1243:
  2601     0260  3001               	movlw	1
  2602     0261  00FA               	movwf	??___awdiv
  2603     0262  087A               	movf	??___awdiv,w
  2604     0263  07A0               	addwf	___awdiv@counter,f
  2605     0264                     i1l1245:
  2606     0264  1FF7               	btfss	___awdiv@divisor+1,7
  2607     0265  2A67               	goto	u53_21
  2608     0266  2A68               	goto	u53_20
  2609     0267                     u53_21:
  2610     0267  2A59               	goto	i1l1241
  2611     0268                     u53_20:
  2612     0268                     i1l1247:
  2613     0268  3001               	movlw	1
  2614     0269                     u54_25:
  2615     0269  1003               	clrc
  2616     026A  0DA2               	rlf	___awdiv@quotient,f
  2617     026B  0DA3               	rlf	___awdiv@quotient+1,f
  2618     026C  3EFF               	addlw	-1
  2619     026D  1D03               	skipz
  2620     026E  2A69               	goto	u54_25
  2621     026F  0877               	movf	___awdiv@divisor+1,w
  2622     0270  0279               	subwf	___awdiv@dividend+1,w
  2623     0271  1D03               	skipz
  2624     0272  2A75               	goto	u55_25
  2625     0273  0876               	movf	___awdiv@divisor,w
  2626     0274  0278               	subwf	___awdiv@dividend,w
  2627     0275                     u55_25:
  2628     0275  1C03               	skipc
  2629     0276  2A78               	goto	u55_21
  2630     0277  2A79               	goto	u55_20
  2631     0278                     u55_21:
  2632     0278  2A80               	goto	i1l1253
  2633     0279                     u55_20:
  2634     0279                     i1l1249:
  2635     0279  0876               	movf	___awdiv@divisor,w
  2636     027A  02F8               	subwf	___awdiv@dividend,f
  2637     027B  0877               	movf	___awdiv@divisor+1,w
  2638     027C  1C03               	skipc
  2639     027D  03F9               	decf	___awdiv@dividend+1,f
  2640     027E  02F9               	subwf	___awdiv@dividend+1,f
  2641     027F                     i1l1251:
  2642     027F  1422               	bsf	___awdiv@quotient,0
  2643     0280                     i1l1253:
  2644     0280  3001               	movlw	1
  2645     0281                     u56_25:
  2646     0281  1003               	clrc
  2647     0282  0CF7               	rrf	___awdiv@divisor+1,f
  2648     0283  0CF6               	rrf	___awdiv@divisor,f
  2649     0284  3EFF               	addlw	-1
  2650     0285  1D03               	skipz
  2651     0286  2A81               	goto	u56_25
  2652     0287                     i1l1255:
  2653     0287  3001               	movlw	1
  2654     0288  02A0               	subwf	___awdiv@counter,f
  2655     0289  1D03               	btfss	3,2
  2656     028A  2A8C               	goto	u57_21
  2657     028B  2A8D               	goto	u57_20
  2658     028C                     u57_21:
  2659     028C  2A68               	goto	i1l1247
  2660     028D                     u57_20:
  2661     028D                     i1l1257:
  2662     028D  0821               	movf	___awdiv@sign,w
  2663     028E  1903               	btfsc	3,2
  2664     028F  2A91               	goto	u58_21
  2665     0290  2A92               	goto	u58_20
  2666     0291                     u58_21:
  2667     0291  2A97               	goto	i1l1261
  2668     0292                     u58_20:
  2669     0292                     i1l1259:
  2670     0292  09A2               	comf	___awdiv@quotient,f
  2671     0293  09A3               	comf	___awdiv@quotient+1,f
  2672     0294  0AA2               	incf	___awdiv@quotient,f
  2673     0295  1903               	skipnz
  2674     0296  0AA3               	incf	___awdiv@quotient+1,f
  2675     0297                     i1l1261:
  2676     0297  0823               	movf	___awdiv@quotient+1,w
  2677     0298  00F7               	movwf	?___awdiv+1
  2678     0299  0822               	movf	___awdiv@quotient,w
  2679     029A  00F6               	movwf	?___awdiv
  2680     029B                     i1l456:
  2681     029B  0008               	return
  2682     029C                     __end_of___awdiv:
  2683                           
  2684                           	psect	text13
  2685     03FF                     __ptext13:	
  2686 ;; *************** function _delay *****************
  2687 ;; Defined at:
  2688 ;;		line 352 in file "main.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  micro           2    0[COMMON] unsigned int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         2       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0
  2705 ;;      Totals:         2       0       0       0       0
  2706 ;;Total ram usage:        2 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_isr
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715     03FF                     _delay:	
  2716                           ;psect for function _delay
  2717                           
  2718     03FF                     i1l1269:	
  2719                           ;incstack = 0
  2720                           ; Regs used in _delay: [wreg+status,2+status,0]
  2721                           
  2722                           
  2723                           ;main.c: 353:     while (micro > 0){
  2724     03FF  2C09               	goto	i1l1273
  2725     0400                     i1l206:
  2726                           
  2727                           ;main.c: 354:         _delay((unsigned long)((50)*(500000/4000000.0)));
  2728     0400  2C01               	nop2	;2 cycle nop
  2729     0401  2C02               	nop2	;2 cycle nop
  2730     0402  2C03               	nop2	;2 cycle nop
  2731     0403                     i1l1271:
  2732                           
  2733                           ;main.c: 355:         micro--;
  2734     0403  3001               	movlw	1
  2735     0404  02F0               	subwf	delay@micro,f
  2736     0405  3000               	movlw	0
  2737     0406  1C03               	skipc
  2738     0407  03F1               	decf	delay@micro+1,f
  2739     0408  02F1               	subwf	delay@micro+1,f
  2740     0409                     i1l1273:
  2741                           
  2742                           ;main.c: 353:     while (micro > 0){
  2743     0409  0870               	movf	delay@micro,w
  2744     040A  0471               	iorwf	delay@micro+1,w
  2745     040B  1D03               	btfss	3,2
  2746     040C  2C0E               	goto	u59_21
  2747     040D  2C0F               	goto	u59_20
  2748     040E                     u59_21:
  2749     040E  2C00               	goto	i1l206
  2750     040F                     u59_20:
  2751     040F                     i1l208:
  2752     040F  0008               	return
  2753     0410                     __end_of_delay:
  2754     007E                     btemp	set	126	;btemp
  2755     007E                     wtemp0	set	126
  2756                           
  2757                           	psect	idloc
  2758                           
  2759                           ;Config register IDLOC0 @ 0x2000
  2760                           ;	unspecified, using default values
  2761     2000                     	org	8192
  2762     2000  3FFF               	dw	16383
  2763                           
  2764                           ;Config register IDLOC1 @ 0x2001
  2765                           ;	unspecified, using default values
  2766     2001                     	org	8193
  2767     2001  3FFF               	dw	16383
  2768                           
  2769                           ;Config register IDLOC2 @ 0x2002
  2770                           ;	unspecified, using default values
  2771     2002                     	org	8194
  2772     2002  3FFF               	dw	16383
  2773                           
  2774                           ;Config register IDLOC3 @ 0x2003
  2775                           ;	unspecified, using default values
  2776     2003                     	org	8195
  2777     2003  3FFF               	dw	16383
  2778                           
  2779                           	psect	config
  2780                           
  2781                           ;Config register CONFIG1 @ 0x2007
  2782                           ;	Oscillator Selection bits
  2783                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2784                           ;	Watchdog Timer Enable bit
  2785                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2786                           ;	Power-up Timer Enable bit
  2787                           ;	PWRTE = OFF, PWRT disabled
  2788                           ;	RE3/MCLR pin function select bit
  2789                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2790                           ;	Code Protection bit
  2791                           ;	CP = OFF, Program memory code protection is disabled
  2792                           ;	Data Code Protection bit
  2793                           ;	CPD = OFF, Data memory code protection is disabled
  2794                           ;	Brown Out Reset Selection bits
  2795                           ;	BOREN = OFF, BOR disabled
  2796                           ;	Internal External Switchover bit
  2797                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2798                           ;	Fail-Safe Clock Monitor Enabled bit
  2799                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2800                           ;	Low Voltage Programming Enable bit
  2801                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2802                           ;	In-Circuit Debugger Mode bit
  2803                           ;	DEBUG = 0x1, unprogramme  2804     2007                     	org	8199
  2805     2007  20D4               	dw	8404
  2806                           
  2807                           ;Config register CONFIG2 @ 0x2008
  2808                           ;	Brown-out Reset Selection bit
  2809                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2810                           ;	Flash Program Memory Self Write Enable bits
  2811                           ;	WRT = OFF, Write protection off
  2812     2008                     	org	8200
  2813     2008  3FFF               	dw	16383

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     19      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@cursor	PTR unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_map
    _map->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_cadena

Critical Paths under _isr in BANK0

    _isr->_map
    _map->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     100
                                             17 BANK0      2     2      0
                             _cadena
                           _interrup
                         _readEEPROM
                              _setup
                           _setupADC
                           _setupPWM
                          _setupUART
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          1     1      0      22
                                             15 BANK0      1     1      0
                           _interrup
 ---------------------------------------------------------------------------------
 (2) _interrup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               2     2      0      78
                                             15 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0    2241
                                             12 BANK0      3     3      0
                              _delay
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 10     2      8    2066
                                             11 COMMON     2     2      0
                                              4 BANK0      8     0      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     0      2     175
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
   _interrup
   _readEEPROM
   _setup
   _setupADC
   _setupPWM
   _setupUART
   _writeEEPROM
     _interrup

 _isr (ROOT)
   _delay
   _map
     ___awdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Nov 12 13:45:29 2022

                      pc 0002              map@inputmax 0026              map@inputmin 0024  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
                    l202 041C                      l213 03B6                      l217 03D2  
                    l162 00BC                      l155 004A                      l156 004F  
                    l181 0383                      l190 0425                      l175 02D9  
                    l183 0387                      l184 038C                      l168 0131  
                    l193 0349                      l178 03E9                      l187 03FE  
                    l195 034D                      l196 035F                      l198 0365  
                    l199 0366                      _PR2 0092                      u600 0387  
                    u601 0386                      u610 03BA                      u611 03B9  
                    u620 03D2                      u621 03D1                      u630 034D  
                    u631 034C                      u640 0365                      u800 0065  
                    u641 0364                      u801 0064                      u810 00AA  
                    u811 00A9                      u820 00B0                      u821 00AF  
                    u830 00C3                      u831 00C2                      u840 00CB  
                    u760 0045                      u841 00CA                      u761 0044  
                    u850 00D2                      u770 004E                      u851 00D1  
                    u771 004D                      u860 0125                      u780 0056  
                    u861 0124                      u781 0055                      u870 012C  
                    u790 005E                      u871 012B                      u791 005D  
                    u880 013A                      u881 0139                      u897 03E7  
                    _map 02DA                      _isr 013E                      _pot 003D  
                    fsr0 0004                      indf 0000                     l1301 02B5  
                   l1205 0410                     l1311 02BA                     l1303 02B6  
                   l1401 03B5                     l1321 02C5                     l1313 02BD  
                   l1305 02B7                     l1403 03BA                     l1331 02CA  
                   l1323 02C6                     l1315 02C0                     l1307 02B8  
                   l1411 0344                     l1405 03C2                     l1341 02CF  
                   l1333 02CB                     l1325 02C7                     l1317 02C3  
                   l1309 02B9                     l1421 0357                     l1413 0347  
                   l1501 0029                     l1407 03C6                     l1351 02D4  
                   l1343 02D0                     l1335 02CC                     l1327 02C8  
                   l1319 02C4                     l1423 035C                     l1415 0348  
                   l1511 004E                     l1503 002E                     l1425 041D  
                   l1353 02D5                     l1345 02D1                     l1337 02CD  
                   l1329 02C9                     l1281 02A1                     l1361 036A  
                   l1417 0350                     l1409 0340                     l1521 0068  
                   l1513 0056                     l1505 0037                     l1427 0421  
                   l1347 02D2                     l1339 02CE                     l1291 02A8  
                   l1283 02A2                     l1275 029C                     l1355 03D3  
                   l1371 0376                     l1363 0370                     l1419 0356  
                   l1531 0082                     l1523 0070                     l1515 005A  
                   l1507 003D                     l1349 02D3                     l1293 02A9  
                   l1285 02A3                     l1277 029F                     l1357 03E3  
                   l1381 0380                     l1373 0377                     l1365 0372  
                   l1541 009D                     l1533 0086                     l1525 0073  
                   l1517 005E                     l1509 0045                     l1295 02AA  
                   l1287 02A6                     l1279 02A0                     l1383 0381  
                   l1375 0378                     l1367 0374                     l1359 0367  
                   l1391 03F3                     l1551 00B5                     l1543 00A0  
                   l1535 008E                     l1527 0077                     l1519 0065  
                   l1297 02AB                     l1289 02A7                     l1377 037B  
                   l1369 0375                     l1393 03F4                     l1385 03EA  
                   l1561 00D5                     l1553 00C3                     l1537 0091  
                   l1529 007F                     l1545 00A4                     l1299 02B4  
                   l1379 037F                     l1395 03F7                     l1387 03F0  
                   l1571 00EA                     l1563 00DA                     l1555 00C7  
                   l1539 0095                     l1547 00AA                     l1397 03FA  
                   l1389 03F1                     l1581 0103                     l1573 00EE  
                   l1565 00DE                     l1557 00CB                     l1549 00B0  
                   l1399 03FD                     l1591 011B                     l1583 0106  
                   l1575 00F1                     l1567 00E1                     l1559 00D2  
                   l1585 010A                     l1577 00F5                     l1569 00E5  
                   l1593 011F                     l1497 001F                     l1587 010F  
                   l1579 00FA                     l1595 0125                     l1499 0024  
                   l1597 012C                     l1589 0118                     l1599 0134  
                   ?_map 0024                     ?_isr 0070                     STR_1 0315  
                   _TMR0 0001                     _dato 007D                     _main 001F  
                   _val0 0039                     _val1 0037                     _val2 0035  
                   _val3 0033                     _pot1 003B                     _loop 003F  
                   btemp 007E                     start 000E              _writeEEPROM 033D  
                  ??_map 007B                    ??_isr 002C                    ?_main 0070  
        __end_of___awdiv 029C                    _EEADR 010D          ___awdiv@divisor 0076  
                  i1l206 0400                    i1l142 020A                    i1l303 0399  
                  i1l208 040F                    i1l305 03B1                    i1l129 030E  
                  i1l147 022C                    i1l456 029B          ___awdiv@counter 0020  
                  u50_20 0245                    u50_21 0244                    _SPBRG 0099  
                  u51_20 0256                    u51_21 0255                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _PORTE 0009  
                  u52_25 025A                    u53_20 0268                    u45_20 0393  
                  u53_21 0267                    u45_21 0392                    u70_20 016C  
                  u70_21 016B                    u54_25 0269                    u46_25 039A  
                  u55_20 0279                    u71_20 0175                    u55_21 0278  
                  u71_21 0174                    u55_25 0275                    u47_25 03A1  
                  u48_20 03AD                    u72_20 019C                    u48_21 03AC  
                  u72_21 019B                    u56_25 0281                    u57_20 028D  
                  u49_20 023A                    u73_20 01C3                    u65_20 0142  
                  u57_21 028C                    u49_21 0239                    u73_21 01C2  
                  u65_21 0141                    _TRISD 0088                    _TRISE 0089  
                  u58_20 0292                    u74_20 01EC                    u66_20 0147  
                  u58_21 0291                    u74_21 01EB                    u66_21 0146  
                  u59_20 040F                    u75_20 020F                    u67_20 014F  
                  u59_21 040E                    u75_21 020E                    u67_21 014E  
                  u68_20 0155                    u68_21 0154                    u69_20 0166  
                  u69_21 0165                    _TXREG 0019                    _delay 03FF  
                  _setup 029C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 013E  
                 ??_main 0031                   ?_delay 0070                   _ADRESH 001E  
                 _EEADRH 010F                   _EEDATA 010C                   _CCPR1L 0015  
                 _CCPR2L 001B                   _EECON2 018D         ___awdiv@dividend 0078  
                 ?_setup 0070                   _ANSELH 0189                   i1l1211 0393  
                 i1l1221 0233                   i1l1213 03A0                   i1l1231 0245  
                 i1l1223 0236                   i1l1215 03A7                   i1l1207 038D  
                 i1l1241 0259                   i1l1233 024A                   i1l1225 023A  
                 i1l1217 03AD                   i1l1209 038F                   i1l1251 027F  
                 i1l1243 0260                   i1l1235 024E                   i1l1227 023F  
                 i1l1261 0297                   i1l1253 0280                   i1l1245 0264  
                 i1l1237 0250                   i1l1229 0241                   i1l1271 0403  
                 i1l1255 0287                   i1l1247 0268                   i1l1239 0256  
                 i1l1431 013E                   i1l1273 0409                   i1l1249 0279  
                 i1l1257 028D                   i1l1265 02DB                   i1l1441 0155  
                 i1l1433 0142                   i1l1259 0292                   i1l1443 015B  
                 i1l1435 0147                   i1l1451 0168                   i1l1269 03FF  
                 i1l1461 019C                   i1l1453 016C                   i1l1445 015D  
                 i1l1437 014B                   i1l1471 01E3                   i1l1463 01B5  
                 i1l1455 0175                   i1l1447 015F                   i1l1439 014F  
                 i1l1481 020F                   i1l1473 01EC                   i1l1465 01BA  
                 i1l1457 018E                   i1l1449 0166                   i1l1491 021F  
                 i1l1483 0210                   i1l1475 0207                   i1l1467 01C3  
                 i1l1459 0193                   i1l1493 0220                   i1l1485 0212  
                 i1l1469 01DE                   i1l1477 020A                   i1l1495 0229  
                 i1l1487 0213                   i1l1479 020B                   i1l1489 021C  
                 _SPBRGH 009A                   _cadena 03B2                   ___wmul 038D  
              ??___awdiv 007A         ___awdiv@quotient 0022         __end_of_interrup 041D  
       __end_of_setupADC 03EA         __end_of_setupPWM 038D                   saved_w 007E  
__end_of__initialization 001B          writeEEPROM@data 002F           __pcstackCOMMON 0070  
          __end_of_delay 0410            __end_of_setup 02DA           _OPTION_REGbits 0081  
                ??_delay 0072                  ??_setup 002F               __pbssBANK0 0033  
             __pmaintext 001F             ?_writeEEPROM 0070                  ?_cadena 0070  
                ?___wmul 0070               __pintentry 0004                  _CCP1CON 0017  
                _CCP2CON 001D               __stringtab 030F             cadena@cursor 0030  
             _readEEPROM 041D                ?_interrup 0070                ?_setupADC 0070  
              ?_setupPWM 0070                  ___awdiv 0233                  _bandera 0041  
              _ANSELbits 0188                  __ptext1 033D                  __ptext2 0410  
                __ptext3 03EA                  __ptext4 0367                  __ptext5 03D3  
                __ptext6 029C                  __ptext7 041D                  __ptext8 03B2  
                __ptext9 013E                _T2CONbits 0012               delay@micro 0070  
                clrloop0 0427     end_of_initialization 001B               ??_interrup 002F  
      __end_of_setupUART 03FF               ??_setupADC 002F                _RCSTAbits 0018  
             ??_setupPWM 002F                _PORTBbits 0006                _PORTCbits 0007  
              _PORTDbits 0008                _TRISBbits 0086                _TRISCbits 0087  
            _CCP1CONbits 0017              ?_readEEPROM 0070              _CCP2CONbits 001D  
              _TXSTAbits 0098           __end_of_cadena 03D3           __end_of___wmul 03B2  
            _BAUDCTLbits 0187      start_initialization 0011              __end_of_map 030F  
            __end_of_isr 0233                 ??_cadena 002F                 ??___wmul 0074  
            __pbssCOMMON 007D                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0076                __pstrings 030F        interrupt_function 0004  
         ___wmul@product 0074                 _IOCBbits 0096                clear_ram0 0426  
               _PIE1bits 008C                 _PIR1bits 000C                _setupUART 03EA  
             _ADCON0bits 001F              __stringbase 0314               _ADCON1bits 009F  
      ___wmul@multiplier 0070                map@outmax 002A                map@outmin 0028  
               _WPUBbits 0095             ??_readEEPROM 002F               _EECON1bits 018C  
             ?_setupUART 0070       __end_of__stringtab 0315       __end_of_readEEPROM 0426  
               __ptext10 02DA                 __ptext11 038D                 __ptext12 0233  
               __ptext13 03FF                 _interrup 0410                 _selector 0043  
          ??_writeEEPROM 002F                 _setupADC 03D3                 _setupPWM 0367  
               map@value 007C               _INTCONbits 000B                 intlevel1 0000  
              stringcode 030F               _OSCCONbits 008F              ??_setupUART 002F  
    __end_of_writeEEPROM 0367                 stringdir 030F                 stringtab 030F  
