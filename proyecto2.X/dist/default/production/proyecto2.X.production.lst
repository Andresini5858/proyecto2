

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Nov 13 18:01:56 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     0081                     	;# 
   104     0085                     	;# 
   105     0086                     	;# 
   106     0087                     	;# 
   107     0088                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     008F                     	;# 
   113     0090                     	;# 
   114     0091                     	;# 
   115     0092                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     0105                     	;# 
   132     0107                     	;# 
   133     0108                     	;# 
   134     0109                     	;# 
   135     010C                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     010E                     	;# 
   139     010F                     	;# 
   140     0185                     	;# 
   141     0187                     	;# 
   142     0188                     	;# 
   143     0189                     	;# 
   144     018C                     	;# 
   145     018D                     	;# 
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     0006                     	;# 
   153     0007                     	;# 
   154     0008                     	;# 
   155     0009                     	;# 
   156     000A                     	;# 
   157     000B                     	;# 
   158     000C                     	;# 
   159     000D                     	;# 
   160     000E                     	;# 
   161     000E                     	;# 
   162     000F                     	;# 
   163     0010                     	;# 
   164     0011                     	;# 
   165     0012                     	;# 
   166     0013                     	;# 
   167     0014                     	;# 
   168     0015                     	;# 
   169     0015                     	;# 
   170     0016                     	;# 
   171     0017                     	;# 
   172     0018                     	;# 
   173     0019                     	;# 
   174     001A                     	;# 
   175     001B                     	;# 
   176     001B                     	;# 
   177     001C                     	;# 
   178     001D                     	;# 
   179     001E                     	;# 
   180     001F                     	;# 
   181     0081                     	;# 
   182     0085                     	;# 
   183     0086                     	;# 
   184     0087                     	;# 
   185     0088                     	;# 
   186     0089                     	;# 
   187     008C                     	;# 
   188     008D                     	;# 
   189     008E                     	;# 
   190     008F                     	;# 
   191     0090                     	;# 
   192     0091                     	;# 
   193     0092                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0094                     	;# 
   198     0095                     	;# 
   199     0096                     	;# 
   200     0097                     	;# 
   201     0098                     	;# 
   202     0099                     	;# 
   203     009A                     	;# 
   204     009B                     	;# 
   205     009C                     	;# 
   206     009D                     	;# 
   207     009E                     	;# 
   208     009F                     	;# 
   209     0105                     	;# 
   210     0107                     	;# 
   211     0108                     	;# 
   212     0109                     	;# 
   213     010C                     	;# 
   214     010C                     	;# 
   215     010D                     	;# 
   216     010E                     	;# 
   217     010F                     	;# 
   218     0185                     	;# 
   219     0187                     	;# 
   220     0188                     	;# 
   221     0189                     	;# 
   222     018C                     	;# 
   223     018D                     	;# 
   224                           
   225                           	psect	idataBANK0
   226     0621                     __pidataBANK0:
   227                           
   228                           ;initializer for _servo
   229     0621  3403               	retlw	3
   230     0622  3404               	retlw	4
   231     0623  3405               	retlw	5
   232     0624  3406               	retlw	6
   233     0625  3407               	retlw	7
   234     0626  3408               	retlw	8
   235     0627  3409               	retlw	9
   236     0628  340A               	retlw	10
   237     0629  340B               	retlw	11
   238     062A  340C               	retlw	12
   239     062B  340D               	retlw	13
   240     062C  340E               	retlw	14
   241     062D  340F               	retlw	15
   242     062E  3410               	retlw	16
   243     062F  3411               	retlw	17
   244     0630  3412               	retlw	18
   245     0631  3413               	retlw	19
   246     0632  3414               	retlw	20
   247                           
   248                           ;initializer for _servo2
   249     0633  3401               	retlw	1
   250     0634  3402               	retlw	2
   251     0635  3403               	retlw	3
   252     0636  3404               	retlw	4
   253     0637  3405               	retlw	5
   254     0638  3406               	retlw	6
   255     0639  3407               	retlw	7
   256     063A  3408               	retlw	8
   257     063B  3409               	retlw	9
   258     063C  340A               	retlw	10
   259     063D  340B               	retlw	11
   260     063E  340C               	retlw	12
   261     063F  340D               	retlw	13
   262     0640  340E               	retlw	14
   263     0641  340F               	retlw	15
   264     0642  3410               	retlw	16
   265     0643  3411               	retlw	17
   266     0019                     _TXREG	set	25
   267     0018                     _RCSTAbits	set	24
   268     001D                     _CCP2CONbits	set	29
   269     001D                     _CCP2CON	set	29
   270     0012                     _T2CONbits	set	18
   271     0017                     _CCP1CONbits	set	23
   272     0017                     _CCP1CON	set	23
   273     0009                     _PORTE	set	9
   274     0008                     _PORTD	set	8
   275     0006                     _PORTB	set	6
   276     0005                     _PORTA	set	5
   277     0008                     _PORTDbits	set	8
   278     001A                     _RCREG	set	26
   279     0007                     _PORTCbits	set	7
   280     0001                     _TMR0	set	1
   281     001B                     _CCPR2L	set	27
   282     001E                     _ADRESH	set	30
   283     0015                     _CCPR1L	set	21
   284     001F                     _ADCON0bits	set	31
   285     000C                     _PIR1bits	set	12
   286     0006                     _PORTBbits	set	6
   287     000B                     _INTCONbits	set	11
   288     0099                     _SPBRG	set	153
   289     009A                     _SPBRGH	set	154
   290     0098                     _TXSTAbits	set	152
   291     0092                     _PR2	set	146
   292     009F                     _ADCON1bits	set	159
   293     0096                     _IOCBbits	set	150
   294     0095                     _WPUBbits	set	149
   295     0081                     _OPTION_REGbits	set	129
   296     008F                     _OSCCONbits	set	143
   297     0088                     _TRISD	set	136
   298     0089                     _TRISE	set	137
   299     0087                     _TRISCbits	set	135
   300     0086                     _TRISBbits	set	134
   301     008C                     _PIE1bits	set	140
   302     010C                     _EEDATA	set	268
   303     010F                     _EEADRH	set	271
   304     010D                     _EEADR	set	269
   305     018D                     _EECON2	set	397
   306     018C                     _EECON1bits	set	396
   307     0187                     _BAUDCTLbits	set	391
   308     0188                     _ANSELbits	set	392
   309     0189                     _ANSELH	set	393
   310                           
   311                           	psect	strings
   312     0428                     __pstrings:
   313     0428                     stringtab:
   314     0428                     __stringtab:
   315     0428                     stringcode:	
   316                           ;	String table - string pointers are 1 byte each
   317                           
   318     0428                     stringdir:
   319     0428  3004               	movlw	high stringdir
   320     0429  008A               	movwf	10
   321     042A  0804               	movf	4,w
   322     042B  0A84               	incf	4,f
   323     042C  0782               	addwf	2,f
   324     042D                     __stringbase:
   325     042D  3400               	retlw	0
   326     042E                     __end_of__stringtab:
   327     042E                     STR_1:
   328     042E  340A               	retlw	10
   329     042F  340D               	retlw	13
   330     0430  342D               	retlw	45	;'-'
   331     0431  342D               	retlw	45	;'-'
   332     0432  342D               	retlw	45	;'-'
   333     0433  342D               	retlw	45	;'-'
   334     0434  342D               	retlw	45	;'-'
   335     0435  342D               	retlw	45	;'-'
   336     0436  342D               	retlw	45	;'-'
   337     0437  342D               	retlw	45	;'-'
   338     0438  342D               	retlw	45	;'-'
   339     0439  342D               	retlw	45	;'-'
   340     043A  342D               	retlw	45	;'-'
   341     043B  342D               	retlw	45	;'-'
   342     043C  342D               	retlw	45	;'-'
   343     043D  342D               	retlw	45	;'-'
   344     043E  342D               	retlw	45	;'-'
   345     043F  342D               	retlw	45	;'-'
   346     0440  342D               	retlw	45	;'-'
   347     0441  342D               	retlw	45	;'-'
   348     0442  342D               	retlw	45	;'-'
   349     0443  342D               	retlw	45	;'-'
   350     0444  342D               	retlw	45	;'-'
   351     0445  342D               	retlw	45	;'-'
   352     0446  342D               	retlw	45	;'-'
   353     0447  342D               	retlw	45	;'-'
   354     0448  342D               	retlw	45	;'-'
   355     0449  342D               	retlw	45	;'-'
   356     044A  342D               	retlw	45	;'-'
   357     044B  342D               	retlw	45	;'-'
   358     044C  342D               	retlw	45	;'-'
   359     044D  342D               	retlw	45	;'-'
   360     044E  342D               	retlw	45	;'-'
   361     044F  342D               	retlw	45	;'-'
   362     0450  342D               	retlw	45	;'-'
   363     0451  3450               	retlw	80	;'P'
   364     0452  3441               	retlw	65	;'A'
   365     0453  3452               	retlw	82	;'R'
   366     0454  3441               	retlw	65	;'A'
   367     0455  3420               	retlw	32	;' '
   368     0456  3443               	retlw	67	;'C'
   369     0457  344F               	retlw	79	;'O'
   370     0458  344E               	retlw	78	;'N'
   371     0459  3454               	retlw	84	;'T'
   372     045A  3452               	retlw	82	;'R'
   373     045B  344F               	retlw	79	;'O'
   374     045C  344C               	retlw	76	;'L'
   375     045D  3441               	retlw	65	;'A'
   376     045E  3452               	retlw	82	;'R'
   377     045F  3420               	retlw	32	;' '
   378     0460  3443               	retlw	67	;'C'
   379     0461  344F               	retlw	79	;'O'
   380     0462  344E               	retlw	78	;'N'
   381     0463  3420               	retlw	32	;' '
   382     0464  344C               	retlw	76	;'L'
   383     0465  3441               	retlw	65	;'A'
   384     0466  3420               	retlw	32	;' '
   385     0467  3443               	retlw	67	;'C'
   386     0468  344F               	retlw	79	;'O'
   387     0469  344D               	retlw	77	;'M'
   388     046A  3450               	retlw	80	;'P'
   389     046B  3455               	retlw	85	;'U'
   390     046C  3454               	retlw	84	;'T'
   391     046D  3441               	retlw	65	;'A'
   392     046E  3444               	retlw	68	;'D'
   393     046F  344F               	retlw	79	;'O'
   394     0470  3452               	retlw	82	;'R'
   395     0471  3441               	retlw	65	;'A'
   396     0472  3420               	retlw	32	;' '
   397     0473  3445               	retlw	69	;'E'
   398     0474  344C               	retlw	76	;'L'
   399     0475  3445               	retlw	69	;'E'
   400     0476  3447               	retlw	71	;'G'
   401     0477  3449               	retlw	73	;'I'
   402     0478  3452               	retlw	82	;'R'
   403     0479  3420               	retlw	32	;' '
   404     047A  3445               	retlw	69	;'E'
   405     047B  344C               	retlw	76	;'L'
   406     047C  3420               	retlw	32	;' '
   407     047D  344D               	retlw	77	;'M'
   408     047E  344F               	retlw	79	;'O'
   409     047F  3444               	retlw	68	;'D'
   410     0480  344F               	retlw	79	;'O'
   411     0481  3420               	retlw	32	;' '
   412     0482  3433               	retlw	51	;'3'
   413     0483  342D               	retlw	45	;'-'
   414     0484  342D               	retlw	45	;'-'
   415     0485  342D               	retlw	45	;'-'
   416     0486  342D               	retlw	45	;'-'
   417     0487  342D               	retlw	45	;'-'
   418     0488  342D               	retlw	45	;'-'
   419     0489  342D               	retlw	45	;'-'
   420     048A  342D               	retlw	45	;'-'
   421     048B  342D               	retlw	45	;'-'
   422     048C  342D               	retlw	45	;'-'
   423     048D  342D               	retlw	45	;'-'
   424     048E  342D               	retlw	45	;'-'
   425     048F  342D               	retlw	45	;'-'
   426     0490  342D               	retlw	45	;'-'
   427     0491  342D               	retlw	45	;'-'
   428     0492  342D               	retlw	45	;'-'
   429     0493  342D               	retlw	45	;'-'
   430     0494  342D               	retlw	45	;'-'
   431     0495  342D               	retlw	45	;'-'
   432     0496  342D               	retlw	45	;'-'
   433     0497  342D               	retlw	45	;'-'
   434     0498  342D               	retlw	45	;'-'
   435     0499  342D               	retlw	45	;'-'
   436     049A  342D               	retlw	45	;'-'
   437     049B  342D               	retlw	45	;'-'
   438     049C  342D               	retlw	45	;'-'
   439     049D  342D               	retlw	45	;'-'
   440     049E  342D               	retlw	45	;'-'
   441     049F  342D               	retlw	45	;'-'
   442     04A0  342D               	retlw	45	;'-'
   443     04A1  342D               	retlw	45	;'-'
   444     04A2  342D               	retlw	45	;'-'
   445     04A3  342D               	retlw	45	;'-'
   446     04A4  340A               	retlw	10
   447     04A5  340D               	retlw	13
   448     04A6  3400               	retlw	0
   449                           
   450                           	psect	cinit
   451     0013                     start_initialization:	
   452                           ; #config settings
   453                           
   454     0013                     __initialization:
   455                           
   456                           ; Initialize objects allocated to BANK0
   457     0013  1383               	bcf	3,7	;select IRP bank0
   458     0014  3043               	movlw	low (__pdataBANK0+35)
   459     0015  00FD               	movwf	btemp+-1
   460     0016  3006               	movlw	high __pidataBANK0
   461     0017  00FE               	movwf	btemp
   462     0018  3021               	movlw	low __pidataBANK0
   463     0019  00FF               	movwf	btemp+1
   464     001A  3020               	movlw	low __pdataBANK0
   465     001B  0084               	movwf	4
   466     001C  120A  118A  2674  120A  118A  	fcall	init_ram0
   467                           
   468                           ; Clear objects allocated to BANK0
   469     0021  01D4               	clrf	__pbssBANK0& (0+127)
   470     0022  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   471     0023  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   472     0024  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   473     0025  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   474     0026  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   475     0027  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   476     0028  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   477     0029  01DC               	clrf	(__pbssBANK0+8)& (0+127)
   478     002A  01DD               	clrf	(__pbssBANK0+9)& (0+127)
   479     002B  01DE               	clrf	(__pbssBANK0+10)& (0+127)
   480     002C  01DF               	clrf	(__pbssBANK0+11)& (0+127)
   481     002D  01E0               	clrf	(__pbssBANK0+12)& (0+127)
   482     002E  01E1               	clrf	(__pbssBANK0+13)& (0+127)
   483                           
   484                           ; Clear objects allocated to COMMON
   485     002F  01FD               	clrf	__pbssCOMMON& (0+127)
   486     0030                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489     0030                     __end_of__initialization:
   490     0030  0183               	clrf	3
   491     0031  120A  118A  2A38   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssCOMMON
   494     007D                     __pbssCOMMON:
   495     007D                     _dato:
   496     007D                     	ds	1
   497                           
   498                           	psect	bssBANK0
   499     0054                     __pbssBANK0:
   500     0054                     _pot1:
   501     0054                     	ds	2
   502     0056                     _pot:
   503     0056                     	ds	2
   504     0058                     _loop:
   505     0058                     	ds	2
   506     005A                     _bandera:
   507     005A                     	ds	2
   508     005C                     _selector:
   509     005C                     	ds	2
   510     005E                     _y1:
   511     005E                     	ds	1
   512     005F                     _x1:
   513     005F                     	ds	1
   514     0060                     _y:
   515     0060                     	ds	1
   516     0061                     _x:
   517     0061                     	ds	1
   518                           
   519                           	psect	dataBANK0
   520     0020                     __pdataBANK0:
   521     0020                     _servo:
   522     0020                     	ds	18
   523     0032                     _servo2:
   524     0032                     	ds	17
   525                           
   526                           	psect	inittext
   527     0670                     init_fetch0:	
   528                           ;	Called with low address in FSR and high address in W
   529                           
   530     0670  087E               	movf	btemp,w
   531     0671  008A               	movwf	10
   532     0672  087F               	movf	btemp+1,w
   533     0673  0082               	movwf	2
   534     0674                     init_ram0:	
   535                           ;Called with:
   536                           ;	high address of idata address in btemp 
   537                           ;	low address of idata address in btemp+1 
   538                           ;	low address of data in FSR
   539                           ;	high address + 1 of data in btemp-1
   540                           
   541     0674  120A  118A  2670  120A  118A  	fcall	init_fetch0
   542     0679  0080               	movwf	0
   543     067A  0A84               	incf	4,f
   544     067B  0804               	movf	4,w
   545     067C  067D               	xorwf	btemp+-1,w
   546     067D  1903               	btfsc	3,2
   547     067E  3400               	retlw	0
   548     067F  0AFF               	incf	btemp+1,f
   549     0680  1903               	btfsc	3,2
   550     0681  0AFE               	incf	btemp,f
   551     0682  2E74               	goto	init_ram0
   552                           
   553                           	psect	cstackBANK1
   554     00A0                     __pcstackBANK1:
   555     00A0                     ??_setup:
   556     00A0                     ??_setupADC:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     00A0                     ??_setupPWM:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     00A0                     ??_setupUART:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     00A0                     ??_cadena:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     00A0                     ??_writeEEPROM:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     00A0                     ??_interrup:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     00A0                     ??_readEEPROM:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     00A0                     writeEEPROM@data:	
   578                           ; 1 bytes @ 0x0
   579                           
   580                           
   581                           ; 1 bytes @ 0x0
   582     00A0                     	ds	1
   583     00A1                     cadena@cursor:
   584                           
   585                           ; 1 bytes @ 0x1
   586     00A1                     	ds	1
   587     00A2                     ??_main:
   588                           
   589                           ; 1 bytes @ 0x2
   590     00A2                     	ds	2
   591                           
   592                           	psect	cstackCOMMON
   593     0070                     __pcstackCOMMON:
   594     0070                     ?_delay:
   595     0070                     ?_setup:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_setupADC:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_setupPWM:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ?_setupUART:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_cadena:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ?_writeEEPROM:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_interrup:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     ?_readEEPROM:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     ?_isr:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     ?_main:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?___wmul:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     delay@micro:	
   629                           ; 2 bytes @ 0x0
   630                           
   631     0070                     ___wmul@multiplier:	
   632                           ; 2 bytes @ 0x0
   633                           
   634                           
   635                           ; 2 bytes @ 0x0
   636     0070                     	ds	2
   637     0072                     ??_delay:
   638     0072                     ___wmul@multiplicand:	
   639                           ; 1 bytes @ 0x2
   640                           
   641                           
   642                           ; 2 bytes @ 0x2
   643     0072                     	ds	2
   644     0074                     ??___wmul:
   645     0074                     ___wmul@product:	
   646                           ; 1 bytes @ 0x4
   647                           
   648                           
   649                           ; 2 bytes @ 0x4
   650     0074                     	ds	2
   651     0076                     ?___awdiv:
   652     0076                     ___awdiv@divisor:	
   653                           ; 2 bytes @ 0x6
   654                           
   655                           
   656                           ; 2 bytes @ 0x6
   657     0076                     	ds	2
   658     0078                     ___awdiv@dividend:
   659                           
   660                           ; 2 bytes @ 0x8
   661     0078                     	ds	2
   662     007A                     ??___awdiv:
   663                           
   664                           ; 1 bytes @ 0xA
   665     007A                     	ds	1
   666     007B                     ??_map:
   667                           
   668                           ; 1 bytes @ 0xB
   669     007B                     	ds	1
   670     007C                     map@value:
   671                           
   672                           ; 1 bytes @ 0xC
   673     007C                     	ds	1
   674                           
   675                           	psect	cstackBANK0
   676     0043                     __pcstackBANK0:
   677     0043                     ___awdiv@counter:
   678                           
   679                           ; 1 bytes @ 0x0
   680     0043                     	ds	1
   681     0044                     ___awdiv@sign:
   682                           
   683                           ; 1 bytes @ 0x1
   684     0044                     	ds	1
   685     0045                     ___awdiv@quotient:
   686                           
   687                           ; 2 bytes @ 0x2
   688     0045                     	ds	2
   689     0047                     ?_map:
   690     0047                     map@inputmin:	
   691                           ; 2 bytes @ 0x4
   692                           
   693                           
   694                           ; 2 bytes @ 0x4
   695     0047                     	ds	2
   696     0049                     map@inputmax:
   697                           
   698                           ; 2 bytes @ 0x6
   699     0049                     	ds	2
   700     004B                     map@outmin:
   701                           
   702                           ; 2 bytes @ 0x8
   703     004B                     	ds	2
   704     004D                     map@outmax:
   705                           
   706                           ; 2 bytes @ 0xA
   707     004D                     	ds	2
   708     004F                     ??_isr:
   709                           
   710                           ; 1 bytes @ 0xC
   711     004F                     	ds	5
   712                           
   713                           	psect	maintext
   714     0238                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 186 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       0       2       0       0
   737 ;;      Totals:         0       0       2       0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels required when called: 5
   740 ;; This function calls:
   741 ;;		_cadena
   742 ;;		_interrup
   743 ;;		_readEEPROM
   744 ;;		_setup
   745 ;;		_setupADC
   746 ;;		_setupPWM
   747 ;;		_setupUART
   748 ;;		_writeEEPROM
   749 ;; This function is called by:
   750 ;;		Startup code after reset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754     0238                     _main:	
   755                           ;psect for function _main
   756                           
   757     0238                     l2203:	
   758                           ;incstack = 0
   759                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   760                           
   761                           
   762                           ;main.c: 187:     setup();
   763     0238  120A  118A  2510  120A  118A  	fcall	_setup
   764     023D                     l2205:
   765                           
   766                           ;main.c: 188:     setupADC();
   767     023D  120A  118A  2644  120A  118A  	fcall	_setupADC
   768     0242                     l2207:
   769                           
   770                           ;main.c: 189:     setupPWM();
   771     0242  120A  118A  25D6  120A  118A  	fcall	_setupPWM
   772     0247                     l2209:
   773                           
   774                           ;main.c: 190:     setupUART();
   775     0247  120A  118A  265B  120A  118A  	fcall	_setupUART
   776                           
   777                           ;main.c: 191:     TMR0 = 246;
   778     024C  30F6               	movlw	246
   779     024D  1283               	bcf	3,5	;RP0=0, select bank0
   780     024E  1303               	bcf	3,6	;RP1=0, select bank0
   781     024F  0081               	movwf	1	;volatile
   782     0250                     l2211:
   783                           
   784                           ;main.c: 192:     cadena("\n\r---------------------------------PARA CONTROLAR CON LA COM
      +                          PUTADORA ELEGIR EL MODO 3---------------------------------\n\r");
   785     0250  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   786     0251  120A  118A  25AE  120A  118A  	fcall	_cadena
   787     0256                     l2213:
   788                           
   789                           ;main.c: 194:         if (selector == 0){
   790     0256  1283               	bcf	3,5	;RP0=0, select bank0
   791     0257  1303               	bcf	3,6	;RP1=0, select bank0
   792     0258  085C               	movf	_selector,w
   793     0259  045D               	iorwf	_selector+1,w
   794     025A  1D03               	btfss	3,2
   795     025B  2A5D               	goto	u1541
   796     025C  2A5E               	goto	u1540
   797     025D                     u1541:
   798     025D  2B16               	goto	l2283
   799     025E                     u1540:
   800     025E                     l2215:
   801                           
   802                           ;main.c: 195:             loop = 1;
   803     025E  3001               	movlw	1
   804     025F  00D8               	movwf	_loop
   805     0260  3000               	movlw	0
   806     0261  00D9               	movwf	_loop+1
   807                           
   808                           ;main.c: 196:             while (loop == 1){
   809     0262  2B10               	goto	l2281
   810     0263                     l185:
   811                           
   812                           ;main.c: 197:                 if (ADCON0bits.GO == 0){
   813     0263  189F               	btfsc	31,1	;volatile
   814     0264  2A66               	goto	u1551
   815     0265  2A67               	goto	u1550
   816     0266                     u1551:
   817     0266  2A68               	goto	l186
   818     0267                     u1550:
   819     0267                     l2217:
   820                           
   821                           ;main.c: 198:                     ADCON0bits.GO = 1;}
   822     0267  149F               	bsf	31,1	;volatile
   823     0268                     l186:
   824                           
   825                           ;main.c: 199:                 PORTDbits.RD5 = 1;
   826     0268  1688               	bsf	8,5	;volatile
   827                           
   828                           ;main.c: 200:                 PORTDbits.RD6 = 0;
   829     0269  1308               	bcf	8,6	;volatile
   830                           
   831                           ;main.c: 201:                 PORTDbits.RD7 = 0;
   832     026A  1388               	bcf	8,7	;volatile
   833                           
   834                           ;main.c: 202:                 if (PORTBbits.RB6 == 0){
   835     026B  1B06               	btfsc	6,6	;volatile
   836     026C  2A6E               	goto	u1561
   837     026D  2A6F               	goto	u1560
   838     026E                     u1561:
   839     026E  2A73               	goto	l2221
   840     026F                     u1560:
   841     026F                     l2219:
   842                           
   843                           ;main.c: 203:                     bandera = 2;}
   844     026F  3002               	movlw	2
   845     0270  00DA               	movwf	_bandera
   846     0271  3000               	movlw	0
   847     0272  00DB               	movwf	_bandera+1
   848     0273                     l2221:
   849                           
   850                           ;main.c: 204:                 if (PORTBbits.RB6 == 1 && bandera == 2){
   851     0273  1F06               	btfss	6,6	;volatile
   852     0274  2A76               	goto	u1571
   853     0275  2A77               	goto	u1570
   854     0276                     u1571:
   855     0276  2ABD               	goto	l2251
   856     0277                     u1570:
   857     0277                     l2223:
   858     0277  3002               	movlw	2
   859     0278  065A               	xorwf	_bandera,w
   860     0279  045B               	iorwf	_bandera+1,w
   861     027A  1D03               	btfss	3,2
   862     027B  2A7D               	goto	u1581
   863     027C  2A7E               	goto	u1580
   864     027D                     u1581:
   865     027D  2ABD               	goto	l2251
   866     027E                     u1580:
   867     027E                     l2225:
   868                           
   869                           ;main.c: 205:                     EEADR = 0b00000000;
   870     027E  1283               	bcf	3,5	;RP0=0, select bank2
   871     027F  1703               	bsf	3,6	;RP1=1, select bank2
   872     0280  018D               	clrf	13	;volatile
   873     0281                     l2227:
   874                           
   875                           ;main.c: 206:                     writeEEPROM(CCPR1L);
   876     0281  1283               	bcf	3,5	;RP0=0, select bank0
   877     0282  1303               	bcf	3,6	;RP1=0, select bank0
   878     0283  0815               	movf	21,w	;volatile
   879     0284  120A  118A  2584  120A  118A  	fcall	_writeEEPROM
   880     0289                     l2229:
   881                           
   882                           ;main.c: 207:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   883     0289  2A8A               	nop2	;2 cycle nop
   884     028A  2A8B               	nop2	;2 cycle nop
   885     028B  0000               	nop
   886     028C                     l2231:
   887                           
   888                           ;main.c: 209:                     EEADR = 0b00000001;
   889     028C  3001               	movlw	1
   890     028D  1283               	bcf	3,5	;RP0=0, select bank2
   891     028E  1703               	bsf	3,6	;RP1=1, select bank2
   892     028F  008D               	movwf	13	;volatile
   893     0290                     l2233:
   894                           
   895                           ;main.c: 210:                     writeEEPROM(CCPR2L);
   896     0290  1283               	bcf	3,5	;RP0=0, select bank0
   897     0291  1303               	bcf	3,6	;RP1=0, select bank0
   898     0292  081B               	movf	27,w	;volatile
   899     0293  120A  118A  2584  120A  118A  	fcall	_writeEEPROM
   900     0298                     l2235:
   901                           
   902                           ;main.c: 211:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   903     0298  2A99               	nop2	;2 cycle nop
   904     0299  2A9A               	nop2	;2 cycle nop
   905     029A  0000               	nop
   906     029B                     l2237:
   907                           
   908                           ;main.c: 213:                     EEADR = 0b00000010;
   909     029B  3002               	movlw	2
   910     029C  1283               	bcf	3,5	;RP0=0, select bank2
   911     029D  1703               	bsf	3,6	;RP1=1, select bank2
   912     029E  008D               	movwf	13	;volatile
   913     029F                     l2239:
   914                           
   915                           ;main.c: 214:                     writeEEPROM(pot);
   916     029F  1283               	bcf	3,5	;RP0=0, select bank0
   917     02A0  1303               	bcf	3,6	;RP1=0, select bank0
   918     02A1  0856               	movf	_pot,w
   919     02A2  120A  118A  2584  120A  118A  	fcall	_writeEEPROM
   920     02A7                     l2241:
   921                           
   922                           ;main.c: 215:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   923     02A7  2AA8               	nop2	;2 cycle nop
   924     02A8  2AA9               	nop2	;2 cycle nop
   925     02A9  0000               	nop
   926     02AA                     l2243:
   927                           
   928                           ;main.c: 217:                     EEADR = 0b00000011;
   929     02AA  3003               	movlw	3
   930     02AB  1283               	bcf	3,5	;RP0=0, select bank2
   931     02AC  1703               	bsf	3,6	;RP1=1, select bank2
   932     02AD  008D               	movwf	13	;volatile
   933     02AE                     l2245:
   934                           
   935                           ;main.c: 218:                     writeEEPROM(pot1);
   936     02AE  1283               	bcf	3,5	;RP0=0, select bank0
   937     02AF  1303               	bcf	3,6	;RP1=0, select bank0
   938     02B0  0854               	movf	_pot1,w
   939     02B1  120A  118A  2584  120A  118A  	fcall	_writeEEPROM
   940     02B6                     l2247:
   941                           
   942                           ;main.c: 219:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   943     02B6  2AB7               	nop2	;2 cycle nop
   944     02B7  2AB8               	nop2	;2 cycle nop
   945     02B8  0000               	nop
   946     02B9                     l2249:
   947                           
   948                           ;main.c: 221:                     bandera = 0;}
   949     02B9  1283               	bcf	3,5	;RP0=0, select bank0
   950     02BA  1303               	bcf	3,6	;RP1=0, select bank0
   951     02BB  01DA               	clrf	_bandera
   952     02BC  01DB               	clrf	_bandera+1
   953     02BD                     l2251:
   954                           
   955                           ;main.c: 223:                 if (PORTBbits.RB5 == 0){
   956     02BD  1A86               	btfsc	6,5	;volatile
   957     02BE  2AC0               	goto	u1591
   958     02BF  2AC1               	goto	u1590
   959     02C0                     u1591:
   960     02C0  2AC5               	goto	l2255
   961     02C1                     u1590:
   962     02C1                     l2253:
   963                           
   964                           ;main.c: 224:                     bandera = 3;}
   965     02C1  3003               	movlw	3
   966     02C2  00DA               	movwf	_bandera
   967     02C3  3000               	movlw	0
   968     02C4  00DB               	movwf	_bandera+1
   969     02C5                     l2255:
   970                           
   971                           ;main.c: 225:                 if (PORTBbits.RB5 == 1 && bandera == 3){
   972     02C5  1E86               	btfss	6,5	;volatile
   973     02C6  2AC8               	goto	u1601
   974     02C7  2AC9               	goto	u1600
   975     02C8                     u1601:
   976     02C8  2B10               	goto	l2281
   977     02C9                     u1600:
   978     02C9                     l2257:
   979     02C9  3003               	movlw	3
   980     02CA  065A               	xorwf	_bandera,w
   981     02CB  045B               	iorwf	_bandera+1,w
   982     02CC  1D03               	btfss	3,2
   983     02CD  2ACF               	goto	u1611
   984     02CE  2AD0               	goto	u1610
   985     02CF                     u1611:
   986     02CF  2B10               	goto	l2281
   987     02D0                     u1610:
   988     02D0                     l2259:
   989                           
   990                           ;main.c: 226:                     EEADR = 0b00000100;
   991     02D0  3004               	movlw	4
   992     02D1  1283               	bcf	3,5	;RP0=0, select bank2
   993     02D2  1703               	bsf	3,6	;RP1=1, select bank2
   994     02D3  008D               	movwf	13	;volatile
   995     02D4                     l2261:
   996                           
   997                           ;main.c: 227:                     writeEEPROM(CCPR1L);
   998     02D4  1283               	bcf	3,5	;RP0=0, select bank0
   999     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1000     02D6  0815               	movf	21,w	;volatile
  1001     02D7  120A  118A  2584  120A  118A  	fcall	_writeEEPROM
  1002     02DC                     l2263:
  1003                           
  1004                           ;main.c: 228:                     _delay((unsigned long)((40)*(500000/4000000.0)));
  1005     02DC  2ADD               	nop2	;2 cycle nop
  1006     02DD  2ADE               	nop2	;2 cycle nop
  1007     02DE  0000               	nop
  1008     02DF                     l2265:
  1009                           
  1010                           ;main.c: 230:                     EEADR = 0b00000101;
  1011     02DF  3005               	movlw	5
  1012     02E0  1283               	bcf	3,5	;RP0=0, select bank2
  1013     02E1  1703               	bsf	3,6	;RP1=1, select bank2
  1014     02E2  008D               	movwf	13	;volatile
  1015                           
  1016                           ;main.c: 231:                     writeEEPROM(CCPR2L);
  1017     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1018     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1019     02E5  081B               	movf	27,w	;volatile
  1020     02E6  120A  118A  2584  120A  118A  	fcall	_writeEEPROM
  1021     02EB                     l2267:
  1022                           
  1023                           ;main.c: 232:                     _delay((unsigned long)((40)*(500000/4000000.0)));
  1024     02EB  2AEC               	nop2	;2 cycle nop
  1025     02EC  2AED               	nop2	;2 cycle nop
  1026     02ED  0000               	nop
  1027     02EE                     l2269:
  1028                           
  1029                           ;main.c: 234:                     EEADR = 0b00000110;
  1030     02EE  3006               	movlw	6
  1031     02EF  1283               	bcf	3,5	;RP0=0, select bank2
  1032     02F0  1703               	bsf	3,6	;RP1=1, select bank2
  1033     02F1  008D               	movwf	13	;volatile
  1034     02F2                     l2271:
  1035                           
  1036                           ;main.c: 235:                     writeEEPROM(pot);
  1037     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1038     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1039     02F4  0856               	movf	_pot,w
  1040     02F5  120A  118A  2584  120A  118A  	fcall	_writeEEPROM
  1041     02FA                     l2273:
  1042                           
  1043                           ;main.c: 236:                     _delay((unsigned long)((40)*(500000/4000000.0)));
  1044     02FA  2AFB               	nop2	;2 cycle nop
  1045     02FB  2AFC               	nop2	;2 cycle nop
  1046     02FC  0000               	nop
  1047                           
  1048                           ;main.c: 238:                     EEADR = 0b00000111;
  1049     02FD  3007               	movlw	7
  1050     02FE  1283               	bcf	3,5	;RP0=0, select bank2
  1051     02FF  1703               	bsf	3,6	;RP1=1, select bank2
  1052     0300  008D               	movwf	13	;volatile
  1053     0301                     l2275:
  1054                           
  1055                           ;main.c: 239:                     writeEEPROM(pot1);
  1056     0301  1283               	bcf	3,5	;RP0=0, select bank0
  1057     0302  1303               	bcf	3,6	;RP1=0, select bank0
  1058     0303  0854               	movf	_pot1,w
  1059     0304  120A  118A  2584  120A  118A  	fcall	_writeEEPROM
  1060     0309                     l2277:
  1061                           
  1062                           ;main.c: 240:                     _delay((unsigned long)((40)*(500000/4000000.0)));
  1063     0309  2B0A               	nop2	;2 cycle nop
  1064     030A  2B0B               	nop2	;2 cycle nop
  1065     030B  0000               	nop
  1066     030C                     l2279:
  1067                           
  1068                           ;main.c: 242:                     bandera = 0;}
  1069     030C  1283               	bcf	3,5	;RP0=0, select bank0
  1070     030D  1303               	bcf	3,6	;RP1=0, select bank0
  1071     030E  01DA               	clrf	_bandera
  1072     030F  01DB               	clrf	_bandera+1
  1073     0310                     l2281:
  1074                           
  1075                           ;main.c: 196:             while (loop == 1){
  1076     0310  0358               	decf	_loop,w
  1077     0311  0459               	iorwf	_loop+1,w
  1078     0312  1903               	btfsc	3,2
  1079     0313  2B15               	goto	u1621
  1080     0314  2B16               	goto	u1620
  1081     0315                     u1621:
  1082     0315  2A63               	goto	l185
  1083     0316                     u1620:
  1084     0316                     l2283:
  1085                           
  1086                           ;main.c: 246:         if (selector == 1){
  1087     0316  035C               	decf	_selector,w
  1088     0317  045D               	iorwf	_selector+1,w
  1089     0318  1D03               	btfss	3,2
  1090     0319  2B1B               	goto	u1631
  1091     031A  2B1C               	goto	u1630
  1092     031B                     u1631:
  1093     031B  2C0A               	goto	l2367
  1094     031C                     u1630:
  1095     031C                     l2285:
  1096                           
  1097                           ;main.c: 247:             interrup();
  1098     031C  120A  118A  2694  120A  118A  	fcall	_interrup
  1099     0321                     l2287:
  1100                           
  1101                           ;main.c: 248:             loop = 1;
  1102     0321  3001               	movlw	1
  1103     0322  1283               	bcf	3,5	;RP0=0, select bank0
  1104     0323  1303               	bcf	3,6	;RP1=0, select bank0
  1105     0324  00D8               	movwf	_loop
  1106     0325  3000               	movlw	0
  1107     0326  00D9               	movwf	_loop+1
  1108                           
  1109                           ;main.c: 249:             while (loop == 1){
  1110     0327  2C04               	goto	l2365
  1111     0328                     l194:
  1112                           
  1113                           ;main.c: 250:                 PORTDbits.RD5 = 0;
  1114     0328  1288               	bcf	8,5	;volatile
  1115                           
  1116                           ;main.c: 251:                 PORTDbits.RD6 = 1;
  1117     0329  1708               	bsf	8,6	;volatile
  1118                           
  1119                           ;main.c: 252:                 PORTDbits.RD7 = 0;
  1120     032A  1388               	bcf	8,7	;volatile
  1121                           
  1122                           ;main.c: 253:             if (PORTBbits.RB6 == 0){
  1123     032B  1B06               	btfsc	6,6	;volatile
  1124     032C  2B2E               	goto	u1641
  1125     032D  2B2F               	goto	u1640
  1126     032E                     u1641:
  1127     032E  2B33               	goto	l2291
  1128     032F                     u1640:
  1129     032F                     l2289:
  1130                           
  1131                           ;main.c: 254:                 bandera = 2;}
  1132     032F  3002               	movlw	2
  1133     0330  00DA               	movwf	_bandera
  1134     0331  3000               	movlw	0
  1135     0332  00DB               	movwf	_bandera+1
  1136     0333                     l2291:
  1137                           
  1138                           ;main.c: 255:             if (PORTBbits.RB6 == 1 && bandera == 2){
  1139     0333  1F06               	btfss	6,6	;volatile
  1140     0334  2B36               	goto	u1651
  1141     0335  2B37               	goto	u1650
  1142     0336                     u1651:
  1143     0336  2B97               	goto	l2329
  1144     0337                     u1650:
  1145     0337                     l2293:
  1146     0337  3002               	movlw	2
  1147     0338  065A               	xorwf	_bandera,w
  1148     0339  045B               	iorwf	_bandera+1,w
  1149     033A  1D03               	btfss	3,2
  1150     033B  2B3D               	goto	u1661
  1151     033C  2B3E               	goto	u1660
  1152     033D                     u1661:
  1153     033D  2B97               	goto	l2329
  1154     033E                     u1660:
  1155     033E                     l2295:
  1156                           
  1157                           ;main.c: 256:                 EEADR = 0b00000000;
  1158     033E  1283               	bcf	3,5	;RP0=0, select bank2
  1159     033F  1703               	bsf	3,6	;RP1=1, select bank2
  1160     0340  018D               	clrf	13	;volatile
  1161     0341                     l2297:
  1162                           
  1163                           ;main.c: 257:                 readEEPROM();
  1164     0341  120A  118A  26A1  120A  118A  	fcall	_readEEPROM
  1165     0346                     l2299:
  1166                           
  1167                           ;main.c: 258:                 CCPR1L = dato;
  1168     0346  087D               	movf	_dato,w
  1169     0347  1283               	bcf	3,5	;RP0=0, select bank0
  1170     0348  1303               	bcf	3,6	;RP1=0, select bank0
  1171     0349  0095               	movwf	21	;volatile
  1172     034A                     l2301:
  1173                           
  1174                           ;main.c: 259:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1175     034A  2B4B               	nop2	;2 cycle nop
  1176     034B  2B4C               	nop2	;2 cycle nop
  1177     034C  0000               	nop
  1178     034D                     l2303:
  1179                           
  1180                           ;main.c: 261:                 EEADR = 0b00000001;
  1181     034D  3001               	movlw	1
  1182     034E  1283               	bcf	3,5	;RP0=0, select bank2
  1183     034F  1703               	bsf	3,6	;RP1=1, select bank2
  1184     0350  008D               	movwf	13	;volatile
  1185     0351                     l2305:
  1186                           
  1187                           ;main.c: 262:                 readEEPROM();
  1188     0351  120A  118A  26A1  120A  118A  	fcall	_readEEPROM
  1189     0356                     l2307:
  1190                           
  1191                           ;main.c: 263:                 CCPR2L = dato;
  1192     0356  087D               	movf	_dato,w
  1193     0357  1283               	bcf	3,5	;RP0=0, select bank0
  1194     0358  1303               	bcf	3,6	;RP1=0, select bank0
  1195     0359  009B               	movwf	27	;volatile
  1196     035A                     l2309:
  1197                           
  1198                           ;main.c: 264:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1199     035A  2B5B               	nop2	;2 cycle nop
  1200     035B  2B5C               	nop2	;2 cycle nop
  1201     035C  0000               	nop
  1202     035D                     l2311:
  1203                           
  1204                           ;main.c: 266:                 EEADR = 0b00000010;
  1205     035D  3002               	movlw	2
  1206     035E  1283               	bcf	3,5	;RP0=0, select bank2
  1207     035F  1703               	bsf	3,6	;RP1=1, select bank2
  1208     0360  008D               	movwf	13	;volatile
  1209     0361                     l2313:
  1210                           
  1211                           ;main.c: 267:                 readEEPROM();
  1212     0361  120A  118A  26A1  120A  118A  	fcall	_readEEPROM
  1213     0366                     l2315:
  1214                           
  1215                           ;main.c: 268:                 pot = dato;
  1216     0366  087D               	movf	_dato,w
  1217     0367  1683               	bsf	3,5	;RP0=1, select bank1
  1218     0368  1303               	bcf	3,6	;RP1=0, select bank1
  1219     0369  00A2               	movwf	??_main^(0+128)
  1220     036A  01A3               	clrf	(??_main^(0+128)+1)
  1221     036B  0822               	movf	??_main^(0+128),w
  1222     036C  1283               	bcf	3,5	;RP0=0, select bank0
  1223     036D  1303               	bcf	3,6	;RP1=0, select bank0
  1224     036E  00D6               	movwf	_pot
  1225     036F  1683               	bsf	3,5	;RP0=1, select bank1
  1226     0370  1303               	bcf	3,6	;RP1=0, select bank1
  1227     0371  0823               	movf	(??_main+1)^(0+128),w
  1228     0372  1283               	bcf	3,5	;RP0=0, select bank0
  1229     0373  1303               	bcf	3,6	;RP1=0, select bank0
  1230     0374  00D7               	movwf	_pot+1
  1231     0375                     l2317:
  1232                           
  1233                           ;main.c: 269:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1234     0375  2B76               	nop2	;2 cycle nop
  1235     0376  2B77               	nop2	;2 cycle nop
  1236     0377  0000               	nop
  1237     0378                     l2319:
  1238                           
  1239                           ;main.c: 271:                 EEADR = 0b00000011;
  1240     0378  3003               	movlw	3
  1241     0379  1283               	bcf	3,5	;RP0=0, select bank2
  1242     037A  1703               	bsf	3,6	;RP1=1, select bank2
  1243     037B  008D               	movwf	13	;volatile
  1244     037C                     l2321:
  1245                           
  1246                           ;main.c: 272:                 readEEPROM();
  1247     037C  120A  118A  26A1  120A  118A  	fcall	_readEEPROM
  1248     0381                     l2323:
  1249                           
  1250                           ;main.c: 273:                 pot1 = dato;
  1251     0381  087D               	movf	_dato,w
  1252     0382  1683               	bsf	3,5	;RP0=1, select bank1
  1253     0383  1303               	bcf	3,6	;RP1=0, select bank1
  1254     0384  00A2               	movwf	??_main^(0+128)
  1255     0385  01A3               	clrf	(??_main^(0+128)+1)
  1256     0386  0822               	movf	??_main^(0+128),w
  1257     0387  1283               	bcf	3,5	;RP0=0, select bank0
  1258     0388  1303               	bcf	3,6	;RP1=0, select bank0
  1259     0389  00D4               	movwf	_pot1
  1260     038A  1683               	bsf	3,5	;RP0=1, select bank1
  1261     038B  1303               	bcf	3,6	;RP1=0, select bank1
  1262     038C  0823               	movf	(??_main+1)^(0+128),w
  1263     038D  1283               	bcf	3,5	;RP0=0, select bank0
  1264     038E  1303               	bcf	3,6	;RP1=0, select bank0
  1265     038F  00D5               	movwf	_pot1+1
  1266     0390                     l2325:
  1267                           
  1268                           ;main.c: 274:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1269     0390  2B91               	nop2	;2 cycle nop
  1270     0391  2B92               	nop2	;2 cycle nop
  1271     0392  0000               	nop
  1272     0393                     l2327:
  1273                           
  1274                           ;main.c: 276:                 bandera = 0;}
  1275     0393  1283               	bcf	3,5	;RP0=0, select bank0
  1276     0394  1303               	bcf	3,6	;RP1=0, select bank0
  1277     0395  01DA               	clrf	_bandera
  1278     0396  01DB               	clrf	_bandera+1
  1279     0397                     l2329:
  1280                           
  1281                           ;main.c: 278:             if (PORTBbits.RB5 == 0){
  1282     0397  1A86               	btfsc	6,5	;volatile
  1283     0398  2B9A               	goto	u1671
  1284     0399  2B9B               	goto	u1670
  1285     039A                     u1671:
  1286     039A  2B9F               	goto	l2333
  1287     039B                     u1670:
  1288     039B                     l2331:
  1289                           
  1290                           ;main.c: 279:             bandera = 3;}
  1291     039B  3003               	movlw	3
  1292     039C  00DA               	movwf	_bandera
  1293     039D  3000               	movlw	0
  1294     039E  00DB               	movwf	_bandera+1
  1295     039F                     l2333:
  1296                           
  1297                           ;main.c: 280:             if (PORTBbits.RB5 == 1 && bandera == 3){
  1298     039F  1E86               	btfss	6,5	;volatile
  1299     03A0  2BA2               	goto	u1681
  1300     03A1  2BA3               	goto	u1680
  1301     03A2                     u1681:
  1302     03A2  2C04               	goto	l2365
  1303     03A3                     u1680:
  1304     03A3                     l2335:
  1305     03A3  3003               	movlw	3
  1306     03A4  065A               	xorwf	_bandera,w
  1307     03A5  045B               	iorwf	_bandera+1,w
  1308     03A6  1D03               	btfss	3,2
  1309     03A7  2BA9               	goto	u1691
  1310     03A8  2BAA               	goto	u1690
  1311     03A9                     u1691:
  1312     03A9  2C04               	goto	l2365
  1313     03AA                     u1690:
  1314     03AA                     l2337:
  1315                           
  1316                           ;main.c: 281:                 EEADR = 0b00000100;
  1317     03AA  3004               	movlw	4
  1318     03AB  1283               	bcf	3,5	;RP0=0, select bank2
  1319     03AC  1703               	bsf	3,6	;RP1=1, select bank2
  1320     03AD  008D               	movwf	13	;volatile
  1321     03AE                     l2339:
  1322                           
  1323                           ;main.c: 282:                 readEEPROM();
  1324     03AE  120A  118A  26A1  120A  118A  	fcall	_readEEPROM
  1325     03B3                     l2341:
  1326                           
  1327                           ;main.c: 283:                 CCPR1L = dato;
  1328     03B3  087D               	movf	_dato,w
  1329     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1330     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1331     03B6  0095               	movwf	21	;volatile
  1332     03B7                     l2343:
  1333                           
  1334                           ;main.c: 284:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1335     03B7  2BB8               	nop2	;2 cycle nop
  1336     03B8  2BB9               	nop2	;2 cycle nop
  1337     03B9  0000               	nop
  1338     03BA                     l2345:
  1339                           
  1340                           ;main.c: 286:                 EEADR = 0b00000101;
  1341     03BA  3005               	movlw	5
  1342     03BB  1283               	bcf	3,5	;RP0=0, select bank2
  1343     03BC  1703               	bsf	3,6	;RP1=1, select bank2
  1344     03BD  008D               	movwf	13	;volatile
  1345     03BE                     l2347:
  1346                           
  1347                           ;main.c: 287:                 readEEPROM();
  1348     03BE  120A  118A  26A1  120A  118A  	fcall	_readEEPROM
  1349                           
  1350                           ;main.c: 288:                 CCPR2L = dato;
  1351     03C3  087D               	movf	_dato,w
  1352     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1353     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1354     03C6  009B               	movwf	27	;volatile
  1355     03C7                     l2349:
  1356                           
  1357                           ;main.c: 289:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1358     03C7  2BC8               	nop2	;2 cycle nop
  1359     03C8  2BC9               	nop2	;2 cycle nop
  1360     03C9  0000               	nop
  1361                           
  1362                           ;main.c: 291:                 EEADR = 0b00000110;
  1363     03CA  3006               	movlw	6
  1364     03CB  1283               	bcf	3,5	;RP0=0, select bank2
  1365     03CC  1703               	bsf	3,6	;RP1=1, select bank2
  1366     03CD  008D               	movwf	13	;volatile
  1367     03CE                     l2351:
  1368                           
  1369                           ;main.c: 292:                 readEEPROM();
  1370     03CE  120A  118A  26A1  120A  118A  	fcall	_readEEPROM
  1371     03D3                     l2353:
  1372                           
  1373                           ;main.c: 293:                 pot = dato;
  1374     03D3  087D               	movf	_dato,w
  1375     03D4  1683               	bsf	3,5	;RP0=1, select bank1
  1376     03D5  1303               	bcf	3,6	;RP1=0, select bank1
  1377     03D6  00A2               	movwf	??_main^(0+128)
  1378     03D7  01A3               	clrf	(??_main^(0+128)+1)
  1379     03D8  0822               	movf	??_main^(0+128),w
  1380     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1381     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1382     03DB  00D6               	movwf	_pot
  1383     03DC  1683               	bsf	3,5	;RP0=1, select bank1
  1384     03DD  1303               	bcf	3,6	;RP1=0, select bank1
  1385     03DE  0823               	movf	(??_main+1)^(0+128),w
  1386     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1387     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1388     03E1  00D7               	movwf	_pot+1
  1389     03E2                     l2355:
  1390                           
  1391                           ;main.c: 294:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1392     03E2  2BE3               	nop2	;2 cycle nop
  1393     03E3  2BE4               	nop2	;2 cycle nop
  1394     03E4  0000               	nop
  1395     03E5                     l2357:
  1396                           
  1397                           ;main.c: 296:                 EEADR = 0b00000111;
  1398     03E5  3007               	movlw	7
  1399     03E6  1283               	bcf	3,5	;RP0=0, select bank2
  1400     03E7  1703               	bsf	3,6	;RP1=1, select bank2
  1401     03E8  008D               	movwf	13	;volatile
  1402     03E9                     l2359:
  1403                           
  1404                           ;main.c: 297:                 readEEPROM();
  1405     03E9  120A  118A  26A1  120A  118A  	fcall	_readEEPROM
  1406                           
  1407                           ;main.c: 298:                 pot1 = dato;
  1408     03EE  087D               	movf	_dato,w
  1409     03EF  1683               	bsf	3,5	;RP0=1, select bank1
  1410     03F0  1303               	bcf	3,6	;RP1=0, select bank1
  1411     03F1  00A2               	movwf	??_main^(0+128)
  1412     03F2  01A3               	clrf	(??_main^(0+128)+1)
  1413     03F3  0822               	movf	??_main^(0+128),w
  1414     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1415     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1416     03F6  00D4               	movwf	_pot1
  1417     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  1418     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  1419     03F9  0823               	movf	(??_main+1)^(0+128),w
  1420     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1421     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1422     03FC  00D5               	movwf	_pot1+1
  1423     03FD                     l2361:
  1424                           
  1425                           ;main.c: 299:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1426     03FD  2BFE               	nop2	;2 cycle nop
  1427     03FE  2BFF               	nop2	;2 cycle nop
  1428     03FF  0000               	nop
  1429     0400                     l2363:
  1430                           
  1431                           ;main.c: 301:                 bandera = 0;}
  1432     0400  1283               	bcf	3,5	;RP0=0, select bank0
  1433     0401  1303               	bcf	3,6	;RP1=0, select bank0
  1434     0402  01DA               	clrf	_bandera
  1435     0403  01DB               	clrf	_bandera+1
  1436     0404                     l2365:
  1437                           
  1438                           ;main.c: 249:             while (loop == 1){
  1439     0404  0358               	decf	_loop,w
  1440     0405  0459               	iorwf	_loop+1,w
  1441     0406  1903               	btfsc	3,2
  1442     0407  2C09               	goto	u1701
  1443     0408  2C0A               	goto	u1700
  1444     0409                     u1701:
  1445     0409  2B28               	goto	l194
  1446     040A                     u1700:
  1447     040A                     l2367:
  1448                           
  1449                           ;main.c: 305:         if (selector == 2){
  1450     040A  3002               	movlw	2
  1451     040B  065C               	xorwf	_selector,w
  1452     040C  045D               	iorwf	_selector+1,w
  1453     040D  1D03               	btfss	3,2
  1454     040E  2C10               	goto	u1711
  1455     040F  2C11               	goto	u1710
  1456     0410                     u1711:
  1457     0410  2A56               	goto	l2213
  1458     0411                     u1710:
  1459     0411                     l2369:
  1460                           
  1461                           ;main.c: 306:             loop = 1;
  1462     0411  3001               	movlw	1
  1463     0412  00D8               	movwf	_loop
  1464     0413  3000               	movlw	0
  1465     0414  00D9               	movwf	_loop+1
  1466                           
  1467                           ;main.c: 307:             while (loop == 1){
  1468     0415  2C1E               	goto	l2371
  1469     0416                     l202:
  1470                           
  1471                           ;main.c: 308:             PIE1bits.RCIE = 1;
  1472     0416  1683               	bsf	3,5	;RP0=1, select bank1
  1473     0417  1303               	bcf	3,6	;RP1=0, select bank1
  1474     0418  168C               	bsf	12,5	;volatile
  1475                           
  1476                           ;main.c: 309:             PORTDbits.RD5 = 0;
  1477     0419  1283               	bcf	3,5	;RP0=0, select bank0
  1478     041A  1303               	bcf	3,6	;RP1=0, select bank0
  1479     041B  1288               	bcf	8,5	;volatile
  1480                           
  1481                           ;main.c: 310:             PORTDbits.RD6 = 0;
  1482     041C  1308               	bcf	8,6	;volatile
  1483                           
  1484                           ;main.c: 311:             PORTDbits.RD7 = 1;
  1485     041D  1788               	bsf	8,7	;volatile
  1486     041E                     l2371:
  1487                           
  1488                           ;main.c: 307:             while (loop == 1){
  1489     041E  0358               	decf	_loop,w
  1490     041F  0459               	iorwf	_loop+1,w
  1491     0420  1903               	btfsc	3,2
  1492     0421  2C23               	goto	u1721
  1493     0422  2C24               	goto	u1720
  1494     0423                     u1721:
  1495     0423  2C16               	goto	l202
  1496     0424                     u1720:
  1497     0424  2A56               	goto	l2213
  1498     0425  120A  118A  2810   	ljmp	start
  1499     0428                     __end_of_main:
  1500                           
  1501                           	psect	text1
  1502     0584                     __ptext1:	
  1503 ;; *************** function _writeEEPROM *****************
  1504 ;; Defined at:
  1505 ;;		line 446 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  data            1    wreg     unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  data            1    0[BANK1 ] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0       0       0       0
  1520 ;;      Locals:         0       0       1       0       0
  1521 ;;      Temps:          0       0       0       0       0
  1522 ;;      Totals:         0       0       1       0       0
  1523 ;;Total ram usage:        1 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 4
  1526 ;; This function calls:
  1527 ;;		_interrup
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533     0584                     _writeEEPROM:	
  1534                           ;psect for function _writeEEPROM
  1535                           
  1536                           
  1537                           ;incstack = 0
  1538                           ; Regs used in _writeEEPROM: [wreg+status,2+status,0+pclath+cstack]
  1539                           ;writeEEPROM@data stored from wreg
  1540     0584  1683               	bsf	3,5	;RP0=1, select bank1
  1541     0585  1303               	bcf	3,6	;RP1=0, select bank1
  1542     0586  00A0               	movwf	writeEEPROM@data^(0+128)
  1543     0587                     l2181:
  1544                           
  1545                           ;main.c: 447:     EEDATA = data;
  1546     0587  0820               	movf	writeEEPROM@data^(0+128),w
  1547     0588  1283               	bcf	3,5	;RP0=0, select bank2
  1548     0589  1703               	bsf	3,6	;RP1=1, select bank2
  1549     058A  008C               	movwf	12	;volatile
  1550     058B                     l2183:
  1551                           
  1552                           ;main.c: 448:     EECON1bits.EEPGD = 0;
  1553     058B  1683               	bsf	3,5	;RP0=1, select bank3
  1554     058C  1703               	bsf	3,6	;RP1=1, select bank3
  1555     058D  138C               	bcf	12,7	;volsfr
  1556     058E                     l2185:
  1557                           
  1558                           ;main.c: 449:     EECON1bits.WREN = 1;
  1559     058E  150C               	bsf	12,2	;volsfr
  1560     058F                     l2187:
  1561                           
  1562                           ;main.c: 451:     INTCONbits.GIE = 0;
  1563     058F  138B               	bcf	11,7	;volatile
  1564     0590                     l227:	
  1565                           ;main.c: 452:     while (INTCONbits.GIE == 1);
  1566                           
  1567     0590  1B8B               	btfsc	11,7	;volatile
  1568     0591  2D93               	goto	u1521
  1569     0592  2D94               	goto	u1520
  1570     0593                     u1521:
  1571     0593  2D90               	goto	l227
  1572     0594                     u1520:
  1573     0594                     l229:
  1574                           
  1575                           ;main.c: 453:     _delay((unsigned long)((50)*(500000/4000000.0)));
  1576     0594  2D95               	nop2	;2 cycle nop
  1577     0595  2D96               	nop2	;2 cycle nop
  1578     0596  2D97               	nop2	;2 cycle nop
  1579     0597                     l2189:
  1580                           
  1581                           ;main.c: 454:     EECON2 = 0x55;
  1582     0597  3055               	movlw	85
  1583     0598  1683               	bsf	3,5	;RP0=1, select bank3
  1584     0599  1703               	bsf	3,6	;RP1=1, select bank3
  1585     059A  008D               	movwf	13	;volsfr
  1586                           
  1587                           ;main.c: 455:     EECON2 = 0xAA;
  1588     059B  30AA               	movlw	170
  1589     059C  008D               	movwf	13	;volsfr
  1590     059D                     l2191:
  1591                           
  1592                           ;main.c: 456:     EECON1bits.WR = 1;
  1593     059D  148C               	bsf	12,1	;volsfr
  1594     059E                     l2193:
  1595                           
  1596                           ;main.c: 457:     interrup();
  1597     059E  120A  118A  2694  120A  118A  	fcall	_interrup
  1598     05A3                     l2195:
  1599                           
  1600                           ;main.c: 458:     _delay((unsigned long)((50)*(500000/4000000.0)));
  1601     05A3  2DA4               	nop2	;2 cycle nop
  1602     05A4  2DA5               	nop2	;2 cycle nop
  1603     05A5  2DA6               	nop2	;2 cycle nop
  1604     05A6                     l230:	
  1605                           ;main.c: 460:     while (EECON1bits.WR == 1);
  1606                           
  1607     05A6  1683               	bsf	3,5	;RP0=1, select bank3
  1608     05A7  1703               	bsf	3,6	;RP1=1, select bank3
  1609     05A8  188C               	btfsc	12,1	;volsfr
  1610     05A9  2DAB               	goto	u1531
  1611     05AA  2DAC               	goto	u1530
  1612     05AB                     u1531:
  1613     05AB  2DA6               	goto	l230
  1614     05AC                     u1530:
  1615     05AC                     l232:
  1616                           
  1617                           ;main.c: 461:     EECON1bits.WREN = 0;
  1618     05AC  110C               	bcf	12,2	;volsfr
  1619     05AD                     l233:
  1620     05AD  0008               	return
  1621     05AE                     __end_of_writeEEPROM:
  1622                           
  1623                           	psect	text2
  1624     0694                     __ptext2:	
  1625 ;; *************** function _interrup *****************
  1626 ;; Defined at:
  1627 ;;		line 464 in file "main.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		None
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 3
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;;		_writeEEPROM
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656     0694                     _interrup:	
  1657                           ;psect for function _interrup
  1658                           
  1659     0694                     l2043:	
  1660                           ;incstack = 0
  1661                           ; Regs used in _interrup: []
  1662                           
  1663                           
  1664                           ;main.c: 465:     INTCONbits.GIE = 1;
  1665     0694  178B               	bsf	11,7	;volatile
  1666                           
  1667                           ;main.c: 466:     INTCONbits.PEIE = 1;
  1668     0695  170B               	bsf	11,6	;volatile
  1669                           
  1670                           ;main.c: 467:     INTCONbits.RBIE = 1;
  1671     0696  158B               	bsf	11,3	;volatile
  1672                           
  1673                           ;main.c: 468:     INTCONbits.RBIF = 0;
  1674     0697  100B               	bcf	11,0	;volatile
  1675                           
  1676                           ;main.c: 469:     INTCONbits.T0IE = 1;
  1677     0698  168B               	bsf	11,5	;volatile
  1678                           
  1679                           ;main.c: 470:     INTCONbits.T0IF = 0;
  1680     0699  110B               	bcf	11,2	;volatile
  1681                           
  1682                           ;main.c: 471:     PIE1bits.ADIE = 1;
  1683     069A  1683               	bsf	3,5	;RP0=1, select bank1
  1684     069B  1303               	bcf	3,6	;RP1=0, select bank1
  1685     069C  170C               	bsf	12,6	;volatile
  1686                           
  1687                           ;main.c: 472:     PIR1bits.ADIF = 0;
  1688     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1689     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1690     069F  130C               	bcf	12,6	;volatile
  1691     06A0                     l236:
  1692     06A0  0008               	return
  1693     06A1                     __end_of_interrup:
  1694                           
  1695                           	psect	text3
  1696     065B                     __ptext3:	
  1697 ;; *************** function _setupUART *****************
  1698 ;; Defined at:
  1699 ;;		line 418 in file "main.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 3
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727     065B                     _setupUART:	
  1728                           ;psect for function _setupUART
  1729                           
  1730     065B                     l2157:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _setupUART: [wreg+status,2]
  1733                           
  1734                           
  1735                           ;main.c: 420:     BAUDCTLbits.BRG16 = 1;
  1736     065B  1683               	bsf	3,5	;RP0=1, select bank3
  1737     065C  1703               	bsf	3,6	;RP1=1, select bank3
  1738     065D  1587               	bsf	7,3	;volatile
  1739                           
  1740                           ;main.c: 421:     TXSTAbits.BRGH = 1;
  1741     065E  1683               	bsf	3,5	;RP0=1, select bank1
  1742     065F  1303               	bcf	3,6	;RP1=0, select bank1
  1743     0660  1518               	bsf	24,2	;volatile
  1744     0661                     l2159:
  1745                           
  1746                           ;main.c: 422:     SPBRGH = 0;
  1747     0661  019A               	clrf	26	;volatile
  1748     0662                     l2161:
  1749                           
  1750                           ;main.c: 423:     SPBRG = 12;
  1751     0662  300C               	movlw	12
  1752     0663  0099               	movwf	25	;volatile
  1753     0664                     l2163:
  1754                           
  1755                           ;main.c: 427:     TXSTAbits.SYNC = 0;
  1756     0664  1218               	bcf	24,4	;volatile
  1757     0665                     l2165:
  1758                           
  1759                           ;main.c: 428:     RCSTAbits.SPEN = 1;
  1760     0665  1283               	bcf	3,5	;RP0=0, select bank0
  1761     0666  1303               	bcf	3,6	;RP1=0, select bank0
  1762     0667  1798               	bsf	24,7	;volatile
  1763     0668                     l2167:
  1764                           
  1765                           ;main.c: 434:     TXSTAbits.TXEN = 1;
  1766     0668  1683               	bsf	3,5	;RP0=1, select bank1
  1767     0669  1303               	bcf	3,6	;RP1=0, select bank1
  1768     066A  1698               	bsf	24,5	;volatile
  1769     066B                     l2169:
  1770                           
  1771                           ;main.c: 435:     PIR1bits.TXIF = 0;
  1772     066B  1283               	bcf	3,5	;RP0=0, select bank0
  1773     066C  1303               	bcf	3,6	;RP1=0, select bank0
  1774     066D  120C               	bcf	12,4	;volatile
  1775     066E                     l2171:
  1776                           
  1777                           ;main.c: 436:     RCSTAbits.CREN = 1;
  1778     066E  1618               	bsf	24,4	;volatile
  1779     066F                     l221:
  1780     066F  0008               	return
  1781     0670                     __end_of_setupUART:
  1782                           
  1783                           	psect	text4
  1784     05D6                     __ptext4:	
  1785 ;; *************** function _setupPWM *****************
  1786 ;; Defined at:
  1787 ;;		line 393 in file "main.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 3
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815     05D6                     _setupPWM:	
  1816                           ;psect for function _setupPWM
  1817                           
  1818     05D6                     l2131:	
  1819                           ;incstack = 0
  1820                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
  1821                           
  1822                           
  1823                           ;main.c: 395:     TRISCbits.TRISC2 = 1;
  1824     05D6  1683               	bsf	3,5	;RP0=1, select bank1
  1825     05D7  1303               	bcf	3,6	;RP1=0, select bank1
  1826     05D8  1507               	bsf	7,2	;volatile
  1827     05D9                     l2133:
  1828                           
  1829                           ;main.c: 396:     PR2 = 155;
  1830     05D9  309B               	movlw	155
  1831     05DA  0092               	movwf	18	;volatile
  1832                           
  1833                           ;main.c: 397:     CCP1CON = 0b00001100;
  1834     05DB  300C               	movlw	12
  1835     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1836     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1837     05DE  0097               	movwf	23	;volatile
  1838     05DF                     l2135:
  1839                           
  1840                           ;main.c: 398:     CCP1CONbits.DC1B = 0b11;
  1841     05DF  3030               	movlw	48
  1842     05E0  0497               	iorwf	23,f	;volatile
  1843     05E1                     l2137:
  1844                           
  1845                           ;main.c: 399:     CCPR1L = 11;
  1846     05E1  300B               	movlw	11
  1847     05E2  0095               	movwf	21	;volatile
  1848     05E3                     l2139:
  1849                           
  1850                           ;main.c: 400:     PIR1bits.TMR2IF = 0;
  1851     05E3  108C               	bcf	12,1	;volatile
  1852     05E4                     l2141:
  1853                           
  1854                           ;main.c: 401:     T2CONbits.T2CKPS1 = 1;
  1855     05E4  1492               	bsf	18,1	;volatile
  1856     05E5                     l2143:
  1857                           
  1858                           ;main.c: 402:     T2CONbits.T2CKPS0 = 1;
  1859     05E5  1412               	bsf	18,0	;volatile
  1860     05E6                     l2145:
  1861                           
  1862                           ;main.c: 403:     T2CONbits.TMR2ON = 1;
  1863     05E6  1512               	bsf	18,2	;volatile
  1864     05E7                     l2147:
  1865                           
  1866                           ;main.c: 406:    TRISCbits.TRISC1 = 1;
  1867     05E7  1683               	bsf	3,5	;RP0=1, select bank1
  1868     05E8  1303               	bcf	3,6	;RP1=0, select bank1
  1869     05E9  1487               	bsf	7,1	;volatile
  1870     05EA                     l2149:
  1871                           
  1872                           ;main.c: 407:    CCP2CON = 0b00001100;
  1873     05EA  300C               	movlw	12
  1874     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1875     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1876     05ED  009D               	movwf	29	;volatile
  1877     05EE                     l2151:
  1878                           
  1879                           ;main.c: 408:    CCP2CONbits.DC2B0 = 1;
  1880     05EE  161D               	bsf	29,4	;volatile
  1881     05EF                     l2153:
  1882                           
  1883                           ;main.c: 409:    CCP2CONbits.DC2B1 = 1;
  1884     05EF  169D               	bsf	29,5	;volatile
  1885     05F0                     l2155:
  1886                           
  1887                           ;main.c: 410:    CCPR2L = 11;
  1888     05F0  300B               	movlw	11
  1889     05F1  009B               	movwf	27	;volatile
  1890     05F2                     l215:	
  1891                           ;main.c: 412:    while (PIR1bits.TMR2IF == 0);
  1892                           
  1893     05F2  1C8C               	btfss	12,1	;volatile
  1894     05F3  2DF5               	goto	u1491
  1895     05F4  2DF6               	goto	u1490
  1896     05F5                     u1491:
  1897     05F5  2DF2               	goto	l215
  1898     05F6                     u1490:
  1899     05F6                     l217:
  1900                           
  1901                           ;main.c: 413:     PIR1bits.TMR2IF = 0;
  1902     05F6  108C               	bcf	12,1	;volatile
  1903                           
  1904                           ;main.c: 414:     TRISCbits.TRISC2 = 0;
  1905     05F7  1683               	bsf	3,5	;RP0=1, select bank1
  1906     05F8  1303               	bcf	3,6	;RP1=0, select bank1
  1907     05F9  1107               	bcf	7,2	;volatile
  1908                           
  1909                           ;main.c: 415:     TRISCbits.TRISC1 = 0;
  1910     05FA  1087               	bcf	7,1	;volatile
  1911     05FB                     l218:
  1912     05FB  0008               	return
  1913     05FC                     __end_of_setupPWM:
  1914                           
  1915                           	psect	text5
  1916     0644                     __ptext5:	
  1917 ;; *************** function _setupADC *****************
  1918 ;; Defined at:
  1919 ;;		line 374 in file "main.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0
  1935 ;;      Temps:          0       0       1       0       0
  1936 ;;      Totals:         0       0       1       0       0
  1937 ;;Total ram usage:        1 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 3
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947     0644                     _setupADC:	
  1948                           ;psect for function _setupADC
  1949                           
  1950     0644                     l2127:	
  1951                           ;incstack = 0
  1952                           ; Regs used in _setupADC: [wreg]
  1953                           
  1954                           
  1955                           ;main.c: 375:     ADCON0bits.ADCS1 = 0;
  1956     0644  1283               	bcf	3,5	;RP0=0, select bank0
  1957     0645  1303               	bcf	3,6	;RP1=0, select bank0
  1958     0646  139F               	bcf	31,7	;volatile
  1959                           
  1960                           ;main.c: 376:     ADCON0bits.ADCS0 = 0;
  1961     0647  131F               	bcf	31,6	;volatile
  1962                           
  1963                           ;main.c: 378:     ADCON1bits.VCFG1 = 0;
  1964     0648  1683               	bsf	3,5	;RP0=1, select bank1
  1965     0649  1303               	bcf	3,6	;RP1=0, select bank1
  1966     064A  129F               	bcf	31,5	;volatile
  1967                           
  1968                           ;main.c: 379:     ADCON1bits.VCFG0 = 0;
  1969     064B  121F               	bcf	31,4	;volatile
  1970                           
  1971                           ;main.c: 381:     ADCON1bits.ADFM = 0;
  1972     064C  139F               	bcf	31,7	;volatile
  1973                           
  1974                           ;main.c: 383:     ADCON0bits.CHS3 = 0;
  1975     064D  1283               	bcf	3,5	;RP0=0, select bank0
  1976     064E  1303               	bcf	3,6	;RP1=0, select bank0
  1977     064F  129F               	bcf	31,5	;volatile
  1978                           
  1979                           ;main.c: 384:     ADCON0bits.CHS2 = 0;
  1980     0650  121F               	bcf	31,4	;volatile
  1981                           
  1982                           ;main.c: 385:     ADCON0bits.CHS1 = 0;
  1983     0651  119F               	bcf	31,3	;volatile
  1984                           
  1985                           ;main.c: 386:     ADCON0bits.CHS0 = 0;
  1986     0652  111F               	bcf	31,2	;volatile
  1987                           
  1988                           ;main.c: 388:     ADCON0bits.ADON = 1;
  1989     0653  141F               	bsf	31,0	;volatile
  1990     0654                     l2129:
  1991                           
  1992                           ;main.c: 389:     _delay((unsigned long)((100)*(500000/4000000.0)));
  1993     0654  3003               	movlw	3
  1994     0655  1683               	bsf	3,5	;RP0=1, select bank1
  1995     0656  1303               	bcf	3,6	;RP1=0, select bank1
  1996     0657  00A0               	movwf	??_setupADC^(0+128)
  1997     0658                     u1737:
  1998     0658  0BA0               	decfsz	??_setupADC^(0+128),f
  1999     0659  2E58               	goto	u1737
  2000     065A                     l212:
  2001     065A  0008               	return
  2002     065B                     __end_of_setupADC:
  2003                           
  2004                           	psect	text6
  2005     0510                     __ptext6:	
  2006 ;; *************** function _setup *****************
  2007 ;; Defined at:
  2008 ;;		line 316 in file "main.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		status,2
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 3
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036     0510                     _setup:	
  2037                           ;psect for function _setup
  2038                           
  2039     0510                     l2045:	
  2040                           ;incstack = 0
  2041                           ; Regs used in _setup: [status,2]
  2042                           
  2043                           
  2044                           ;main.c: 317:     ANSELH = 0;
  2045     0510  1683               	bsf	3,5	;RP0=1, select bank3
  2046     0511  1703               	bsf	3,6	;RP1=1, select bank3
  2047     0512  0189               	clrf	9	;volatile
  2048     0513                     l2047:
  2049                           
  2050                           ;main.c: 318:     ANSELbits.ANS0 = 1;
  2051     0513  1408               	bsf	8,0	;volatile
  2052     0514                     l2049:
  2053                           
  2054                           ;main.c: 319:     ANSELbits.ANS1 = 1;
  2055     0514  1488               	bsf	8,1	;volatile
  2056     0515                     l2051:
  2057                           
  2058                           ;main.c: 320:     ANSELbits.ANS2 = 1;
  2059     0515  1508               	bsf	8,2	;volatile
  2060     0516                     l2053:
  2061                           
  2062                           ;main.c: 321:     ANSELbits.ANS3 = 1;
  2063     0516  1588               	bsf	8,3	;volatile
  2064     0517                     l2055:
  2065                           
  2066                           ;main.c: 322:     TRISBbits.TRISB7 = 1;
  2067     0517  1683               	bsf	3,5	;RP0=1, select bank1
  2068     0518  1303               	bcf	3,6	;RP1=0, select bank1
  2069     0519  1786               	bsf	6,7	;volatile
  2070     051A                     l2057:
  2071                           
  2072                           ;main.c: 323:     TRISBbits.TRISB6 = 1;
  2073     051A  1706               	bsf	6,6	;volatile
  2074     051B                     l2059:
  2075                           
  2076                           ;main.c: 324:     TRISBbits.TRISB5 = 1;
  2077     051B  1686               	bsf	6,5	;volatile
  2078     051C                     l2061:
  2079                           
  2080                           ;main.c: 325:     TRISBbits.TRISB4 = 1;
  2081     051C  1606               	bsf	6,4	;volatile
  2082     051D                     l2063:
  2083                           
  2084                           ;main.c: 326:     TRISBbits.TRISB3 = 1;
  2085     051D  1586               	bsf	6,3	;volatile
  2086     051E                     l2065:
  2087                           
  2088                           ;main.c: 327:     TRISCbits.TRISC0 = 0;
  2089     051E  1007               	bcf	7,0	;volatile
  2090     051F                     l2067:
  2091                           
  2092                           ;main.c: 328:     TRISCbits.TRISC3 = 0;
  2093     051F  1187               	bcf	7,3	;volatile
  2094                           
  2095                           ;main.c: 329:     TRISE = 0;
  2096     0520  0189               	clrf	9	;volatile
  2097                           
  2098                           ;main.c: 330:     TRISD = 0;
  2099     0521  0188               	clrf	8	;volatile
  2100                           
  2101                           ;main.c: 331:     PORTA = 0;
  2102     0522  1283               	bcf	3,5	;RP0=0, select bank0
  2103     0523  1303               	bcf	3,6	;RP1=0, select bank0
  2104     0524  0185               	clrf	5	;volatile
  2105                           
  2106                           ;main.c: 332:     PORTB = 0;
  2107     0525  0186               	clrf	6	;volatile
  2108                           
  2109                           ;main.c: 333:     PORTD = 0;
  2110     0526  0188               	clrf	8	;volatile
  2111                           
  2112                           ;main.c: 334:     PORTE = 0;
  2113     0527  0189               	clrf	9	;volatile
  2114     0528                     l2069:
  2115                           
  2116                           ;main.c: 336:     INTCONbits.GIE = 1;
  2117     0528  178B               	bsf	11,7	;volatile
  2118     0529                     l2071:
  2119                           
  2120                           ;main.c: 337:     INTCONbits.PEIE = 1;
  2121     0529  170B               	bsf	11,6	;volatile
  2122     052A                     l2073:
  2123                           
  2124                           ;main.c: 338:     INTCONbits.RBIE = 1;
  2125     052A  158B               	bsf	11,3	;volatile
  2126     052B                     l2075:
  2127                           
  2128                           ;main.c: 339:     INTCONbits.RBIF = 0;
  2129     052B  100B               	bcf	11,0	;volatile
  2130     052C                     l2077:
  2131                           
  2132                           ;main.c: 340:     INTCONbits.T0IE = 1;
  2133     052C  168B               	bsf	11,5	;volatile
  2134     052D                     l2079:
  2135                           
  2136                           ;main.c: 341:     INTCONbits.T0IF = 0;
  2137     052D  110B               	bcf	11,2	;volatile
  2138     052E                     l2081:
  2139                           
  2140                           ;main.c: 342:     PIE1bits.ADIE = 1;
  2141     052E  1683               	bsf	3,5	;RP0=1, select bank1
  2142     052F  1303               	bcf	3,6	;RP1=0, select bank1
  2143     0530  170C               	bsf	12,6	;volatile
  2144     0531                     l2083:
  2145                           
  2146                           ;main.c: 343:     PIR1bits.ADIF = 0;
  2147     0531  1283               	bcf	3,5	;RP0=0, select bank0
  2148     0532  1303               	bcf	3,6	;RP1=0, select bank0
  2149     0533  130C               	bcf	12,6	;volatile
  2150     0534                     l2085:
  2151                           
  2152                           ;main.c: 344:     PIE1bits.RCIE = 0;
  2153     0534  1683               	bsf	3,5	;RP0=1, select bank1
  2154     0535  1303               	bcf	3,6	;RP1=0, select bank1
  2155     0536  128C               	bcf	12,5	;volatile
  2156     0537                     l2087:
  2157                           
  2158                           ;main.c: 346:     OSCCONbits.IRCF2 = 0;
  2159     0537  130F               	bcf	15,6	;volatile
  2160     0538                     l2089:
  2161                           
  2162                           ;main.c: 347:     OSCCONbits.IRCF1 = 1;
  2163     0538  168F               	bsf	15,5	;volatile
  2164     0539                     l2091:
  2165                           
  2166                           ;main.c: 348:     OSCCONbits.IRCF0 = 1;
  2167     0539  160F               	bsf	15,4	;volatile
  2168     053A                     l2093:
  2169                           
  2170                           ;main.c: 349:     OSCCONbits.SCS = 1;
  2171     053A  140F               	bsf	15,0	;volatile
  2172     053B                     l2095:
  2173                           
  2174                           ;main.c: 351:     OPTION_REGbits.nRBPU = 0;
  2175     053B  1381               	bcf	1,7	;volatile
  2176     053C                     l2097:
  2177                           
  2178                           ;main.c: 352:     OPTION_REGbits.T0CS = 0;
  2179     053C  1281               	bcf	1,5	;volatile
  2180     053D                     l2099:
  2181                           
  2182                           ;main.c: 353:     OPTION_REGbits.PSA = 0;
  2183     053D  1181               	bcf	1,3	;volatile
  2184     053E                     l2101:
  2185                           
  2186                           ;main.c: 354:     OPTION_REGbits.PS2 = 1;
  2187     053E  1501               	bsf	1,2	;volatile
  2188     053F                     l2103:
  2189                           
  2190                           ;main.c: 355:     OPTION_REGbits.PS1 = 1;
  2191     053F  1481               	bsf	1,1	;volatile
  2192     0540                     l2105:
  2193                           
  2194                           ;main.c: 356:     OPTION_REGbits.PS0 = 1;
  2195     0540  1401               	bsf	1,0	;volatile
  2196     0541                     l2107:
  2197                           
  2198                           ;main.c: 358:     WPUBbits.WPUB7 = 1;
  2199     0541  1795               	bsf	21,7	;volatile
  2200     0542                     l2109:
  2201                           
  2202                           ;main.c: 359:     WPUBbits.WPUB6 = 1;
  2203     0542  1715               	bsf	21,6	;volatile
  2204     0543                     l2111:
  2205                           
  2206                           ;main.c: 360:     WPUBbits.WPUB5 = 1;
  2207     0543  1695               	bsf	21,5	;volatile
  2208     0544                     l2113:
  2209                           
  2210                           ;main.c: 361:     WPUBbits.WPUB4 = 1;
  2211     0544  1615               	bsf	21,4	;volatile
  2212     0545                     l2115:
  2213                           
  2214                           ;main.c: 362:     WPUBbits.WPUB3 = 1;
  2215     0545  1595               	bsf	21,3	;volatile
  2216     0546                     l2117:
  2217                           
  2218                           ;main.c: 364:     IOCBbits.IOCB7 = 1;
  2219     0546  1796               	bsf	22,7	;volatile
  2220     0547                     l2119:
  2221                           
  2222                           ;main.c: 365:     IOCBbits.IOCB6 = 0;
  2223     0547  1316               	bcf	22,6	;volatile
  2224     0548                     l2121:
  2225                           
  2226                           ;main.c: 366:     IOCBbits.IOCB5 = 0;
  2227     0548  1296               	bcf	22,5	;volatile
  2228     0549                     l2123:
  2229                           
  2230                           ;main.c: 367:     IOCBbits.IOCB4 = 0;
  2231     0549  1216               	bcf	22,4	;volatile
  2232     054A                     l2125:
  2233                           
  2234                           ;main.c: 368:     IOCBbits.IOCB3 = 0;
  2235     054A  1196               	bcf	22,3	;volatile
  2236                           
  2237                           ;main.c: 370:     EEADRH = 0;
  2238     054B  1283               	bcf	3,5	;RP0=0, select bank2
  2239     054C  1703               	bsf	3,6	;RP1=1, select bank2
  2240     054D  018F               	clrf	15	;volatile
  2241     054E                     l209:
  2242     054E  0008               	return
  2243     054F                     __end_of_setup:
  2244                           
  2245                           	psect	text7
  2246     06A1                     __ptext7:	
  2247 ;; *************** function _readEEPROM *****************
  2248 ;; Defined at:
  2249 ;;		line 439 in file "main.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      unsigned char 
  2256 ;; Registers used:
  2257 ;;		wreg
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0
  2266 ;;      Totals:         0       0       0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 3
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277     06A1                     _readEEPROM:	
  2278                           ;psect for function _readEEPROM
  2279                           
  2280     06A1                     l2197:	
  2281                           ;incstack = 0
  2282                           ; Regs used in _readEEPROM: [wreg]
  2283                           
  2284                           
  2285                           ;main.c: 440:     EECON1bits.EEPGD = 0;
  2286     06A1  1683               	bsf	3,5	;RP0=1, select bank3
  2287     06A2  1703               	bsf	3,6	;RP1=1, select bank3
  2288     06A3  138C               	bcf	12,7	;volsfr
  2289                           
  2290                           ;main.c: 441:     EECON1bits.RD = 1;
  2291     06A4  140C               	bsf	12,0	;volsfr
  2292     06A5                     l2199:
  2293                           
  2294                           ;main.c: 442:     dato = EEDATA;
  2295     06A5  1283               	bcf	3,5	;RP0=0, select bank2
  2296     06A6  1703               	bsf	3,6	;RP1=1, select bank2
  2297     06A7  080C               	movf	12,w	;volatile
  2298     06A8  00FD               	movwf	_dato
  2299     06A9                     l224:
  2300     06A9  0008               	return
  2301     06AA                     __end_of_readEEPROM:
  2302                           
  2303                           	psect	text8
  2304     05AE                     __ptext8:	
  2305 ;; *************** function _cadena *****************
  2306 ;; Defined at:
  2307 ;;		line 484 in file "main.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  cursor          1    wreg     PTR unsigned char 
  2310 ;;		 -> STR_1(121), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  cursor          1    1[BANK1 ] PTR unsigned char 
  2313 ;;		 -> STR_1(121), 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2323 ;;      Params:         0       0       0       0       0
  2324 ;;      Locals:         0       0       1       0       0
  2325 ;;      Temps:          0       0       1       0       0
  2326 ;;      Totals:         0       0       2       0       0
  2327 ;;Total ram usage:        2 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 3
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337     05AE                     _cadena:	
  2338                           ;psect for function _cadena
  2339                           
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+pclath]
  2343                           ;cadena@cursor stored from wreg
  2344     05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2345     05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2346     05B0  00A1               	movwf	cadena@cursor^(0+128)
  2347     05B1                     l2173:
  2348                           
  2349                           ;main.c: 485:     while (*cursor != '\0'){
  2350     05B1  2DC9               	goto	l2179
  2351     05B2                     l247:
  2352     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  2353     05B3  1E0C               	btfss	12,4	;volatile
  2354     05B4  2DB6               	goto	u1501
  2355     05B5  2DB7               	goto	u1500
  2356     05B6                     u1501:
  2357     05B6  2DB2               	goto	l247
  2358     05B7                     u1500:
  2359     05B7                     l2175:
  2360                           
  2361                           ;main.c: 487:             TXREG = *cursor;
  2362     05B7  1683               	bsf	3,5	;RP0=1, select bank1
  2363     05B8  1303               	bcf	3,6	;RP1=0, select bank1
  2364     05B9  0821               	movf	cadena@cursor^(0+128),w
  2365     05BA  0084               	movwf	4
  2366     05BB  120A  118A  2428  120A  118A  	fcall	stringdir
  2367     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2368     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2369     05C2  0099               	movwf	25	;volatile
  2370     05C3                     l2177:
  2371                           
  2372                           ;main.c: 488:             *cursor++;
  2373     05C3  3001               	movlw	1
  2374     05C4  1683               	bsf	3,5	;RP0=1, select bank1
  2375     05C5  1303               	bcf	3,6	;RP1=0, select bank1
  2376     05C6  00A0               	movwf	??_cadena^(0+128)
  2377     05C7  0820               	movf	??_cadena^(0+128),w
  2378     05C8  07A1               	addwf	cadena@cursor^(0+128),f
  2379     05C9                     l2179:
  2380                           
  2381                           ;main.c: 485:     while (*cursor != '\0'){
  2382     05C9  0821               	movf	cadena@cursor^(0+128),w
  2383     05CA  0084               	movwf	4
  2384     05CB  120A  118A  2428  120A  118A  	fcall	stringdir
  2385     05D0  3A00               	xorlw	0
  2386     05D1  1D03               	skipz
  2387     05D2  2DD4               	goto	u1511
  2388     05D3  2DD5               	goto	u1510
  2389     05D4                     u1511:
  2390     05D4  2DB2               	goto	l247
  2391     05D5                     u1510:
  2392     05D5                     l251:
  2393     05D5  0008               	return
  2394     05D6                     __end_of_cadena:
  2395                           
  2396                           	psect	text9
  2397     0034                     __ptext9:	
  2398 ;; *************** function _isr *****************
  2399 ;; Defined at:
  2400 ;;		line 56 in file "main.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0
  2416 ;;      Temps:          0       5       0       0       0
  2417 ;;      Totals:         0       5       0       0       0
  2418 ;;Total ram usage:        5 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 2
  2421 ;; This function calls:
  2422 ;;		_delay
  2423 ;;		_map
  2424 ;; This function is called by:
  2425 ;;		Interrupt level 1
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429     0034                     _isr:	
  2430                           ;psect for function _isr
  2431                           
  2432     0034                     i1l1671:
  2433                           
  2434                           ;main.c: 57:     if (INTCONbits.RBIF == 1){
  2435     0034  1C0B               	btfss	11,0	;volatile
  2436     0035  2837               	goto	u95_21
  2437     0036  2838               	goto	u95_20
  2438     0037                     u95_21:
  2439     0037  285E               	goto	i1l1691
  2440     0038                     u95_20:
  2441     0038                     i1l1673:
  2442                           
  2443                           ;main.c: 58:         INTCONbits.RBIF = 0;
  2444     0038  100B               	bcf	11,0	;volatile
  2445                           
  2446                           ;main.c: 59:         if (PORTBbits.RB7 == 0){
  2447     0039  1B86               	btfsc	6,7	;volatile
  2448     003A  283C               	goto	u96_21
  2449     003B  283D               	goto	u96_20
  2450     003C                     u96_21:
  2451     003C  2841               	goto	i1l1677
  2452     003D                     u96_20:
  2453     003D                     i1l1675:
  2454                           
  2455                           ;main.c: 60:             bandera = 1;}
  2456     003D  3001               	movlw	1
  2457     003E  00DA               	movwf	_bandera
  2458     003F  3000               	movlw	0
  2459     0040  00DB               	movwf	_bandera+1
  2460     0041                     i1l1677:
  2461                           
  2462                           ;main.c: 61:         if (PORTBbits.RB7 == 1 && bandera == 1){
  2463     0041  1F86               	btfss	6,7	;volatile
  2464     0042  2844               	goto	u97_21
  2465     0043  2845               	goto	u97_20
  2466     0044                     u97_21:
  2467     0044  285E               	goto	i1l1691
  2468     0045                     u97_20:
  2469     0045                     i1l1679:
  2470     0045  035A               	decf	_bandera,w
  2471     0046  045B               	iorwf	_bandera+1,w
  2472     0047  1D03               	btfss	3,2
  2473     0048  284A               	goto	u98_21
  2474     0049  284B               	goto	u98_20
  2475     004A                     u98_21:
  2476     004A  285E               	goto	i1l1691
  2477     004B                     u98_20:
  2478     004B                     i1l1681:
  2479                           
  2480                           ;main.c: 62:             selector++;
  2481     004B  3001               	movlw	1
  2482     004C  07DC               	addwf	_selector,f
  2483     004D  1803               	skipnc
  2484     004E  0ADD               	incf	_selector+1,f
  2485     004F  3000               	movlw	0
  2486     0050  07DD               	addwf	_selector+1,f
  2487     0051                     i1l1683:
  2488                           
  2489                           ;main.c: 63:             loop = 0;
  2490     0051  01D8               	clrf	_loop
  2491     0052  01D9               	clrf	_loop+1
  2492     0053                     i1l1685:
  2493                           
  2494                           ;main.c: 64:             bandera = 0;
  2495     0053  01DA               	clrf	_bandera
  2496     0054  01DB               	clrf	_bandera+1
  2497     0055                     i1l1687:
  2498                           
  2499                           ;main.c: 65:             if (selector == 3){
  2500     0055  3003               	movlw	3
  2501     0056  065C               	xorwf	_selector,w
  2502     0057  045D               	iorwf	_selector+1,w
  2503     0058  1D03               	btfss	3,2
  2504     0059  285B               	goto	u99_21
  2505     005A  285C               	goto	u99_20
  2506     005B                     u99_21:
  2507     005B  285E               	goto	i1l1691
  2508     005C                     u99_20:
  2509     005C                     i1l1689:
  2510                           
  2511                           ;main.c: 66:                 selector = 0;}
  2512     005C  01DC               	clrf	_selector
  2513     005D  01DD               	clrf	_selector+1
  2514     005E                     i1l1691:
  2515                           
  2516                           ;main.c: 70:     if (PIR1bits.ADIF == 1){
  2517     005E  1F0C               	btfss	12,6	;volatile
  2518     005F  2861               	goto	u100_21
  2519     0060  2862               	goto	u100_20
  2520     0061                     u100_21:
  2521     0061  2901               	goto	i1l1719
  2522     0062                     u100_20:
  2523     0062                     i1l1693:
  2524                           
  2525                           ;main.c: 71:         if (ADCON0bits.CHS == 0b0000){
  2526     0062  0C1F               	rrf	31,w	;volatile
  2527     0063  00CF               	movwf	??_isr
  2528     0064  0C4F               	rrf	??_isr,w
  2529     0065  390F               	andlw	15
  2530     0066  3A00               	xorlw	0
  2531     0067  1D03               	skipz
  2532     0068  286A               	goto	u101_21
  2533     0069  286B               	goto	u101_20
  2534     006A                     u101_21:
  2535     006A  2889               	goto	i1l1699
  2536     006B                     u101_20:
  2537     006B                     i1l1695:
  2538                           
  2539                           ;main.c: 72:             CCPR1L = map(ADRESH, 0, 255, 3, 20);
  2540     006B  3000               	movlw	0
  2541     006C  00C7               	movwf	map@inputmin
  2542     006D  00C8               	movwf	map@inputmin+1
  2543     006E  30FF               	movlw	255
  2544     006F  00C9               	movwf	map@inputmax
  2545     0070  3000               	movlw	0
  2546     0071  00CA               	movwf	map@inputmax+1
  2547     0072  3003               	movlw	3
  2548     0073  00CB               	movwf	map@outmin
  2549     0074  3000               	movlw	0
  2550     0075  00CC               	movwf	map@outmin+1
  2551     0076  3014               	movlw	20
  2552     0077  00CD               	movwf	map@outmax
  2553     0078  3000               	movlw	0
  2554     0079  00CE               	movwf	map@outmax+1
  2555     007A  081E               	movf	30,w	;volatile
  2556     007B  120A  118A  254F  120A  118A  	fcall	_map
  2557     0080  1283               	bcf	3,5	;RP0=0, select bank0
  2558     0081  1303               	bcf	3,6	;RP1=0, select bank0
  2559     0082  0847               	movf	?_map,w
  2560     0083  0095               	movwf	21	;volatile
  2561     0084                     i1l1697:
  2562                           
  2563                           ;main.c: 73:             ADCON0bits.CHS = 0b0001;}
  2564     0084  081F               	movf	31,w	;volatile
  2565     0085  39C3               	andlw	-61
  2566     0086  3804               	iorlw	4
  2567     0087  009F               	movwf	31	;volatile
  2568     0088  2900               	goto	i1l1717
  2569     0089                     i1l1699:
  2570     0089  0C1F               	rrf	31,w	;volatile
  2571     008A  00CF               	movwf	??_isr
  2572     008B  0C4F               	rrf	??_isr,w
  2573     008C  390F               	andlw	15
  2574     008D  3A01               	xorlw	1
  2575     008E  1D03               	skipz
  2576     008F  2891               	goto	u102_21
  2577     0090  2892               	goto	u102_20
  2578     0091                     u102_21:
  2579     0091  28B0               	goto	i1l1705
  2580     0092                     u102_20:
  2581     0092                     i1l1701:
  2582                           
  2583                           ;main.c: 76:             CCPR2L = map(ADRESH, 0, 255, 3, 20);
  2584     0092  3000               	movlw	0
  2585     0093  00C7               	movwf	map@inputmin
  2586     0094  00C8               	movwf	map@inputmin+1
  2587     0095  30FF               	movlw	255
  2588     0096  00C9               	movwf	map@inputmax
  2589     0097  3000               	movlw	0
  2590     0098  00CA               	movwf	map@inputmax+1
  2591     0099  3003               	movlw	3
  2592     009A  00CB               	movwf	map@outmin
  2593     009B  3000               	movlw	0
  2594     009C  00CC               	movwf	map@outmin+1
  2595     009D  3014               	movlw	20
  2596     009E  00CD               	movwf	map@outmax
  2597     009F  3000               	movlw	0
  2598     00A0  00CE               	movwf	map@outmax+1
  2599     00A1  081E               	movf	30,w	;volatile
  2600     00A2  120A  118A  254F  120A  118A  	fcall	_map
  2601     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  2602     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  2603     00A9  0847               	movf	?_map,w
  2604     00AA  009B               	movwf	27	;volatile
  2605     00AB                     i1l1703:
  2606                           
  2607                           ;main.c: 77:             ADCON0bits.CHS = 0b0010;}
  2608     00AB  081F               	movf	31,w	;volatile
  2609     00AC  39C3               	andlw	-61
  2610     00AD  3808               	iorlw	8
  2611     00AE  009F               	movwf	31	;volatile
  2612     00AF  2900               	goto	i1l1717
  2613     00B0                     i1l1705:
  2614     00B0  0C1F               	rrf	31,w	;volatile
  2615     00B1  00CF               	movwf	??_isr
  2616     00B2  0C4F               	rrf	??_isr,w
  2617     00B3  390F               	andlw	15
  2618     00B4  3A02               	xorlw	2
  2619     00B5  1D03               	skipz
  2620     00B6  28B8               	goto	u103_21
  2621     00B7  28B9               	goto	u103_20
  2622     00B8                     u103_21:
  2623     00B8  28D9               	goto	i1l1711
  2624     00B9                     u103_20:
  2625     00B9                     i1l1707:
  2626                           
  2627                           ;main.c: 80:             pot = map(ADRESH, 0, 255, 1, 17);
  2628     00B9  3000               	movlw	0
  2629     00BA  00C7               	movwf	map@inputmin
  2630     00BB  00C8               	movwf	map@inputmin+1
  2631     00BC  30FF               	movlw	255
  2632     00BD  00C9               	movwf	map@inputmax
  2633     00BE  3000               	movlw	0
  2634     00BF  00CA               	movwf	map@inputmax+1
  2635     00C0  3001               	movlw	1
  2636     00C1  00CB               	movwf	map@outmin
  2637     00C2  3000               	movlw	0
  2638     00C3  00CC               	movwf	map@outmin+1
  2639     00C4  3011               	movlw	17
  2640     00C5  00CD               	movwf	map@outmax
  2641     00C6  3000               	movlw	0
  2642     00C7  00CE               	movwf	map@outmax+1
  2643     00C8  081E               	movf	30,w	;volatile
  2644     00C9  120A  118A  254F  120A  118A  	fcall	_map
  2645     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2646     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2647     00D0  0848               	movf	?_map+1,w
  2648     00D1  00D7               	movwf	_pot+1
  2649     00D2  0847               	movf	?_map,w
  2650     00D3  00D6               	movwf	_pot
  2651     00D4                     i1l1709:
  2652                           
  2653                           ;main.c: 81:             ADCON0bits.CHS = 0b0011;}
  2654     00D4  081F               	movf	31,w	;volatile
  2655     00D5  39C3               	andlw	-61
  2656     00D6  380C               	iorlw	12
  2657     00D7  009F               	movwf	31	;volatile
  2658     00D8  2900               	goto	i1l1717
  2659     00D9                     i1l1711:
  2660     00D9  0C1F               	rrf	31,w	;volatile
  2661     00DA  00CF               	movwf	??_isr
  2662     00DB  0C4F               	rrf	??_isr,w
  2663     00DC  390F               	andlw	15
  2664     00DD  3A03               	xorlw	3
  2665     00DE  1D03               	skipz
  2666     00DF  28E1               	goto	u104_21
  2667     00E0  28E2               	goto	u104_20
  2668     00E1                     u104_21:
  2669     00E1  2900               	goto	i1l148
  2670     00E2                     u104_20:
  2671     00E2                     i1l1713:
  2672                           
  2673                           ;main.c: 84:             pot1 = map(ADRESH, 0, 255, 1, 17);
  2674     00E2  3000               	movlw	0
  2675     00E3  00C7               	movwf	map@inputmin
  2676     00E4  00C8               	movwf	map@inputmin+1
  2677     00E5  30FF               	movlw	255
  2678     00E6  00C9               	movwf	map@inputmax
  2679     00E7  3000               	movlw	0
  2680     00E8  00CA               	movwf	map@inputmax+1
  2681     00E9  3001               	movlw	1
  2682     00EA  00CB               	movwf	map@outmin
  2683     00EB  3000               	movlw	0
  2684     00EC  00CC               	movwf	map@outmin+1
  2685     00ED  3011               	movlw	17
  2686     00EE  00CD               	movwf	map@outmax
  2687     00EF  3000               	movlw	0
  2688     00F0  00CE               	movwf	map@outmax+1
  2689     00F1  081E               	movf	30,w	;volatile
  2690     00F2  120A  118A  254F  120A  118A  	fcall	_map
  2691     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2692     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2693     00F9  0848               	movf	?_map+1,w
  2694     00FA  00D5               	movwf	_pot1+1
  2695     00FB  0847               	movf	?_map,w
  2696     00FC  00D4               	movwf	_pot1
  2697     00FD                     i1l1715:
  2698                           
  2699                           ;main.c: 85:             ADCON0bits.CHS = 0b0000;}
  2700     00FD  30C3               	movlw	-61
  2701     00FE  059F               	andwf	31,f	;volatile
  2702     00FF  2900               	goto	i1l1717
  2703     0100                     i1l148:
  2704     0100                     i1l1717:
  2705                           
  2706                           ;main.c: 86:             PIR1bits.ADIF = 0;}
  2707     0100  130C               	bcf	12,6	;volatile
  2708     0101                     i1l1719:
  2709                           
  2710                           ;main.c: 88:     if (INTCONbits.T0IF == 1){
  2711     0101  1D0B               	btfss	11,2	;volatile
  2712     0102  2904               	goto	u105_21
  2713     0103  2905               	goto	u105_20
  2714     0104                     u105_21:
  2715     0104  2922               	goto	i1l1737
  2716     0105                     u105_20:
  2717     0105                     i1l1721:
  2718                           
  2719                           ;main.c: 89:         INTCONbits.T0IF = 0;
  2720     0105  110B               	bcf	11,2	;volatile
  2721     0106                     i1l1723:
  2722                           
  2723                           ;main.c: 90:         TMR0 = 246;
  2724     0106  30F6               	movlw	246
  2725     0107  0081               	movwf	1	;volatile
  2726     0108                     i1l1725:
  2727                           
  2728                           ;main.c: 91:         PORTCbits.RC0 = 1;
  2729     0108  1407               	bsf	7,0	;volatile
  2730     0109                     i1l1727:
  2731                           
  2732                           ;main.c: 92:         delay(pot);
  2733     0109  0857               	movf	_pot+1,w
  2734     010A  00F1               	movwf	delay@micro+1
  2735     010B  0856               	movf	_pot,w
  2736     010C  00F0               	movwf	delay@micro
  2737     010D  120A  118A  2683  120A  118A  	fcall	_delay
  2738     0112                     i1l1729:
  2739                           
  2740                           ;main.c: 93:         PORTCbits.RC0 = 0;
  2741     0112  1283               	bcf	3,5	;RP0=0, select bank0
  2742     0113  1303               	bcf	3,6	;RP1=0, select bank0
  2743     0114  1007               	bcf	7,0	;volatile
  2744     0115                     i1l1731:
  2745                           
  2746                           ;main.c: 94:         PORTCbits.RC3 = 1;
  2747     0115  1587               	bsf	7,3	;volatile
  2748     0116                     i1l1733:
  2749                           
  2750                           ;main.c: 95:         delay(pot1);
  2751     0116  0855               	movf	_pot1+1,w
  2752     0117  00F1               	movwf	delay@micro+1
  2753     0118  0854               	movf	_pot1,w
  2754     0119  00F0               	movwf	delay@micro
  2755     011A  120A  118A  2683  120A  118A  	fcall	_delay
  2756     011F                     i1l1735:
  2757                           
  2758                           ;main.c: 96:         PORTCbits.RC3 = 0;
  2759     011F  1283               	bcf	3,5	;RP0=0, select bank0
  2760     0120  1303               	bcf	3,6	;RP1=0, select bank0
  2761     0121  1187               	bcf	7,3	;volatile
  2762     0122                     i1l1737:
  2763                           
  2764                           ;main.c: 100:     if (PIR1bits.RCIF == 1){
  2765     0122  1E8C               	btfss	12,5	;volatile
  2766     0123  2925               	goto	u106_21
  2767     0124  2926               	goto	u106_20
  2768     0125                     u106_21:
  2769     0125  2A2F               	goto	i1l177
  2770     0126                     u106_20:
  2771     0126                     i1l1739:
  2772                           
  2773                           ;main.c: 101:         if (RCREG == '1'){
  2774     0126  3031               	movlw	49
  2775     0127  061A               	xorwf	26,w	;volatile
  2776     0128  1D03               	btfss	3,2
  2777     0129  292B               	goto	u107_21
  2778     012A  292C               	goto	u107_20
  2779     012B                     u107_21:
  2780     012B  2931               	goto	i1l1745
  2781     012C                     u107_20:
  2782     012C                     i1l1741:
  2783                           
  2784                           ;main.c: 102:             selector = 0;
  2785     012C  01DC               	clrf	_selector
  2786     012D  01DD               	clrf	_selector+1
  2787                           
  2788                           ;main.c: 103:             loop = 0;
  2789     012E  01D8               	clrf	_loop
  2790     012F  01D9               	clrf	_loop+1
  2791     0130                     i1l1743:
  2792                           
  2793                           ;main.c: 104:             PIR1bits.RCIF = 0;
  2794     0130  128C               	bcf	12,5	;volatile
  2795     0131                     i1l1745:
  2796                           
  2797                           ;main.c: 106:         if (RCREG == '2'){
  2798     0131  3032               	movlw	50
  2799     0132  061A               	xorwf	26,w	;volatile
  2800     0133  1D03               	btfss	3,2
  2801     0134  2936               	goto	u108_21
  2802     0135  2937               	goto	u108_20
  2803     0136                     u108_21:
  2804     0136  293E               	goto	i1l1753
  2805     0137                     u108_20:
  2806     0137                     i1l1747:
  2807                           
  2808                           ;main.c: 107:             selector = 1;
  2809     0137  3001               	movlw	1
  2810     0138  00DC               	movwf	_selector
  2811     0139  3000               	movlw	0
  2812     013A  00DD               	movwf	_selector+1
  2813     013B                     i1l1749:
  2814                           
  2815                           ;main.c: 108:             loop = 0;
  2816     013B  01D8               	clrf	_loop
  2817     013C  01D9               	clrf	_loop+1
  2818     013D                     i1l1751:
  2819                           
  2820                           ;main.c: 109:             PIR1bits.RCIF = 0;
  2821     013D  128C               	bcf	12,5	;volatile
  2822     013E                     i1l1753:
  2823                           
  2824                           ;main.c: 111:         if (RCREG == '3'){
  2825     013E  3033               	movlw	51
  2826     013F  061A               	xorwf	26,w	;volatile
  2827     0140  1D03               	btfss	3,2
  2828     0141  2943               	goto	u109_21
  2829     0142  2944               	goto	u109_20
  2830     0143                     u109_21:
  2831     0143  294B               	goto	i1l1761
  2832     0144                     u109_20:
  2833     0144                     i1l1755:
  2834                           
  2835                           ;main.c: 112:             selector = 2;
  2836     0144  3002               	movlw	2
  2837     0145  00DC               	movwf	_selector
  2838     0146  3000               	movlw	0
  2839     0147  00DD               	movwf	_selector+1
  2840     0148                     i1l1757:
  2841                           
  2842                           ;main.c: 113:             loop = 0;
  2843     0148  01D8               	clrf	_loop
  2844     0149  01D9               	clrf	_loop+1
  2845     014A                     i1l1759:
  2846                           
  2847                           ;main.c: 114:             PIR1bits.RCIF = 0;
  2848     014A  128C               	bcf	12,5	;volatile
  2849     014B                     i1l1761:
  2850                           
  2851                           ;main.c: 116:         if (RCREG == 'd'){
  2852     014B  3064               	movlw	100
  2853     014C  061A               	xorwf	26,w	;volatile
  2854     014D  1D03               	btfss	3,2
  2855     014E  2950               	goto	u110_21
  2856     014F  2951               	goto	u110_20
  2857     0150                     u110_21:
  2858     0150  296A               	goto	i1l1777
  2859     0151                     u110_20:
  2860     0151                     i1l1763:
  2861                           
  2862                           ;main.c: 117:             if (x == 255){
  2863     0151  0A61               	incf	_x,w
  2864     0152  1D03               	btfss	3,2
  2865     0153  2955               	goto	u111_21
  2866     0154  2956               	goto	u111_20
  2867     0155                     u111_21:
  2868     0155  2957               	goto	i1l1767
  2869     0156                     u111_20:
  2870     0156                     i1l1765:
  2871                           
  2872                           ;main.c: 118:                 x = 0;}
  2873     0156  01E1               	clrf	_x
  2874     0157                     i1l1767:
  2875                           
  2876                           ;main.c: 119:             if (x == 17){
  2877     0157  3011               	movlw	17
  2878     0158  0661               	xorwf	_x,w
  2879     0159  1D03               	btfss	3,2
  2880     015A  295C               	goto	u112_21
  2881     015B  295D               	goto	u112_20
  2882     015C                     u112_21:
  2883     015C  295F               	goto	i1l1771
  2884     015D                     u112_20:
  2885     015D                     i1l1769:
  2886                           
  2887                           ;main.c: 120:                 x = 16;}
  2888     015D  3010               	movlw	16
  2889     015E  00E1               	movwf	_x
  2890     015F                     i1l1771:
  2891                           
  2892                           ;main.c: 121:             CCPR1L = servo[x];
  2893     015F  0861               	movf	_x,w
  2894     0160  3E20               	addlw	(low (_servo| 0))& (0+255)
  2895     0161  0084               	movwf	4
  2896     0162  1383               	bcf	3,7	;select IRP bank0
  2897     0163  0800               	movf	0,w
  2898     0164  0095               	movwf	21	;volatile
  2899     0165                     i1l1773:
  2900                           
  2901                           ;main.c: 122:             x++;
  2902     0165  3001               	movlw	1
  2903     0166  00CF               	movwf	??_isr
  2904     0167  084F               	movf	??_isr,w
  2905     0168  07E1               	addwf	_x,f
  2906     0169                     i1l1775:
  2907                           
  2908                           ;main.c: 123:             PIR1bits.RCIF = 0;
  2909     0169  128C               	bcf	12,5	;volatile
  2910     016A                     i1l1777:
  2911                           
  2912                           ;main.c: 125:         if (RCREG == 'a'){
  2913     016A  3061               	movlw	97
  2914     016B  061A               	xorwf	26,w	;volatile
  2915     016C  1D03               	btfss	3,2
  2916     016D  296F               	goto	u113_21
  2917     016E  2970               	goto	u113_20
  2918     016F                     u113_21:
  2919     016F  297F               	goto	i1l1789
  2920     0170                     u113_20:
  2921     0170                     i1l1779:
  2922                           
  2923                           ;main.c: 126:             if (x == 255){
  2924     0170  0A61               	incf	_x,w
  2925     0171  1D03               	btfss	3,2
  2926     0172  2974               	goto	u114_21
  2927     0173  2975               	goto	u114_20
  2928     0174                     u114_21:
  2929     0174  2976               	goto	i1l1783
  2930     0175                     u114_20:
  2931     0175                     i1l1781:
  2932                           
  2933                           ;main.c: 127:                 x = 0;}
  2934     0175  01E1               	clrf	_x
  2935     0176                     i1l1783:
  2936                           
  2937                           ;main.c: 128:             CCPR1L = servo[x];
  2938     0176  0861               	movf	_x,w
  2939     0177  3E20               	addlw	(low (_servo| 0))& (0+255)
  2940     0178  0084               	movwf	4
  2941     0179  1383               	bcf	3,7	;select IRP bank0
  2942     017A  0800               	movf	0,w
  2943     017B  0095               	movwf	21	;volatile
  2944     017C                     i1l1785:
  2945                           
  2946                           ;main.c: 129:             x--;
  2947     017C  3001               	movlw	1
  2948     017D  02E1               	subwf	_x,f
  2949     017E                     i1l1787:
  2950                           
  2951                           ;main.c: 130:             PIR1bits.RCIF = 0;
  2952     017E  128C               	bcf	12,5	;volatile
  2953     017F                     i1l1789:
  2954                           
  2955                           ;main.c: 132:         if (RCREG == 'w'){
  2956     017F  3077               	movlw	119
  2957     0180  061A               	xorwf	26,w	;volatile
  2958     0181  1D03               	btfss	3,2
  2959     0182  2984               	goto	u115_21
  2960     0183  2985               	goto	u115_20
  2961     0184                     u115_21:
  2962     0184  299E               	goto	i1l1805
  2963     0185                     u115_20:
  2964     0185                     i1l1791:
  2965                           
  2966                           ;main.c: 133:             if (y == 255){
  2967     0185  0A60               	incf	_y,w
  2968     0186  1D03               	btfss	3,2
  2969     0187  2989               	goto	u116_21
  2970     0188  298A               	goto	u116_20
  2971     0189                     u116_21:
  2972     0189  298B               	goto	i1l1795
  2973     018A                     u116_20:
  2974     018A                     i1l1793:
  2975                           
  2976                           ;main.c: 134:                 y = 0;}
  2977     018A  01E0               	clrf	_y
  2978     018B                     i1l1795:
  2979                           
  2980                           ;main.c: 135:             if (y == 17){
  2981     018B  3011               	movlw	17
  2982     018C  0660               	xorwf	_y,w
  2983     018D  1D03               	btfss	3,2
  2984     018E  2990               	goto	u117_21
  2985     018F  2991               	goto	u117_20
  2986     0190                     u117_21:
  2987     0190  2993               	goto	i1l1799
  2988     0191                     u117_20:
  2989     0191                     i1l1797:
  2990                           
  2991                           ;main.c: 136:                 y = 16;}
  2992     0191  3010               	movlw	16
  2993     0192  00E0               	movwf	_y
  2994     0193                     i1l1799:
  2995                           
  2996                           ;main.c: 137:             CCPR2L = servo[y];
  2997     0193  0860               	movf	_y,w
  2998     0194  3E20               	addlw	(low (_servo| 0))& (0+255)
  2999     0195  0084               	movwf	4
  3000     0196  1383               	bcf	3,7	;select IRP bank0
  3001     0197  0800               	movf	0,w
  3002     0198  009B               	movwf	27	;volatile
  3003     0199                     i1l1801:
  3004                           
  3005                           ;main.c: 138:             y++;
  3006     0199  3001               	movlw	1
  3007     019A  00CF               	movwf	??_isr
  3008     019B  084F               	movf	??_isr,w
  3009     019C  07E0               	addwf	_y,f
  3010     019D                     i1l1803:
  3011                           
  3012                           ;main.c: 139:             PIR1bits.RCIF = 0;
  3013     019D  128C               	bcf	12,5	;volatile
  3014     019E                     i1l1805:
  3015                           
  3016                           ;main.c: 141:         if (RCREG == 's'){
  3017     019E  3073               	movlw	115
  3018     019F  061A               	xorwf	26,w	;volatile
  3019     01A0  1D03               	btfss	3,2
  3020     01A1  29A3               	goto	u118_21
  3021     01A2  29A4               	goto	u118_20
  3022     01A3                     u118_21:
  3023     01A3  29B3               	goto	i1l1817
  3024     01A4                     u118_20:
  3025     01A4                     i1l1807:
  3026                           
  3027                           ;main.c: 142:             if (y == 255){
  3028     01A4  0A60               	incf	_y,w
  3029     01A5  1D03               	btfss	3,2
  3030     01A6  29A8               	goto	u119_21
  3031     01A7  29A9               	goto	u119_20
  3032     01A8                     u119_21:
  3033     01A8  29AA               	goto	i1l1811
  3034     01A9                     u119_20:
  3035     01A9                     i1l1809:
  3036                           
  3037                           ;main.c: 143:                 y = 0;}
  3038     01A9  01E0               	clrf	_y
  3039     01AA                     i1l1811:
  3040                           
  3041                           ;main.c: 144:             CCPR2L = servo[y];
  3042     01AA  0860               	movf	_y,w
  3043     01AB  3E20               	addlw	(low (_servo| 0))& (0+255)
  3044     01AC  0084               	movwf	4
  3045     01AD  1383               	bcf	3,7	;select IRP bank0
  3046     01AE  0800               	movf	0,w
  3047     01AF  009B               	movwf	27	;volatile
  3048     01B0                     i1l1813:
  3049                           
  3050                           ;main.c: 145:             y--;
  3051     01B0  3001               	movlw	1
  3052     01B1  02E0               	subwf	_y,f
  3053     01B2                     i1l1815:
  3054                           
  3055                           ;main.c: 146:             PIR1bits.RCIF = 0;
  3056     01B2  128C               	bcf	12,5	;volatile
  3057     01B3                     i1l1817:
  3058                           
  3059                           ;main.c: 149:         if (RCREG == 'i'){
  3060     01B3  3069               	movlw	105
  3061     01B4  061A               	xorwf	26,w	;volatile
  3062     01B5  1D03               	btfss	3,2
  3063     01B6  29B8               	goto	u120_21
  3064     01B7  29B9               	goto	u120_20
  3065     01B8                     u120_21:
  3066     01B8  29D7               	goto	i1l1833
  3067     01B9                     u120_20:
  3068     01B9                     i1l1819:
  3069                           
  3070                           ;main.c: 150:             if (x1 == 255){
  3071     01B9  0A5F               	incf	_x1,w
  3072     01BA  1D03               	btfss	3,2
  3073     01BB  29BD               	goto	u121_21
  3074     01BC  29BE               	goto	u121_20
  3075     01BD                     u121_21:
  3076     01BD  29BF               	goto	i1l1823
  3077     01BE                     u121_20:
  3078     01BE                     i1l1821:
  3079                           
  3080                           ;main.c: 151:                 x1 = 0;}
  3081     01BE  01DF               	clrf	_x1
  3082     01BF                     i1l1823:
  3083                           
  3084                           ;main.c: 152:             if (x1 == 16){
  3085     01BF  3010               	movlw	16
  3086     01C0  065F               	xorwf	_x1,w
  3087     01C1  1D03               	btfss	3,2
  3088     01C2  29C4               	goto	u122_21
  3089     01C3  29C5               	goto	u122_20
  3090     01C4                     u122_21:
  3091     01C4  29C7               	goto	i1l1827
  3092     01C5                     u122_20:
  3093     01C5                     i1l1825:
  3094                           
  3095                           ;main.c: 153:                 x1 = 15;}
  3096     01C5  300F               	movlw	15
  3097     01C6  00DF               	movwf	_x1
  3098     01C7                     i1l1827:
  3099                           
  3100                           ;main.c: 154:             pot = servo2[x1];
  3101     01C7  085F               	movf	_x1,w
  3102     01C8  3E32               	addlw	(low (_servo2| 0))& (0+255)
  3103     01C9  0084               	movwf	4
  3104     01CA  1383               	bcf	3,7	;select IRP bank0
  3105     01CB  0800               	movf	0,w
  3106     01CC  00CF               	movwf	??_isr
  3107     01CD  01D0               	clrf	??_isr+1
  3108     01CE  084F               	movf	??_isr,w
  3109     01CF  00D6               	movwf	_pot
  3110     01D0  0850               	movf	??_isr+1,w
  3111     01D1  00D7               	movwf	_pot+1
  3112     01D2                     i1l1829:
  3113                           
  3114                           ;main.c: 155:             x1++;
  3115     01D2  3001               	movlw	1
  3116     01D3  00CF               	movwf	??_isr
  3117     01D4  084F               	movf	??_isr,w
  3118     01D5  07DF               	addwf	_x1,f
  3119     01D6                     i1l1831:
  3120                           
  3121                           ;main.c: 156:             PIR1bits.RCIF = 0;
  3122     01D6  128C               	bcf	12,5	;volatile
  3123     01D7                     i1l1833:
  3124                           
  3125                           ;main.c: 158:         if (RCREG == 'k'){
  3126     01D7  306B               	movlw	107
  3127     01D8  061A               	xorwf	26,w	;volatile
  3128     01D9  1D03               	btfss	3,2
  3129     01DA  29DC               	goto	u123_21
  3130     01DB  29DD               	goto	u123_20
  3131     01DC                     u123_21:
  3132     01DC  29F1               	goto	i1l1845
  3133     01DD                     u123_20:
  3134     01DD                     i1l1835:
  3135                           
  3136                           ;main.c: 159:             if (x1 == 255){
  3137     01DD  0A5F               	incf	_x1,w
  3138     01DE  1D03               	btfss	3,2
  3139     01DF  29E1               	goto	u124_21
  3140     01E0  29E2               	goto	u124_20
  3141     01E1                     u124_21:
  3142     01E1  29E3               	goto	i1l1839
  3143     01E2                     u124_20:
  3144     01E2                     i1l1837:
  3145                           
  3146                           ;main.c: 160:                 x1 = 0;}
  3147     01E2  01DF               	clrf	_x1
  3148     01E3                     i1l1839:
  3149                           
  3150                           ;main.c: 161:             pot = servo2[x1];
  3151     01E3  085F               	movf	_x1,w
  3152     01E4  3E32               	addlw	(low (_servo2| 0))& (0+255)
  3153     01E5  0084               	movwf	4
  3154     01E6  1383               	bcf	3,7	;select IRP bank0
  3155     01E7  0800               	movf	0,w
  3156     01E8  00CF               	movwf	??_isr
  3157     01E9  01D0               	clrf	??_isr+1
  3158     01EA  084F               	movf	??_isr,w
  3159     01EB  00D6               	movwf	_pot
  3160     01EC  0850               	movf	??_isr+1,w
  3161     01ED  00D7               	movwf	_pot+1
  3162     01EE                     i1l1841:
  3163                           
  3164                           ;main.c: 162:             x1--;
  3165     01EE  3001               	movlw	1
  3166     01EF  02DF               	subwf	_x1,f
  3167     01F0                     i1l1843:
  3168                           
  3169                           ;main.c: 163:             PIR1bits.RCIF = 0;
  3170     01F0  128C               	bcf	12,5	;volatile
  3171     01F1                     i1l1845:
  3172                           
  3173                           ;main.c: 166:         if (RCREG == 'l'){
  3174     01F1  306C               	movlw	108
  3175     01F2  061A               	xorwf	26,w	;volatile
  3176     01F3  1D03               	btfss	3,2
  3177     01F4  29F6               	goto	u125_21
  3178     01F5  29F7               	goto	u125_20
  3179     01F6                     u125_21:
  3180     01F6  2A15               	goto	i1l1861
  3181     01F7                     u125_20:
  3182     01F7                     i1l1847:
  3183                           
  3184                           ;main.c: 167:             if (y1 == 255){
  3185     01F7  0A5E               	incf	_y1,w
  3186     01F8  1D03               	btfss	3,2
  3187     01F9  29FB               	goto	u126_21
  3188     01FA  29FC               	goto	u126_20
  3189     01FB                     u126_21:
  3190     01FB  29FD               	goto	i1l1851
  3191     01FC                     u126_20:
  3192     01FC                     i1l1849:
  3193                           
  3194                           ;main.c: 168:                 y1 = 0;}
  3195     01FC  01DE               	clrf	_y1
  3196     01FD                     i1l1851:
  3197                           
  3198                           ;main.c: 169:             if (y1 == 16){
  3199     01FD  3010               	movlw	16
  3200     01FE  065E               	xorwf	_y1,w
  3201     01FF  1D03               	btfss	3,2
  3202     0200  2A02               	goto	u127_21
  3203     0201  2A03               	goto	u127_20
  3204     0202                     u127_21:
  3205     0202  2A05               	goto	i1l1855
  3206     0203                     u127_20:
  3207     0203                     i1l1853:
  3208                           
  3209                           ;main.c: 170:                 y1 = 15;}
  3210     0203  300F               	movlw	15
  3211     0204  00DE               	movwf	_y1
  3212     0205                     i1l1855:
  3213                           
  3214                           ;main.c: 171:             pot1 = servo2[y1];
  3215     0205  085E               	movf	_y1,w
  3216     0206  3E32               	addlw	(low (_servo2| 0))& (0+255)
  3217     0207  0084               	movwf	4
  3218     0208  1383               	bcf	3,7	;select IRP bank0
  3219     0209  0800               	movf	0,w
  3220     020A  00CF               	movwf	??_isr
  3221     020B  01D0               	clrf	??_isr+1
  3222     020C  084F               	movf	??_isr,w
  3223     020D  00D4               	movwf	_pot1
  3224     020E  0850               	movf	??_isr+1,w
  3225     020F  00D5               	movwf	_pot1+1
  3226     0210                     i1l1857:
  3227                           
  3228                           ;main.c: 172:             y1++;
  3229     0210  3001               	movlw	1
  3230     0211  00CF               	movwf	??_isr
  3231     0212  084F               	movf	??_isr,w
  3232     0213  07DE               	addwf	_y1,f
  3233     0214                     i1l1859:
  3234                           
  3235                           ;main.c: 173:             PIR1bits.RCIF = 0;
  3236     0214  128C               	bcf	12,5	;volatile
  3237     0215                     i1l1861:
  3238                           
  3239                           ;main.c: 175:         if (RCREG == 'j'){
  3240     0215  306A               	movlw	106
  3241     0216  061A               	xorwf	26,w	;volatile
  3242     0217  1D03               	btfss	3,2
  3243     0218  2A1A               	goto	u128_21
  3244     0219  2A1B               	goto	u128_20
  3245     021A                     u128_21:
  3246     021A  2A2F               	goto	i1l177
  3247     021B                     u128_20:
  3248     021B                     i1l1863:
  3249                           
  3250                           ;main.c: 176:             if (y1 == 255){
  3251     021B  0A5E               	incf	_y1,w
  3252     021C  1D03               	btfss	3,2
  3253     021D  2A1F               	goto	u129_21
  3254     021E  2A20               	goto	u129_20
  3255     021F                     u129_21:
  3256     021F  2A21               	goto	i1l1867
  3257     0220                     u129_20:
  3258     0220                     i1l1865:
  3259                           
  3260                           ;main.c: 177:                 y1 = 0;}
  3261     0220  01DE               	clrf	_y1
  3262     0221                     i1l1867:
  3263                           
  3264                           ;main.c: 178:             pot1 = servo2[y1];
  3265     0221  085E               	movf	_y1,w
  3266     0222  3E32               	addlw	(low (_servo2| 0))& (0+255)
  3267     0223  0084               	movwf	4
  3268     0224  1383               	bcf	3,7	;select IRP bank0
  3269     0225  0800               	movf	0,w
  3270     0226  00CF               	movwf	??_isr
  3271     0227  01D0               	clrf	??_isr+1
  3272     0228  084F               	movf	??_isr,w
  3273     0229  00D4               	movwf	_pot1
  3274     022A  0850               	movf	??_isr+1,w
  3275     022B  00D5               	movwf	_pot1+1
  3276     022C                     i1l1869:
  3277                           
  3278                           ;main.c: 179:             y1--;
  3279     022C  3001               	movlw	1
  3280     022D  02DE               	subwf	_y1,f
  3281     022E                     i1l1871:
  3282                           
  3283                           ;main.c: 180:             PIR1bits.RCIF = 0;
  3284     022E  128C               	bcf	12,5	;volatile
  3285     022F                     i1l177:
  3286     022F  0853               	movf	??_isr+4,w
  3287     0230  008A               	movwf	10
  3288     0231  0852               	movf	??_isr+3,w
  3289     0232  0084               	movwf	4
  3290     0233  0E51               	swapf	??_isr+2,w
  3291     0234  0083               	movwf	3
  3292     0235  0EFE               	swapf	btemp,f
  3293     0236  0E7E               	swapf	btemp,w
  3294     0237  0009               	retfie
  3295     0238                     __end_of_isr:
  3296                           
  3297                           	psect	intentry
  3298     0004                     __pintentry:	
  3299                           ;incstack = 0
  3300                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3301                           
  3302     0004                     interrupt_function:
  3303     007E                     saved_w	set	btemp
  3304     0004  00FE               	movwf	btemp
  3305     0005  0E03               	swapf	3,w
  3306     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3307     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3308     0008  00D1               	movwf	??_isr+2
  3309     0009  0804               	movf	4,w
  3310     000A  00D2               	movwf	??_isr+3
  3311     000B  080A               	movf	10,w
  3312     000C  00D3               	movwf	??_isr+4
  3313     000D  120A  118A  2834   	ljmp	_isr
  3314                           
  3315                           	psect	text10
  3316     054F                     __ptext10:	
  3317 ;; *************** function _map *****************
  3318 ;; Defined at:
  3319 ;;		line 52 in file "main.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  value           1    wreg     unsigned char 
  3322 ;;  inputmin        2    4[BANK0 ] int 
  3323 ;;  inputmax        2    6[BANK0 ] int 
  3324 ;;  outmin          2    8[BANK0 ] int 
  3325 ;;  outmax          2   10[BANK0 ] int 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  value           1   12[COMMON] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2    4[BANK0 ] unsigned int 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       8       0       0       0
  3338 ;;      Locals:         1       0       0       0       0
  3339 ;;      Temps:          1       0       0       0       0
  3340 ;;      Totals:         2       8       0       0       0
  3341 ;;Total ram usage:       10 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; Hardware stack levels required when called: 1
  3344 ;; This function calls:
  3345 ;;		___awdiv
  3346 ;;		___wmul
  3347 ;; This function is called by:
  3348 ;;		_isr
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352     054F                     _map:	
  3353                           ;psect for function _map
  3354                           
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3358                           ;map@value stored from wreg
  3359     054F  00FC               	movwf	map@value
  3360     0550                     i1l1503:
  3361                           
  3362                           ;main.c: 53:     return ((value - inputmin)*(outmax-outmin)) / (inputmax-inputmin)+outmi
      +                          n;}
  3363     0550  1283               	bcf	3,5	;RP0=0, select bank0
  3364     0551  1303               	bcf	3,6	;RP1=0, select bank0
  3365     0552  0847               	movf	map@inputmin,w
  3366     0553  0249               	subwf	map@inputmax,w
  3367     0554  00F6               	movwf	___awdiv@divisor
  3368     0555  0848               	movf	map@inputmin+1,w
  3369     0556  1C03               	skipc
  3370     0557  0A48               	incf	map@inputmin+1,w
  3371     0558  024A               	subwf	map@inputmax+1,w
  3372     0559  00F7               	movwf	___awdiv@divisor+1
  3373     055A  087C               	movf	map@value,w
  3374     055B  00FB               	movwf	??_map
  3375     055C  0847               	movf	map@inputmin,w
  3376     055D  027B               	subwf	??_map,w
  3377     055E  00F0               	movwf	___wmul@multiplier
  3378     055F  0948               	comf	map@inputmin+1,w
  3379     0560  1803               	skipnc
  3380     0561  3E01               	addlw	1
  3381     0562  00F1               	movwf	___wmul@multiplier+1
  3382     0563  084B               	movf	map@outmin,w
  3383     0564  024D               	subwf	map@outmax,w
  3384     0565  00F2               	movwf	___wmul@multiplicand
  3385     0566  084C               	movf	map@outmin+1,w
  3386     0567  1C03               	skipc
  3387     0568  0A4C               	incf	map@outmin+1,w
  3388     0569  024E               	subwf	map@outmax+1,w
  3389     056A  00F3               	movwf	___wmul@multiplicand+1
  3390     056B  120A  118A  25FC  120A  118A  	fcall	___wmul
  3391     0570  0871               	movf	?___wmul+1,w
  3392     0571  00F9               	movwf	___awdiv@dividend+1
  3393     0572  0870               	movf	?___wmul,w
  3394     0573  00F8               	movwf	___awdiv@dividend
  3395     0574  120A  118A  24A7  120A  118A  	fcall	___awdiv
  3396     0579  1283               	bcf	3,5	;RP0=0, select bank0
  3397     057A  1303               	bcf	3,6	;RP1=0, select bank0
  3398     057B  084B               	movf	map@outmin,w
  3399     057C  0776               	addwf	?___awdiv,w
  3400     057D  00C7               	movwf	?_map
  3401     057E  084C               	movf	map@outmin+1,w
  3402     057F  1803               	skipnc
  3403     0580  0A4C               	incf	map@outmin+1,w
  3404     0581  0777               	addwf	?___awdiv+1,w
  3405     0582  00C8               	movwf	?_map+1
  3406     0583                     i1l135:
  3407     0583  0008               	return
  3408     0584                     __end_of_map:
  3409                           
  3410                           	psect	text11
  3411     05FC                     __ptext11:	
  3412 ;; *************** function ___wmul *****************
  3413 ;; Defined at:
  3414 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  multiplier      2    0[COMMON] unsigned int 
  3417 ;;  multiplicand    2    2[COMMON] unsigned int 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  product         2    4[COMMON] unsigned int 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2    0[COMMON] unsigned int 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3429 ;;      Params:         4       0       0       0       0
  3430 ;;      Locals:         2       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0
  3432 ;;      Totals:         6       0       0       0       0
  3433 ;;Total ram usage:        6 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_map
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442     05FC                     ___wmul:	
  3443                           ;psect for function ___wmul
  3444                           
  3445     05FC                     i1l1445:	
  3446                           ;incstack = 0
  3447                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3448                           
  3449     05FC  01F4               	clrf	___wmul@product
  3450     05FD  01F5               	clrf	___wmul@product+1
  3451     05FE                     i1l1447:
  3452     05FE  1C70               	btfss	___wmul@multiplier,0
  3453     05FF  2E01               	goto	u75_21
  3454     0600  2E02               	goto	u75_20
  3455     0601                     u75_21:
  3456     0601  2E08               	goto	i1l337
  3457     0602                     u75_20:
  3458     0602                     i1l1449:
  3459     0602  0872               	movf	___wmul@multiplicand,w
  3460     0603  07F4               	addwf	___wmul@product,f
  3461     0604  1803               	skipnc
  3462     0605  0AF5               	incf	___wmul@product+1,f
  3463     0606  0873               	movf	___wmul@multiplicand+1,w
  3464     0607  07F5               	addwf	___wmul@product+1,f
  3465     0608                     i1l337:
  3466     0608  3001               	movlw	1
  3467     0609                     u76_25:
  3468     0609  1003               	clrc
  3469     060A  0DF2               	rlf	___wmul@multiplicand,f
  3470     060B  0DF3               	rlf	___wmul@multiplicand+1,f
  3471     060C  3EFF               	addlw	-1
  3472     060D  1D03               	skipz
  3473     060E  2E09               	goto	u76_25
  3474     060F                     i1l1451:
  3475     060F  3001               	movlw	1
  3476     0610                     u77_25:
  3477     0610  1003               	clrc
  3478     0611  0CF1               	rrf	___wmul@multiplier+1,f
  3479     0612  0CF0               	rrf	___wmul@multiplier,f
  3480     0613  3EFF               	addlw	-1
  3481     0614  1D03               	skipz
  3482     0615  2E10               	goto	u77_25
  3483     0616                     i1l1453:
  3484     0616  0870               	movf	___wmul@multiplier,w
  3485     0617  0471               	iorwf	___wmul@multiplier+1,w
  3486     0618  1D03               	btfss	3,2
  3487     0619  2E1B               	goto	u78_21
  3488     061A  2E1C               	goto	u78_20
  3489     061B                     u78_21:
  3490     061B  2DFE               	goto	i1l1447
  3491     061C                     u78_20:
  3492     061C                     i1l1455:
  3493     061C  0875               	movf	___wmul@product+1,w
  3494     061D  00F1               	movwf	?___wmul+1
  3495     061E  0874               	movf	___wmul@product,w
  3496     061F  00F0               	movwf	?___wmul
  3497     0620                     i1l339:
  3498     0620  0008               	return
  3499     0621                     __end_of___wmul:
  3500                           
  3501                           	psect	text12
  3502     04A7                     __ptext12:	
  3503 ;; *************** function ___awdiv *****************
  3504 ;; Defined at:
  3505 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  divisor         2    6[COMMON] int 
  3508 ;;  dividend        2    8[COMMON] int 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  quotient        2    2[BANK0 ] int 
  3511 ;;  sign            1    1[BANK0 ] unsigned char 
  3512 ;;  counter         1    0[BANK0 ] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2    6[COMMON] int 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         4       0       0       0       0
  3523 ;;      Locals:         0       4       0       0       0
  3524 ;;      Temps:          1       0       0       0       0
  3525 ;;      Totals:         5       4       0       0       0
  3526 ;;Total ram usage:        9 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_map
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535     04A7                     ___awdiv:	
  3536                           ;psect for function ___awdiv
  3537                           
  3538     04A7                     i1l1459:	
  3539                           ;incstack = 0
  3540                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3541                           
  3542     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3543     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3544     04A9  01C4               	clrf	___awdiv@sign
  3545     04AA                     i1l1461:
  3546     04AA  1FF7               	btfss	___awdiv@divisor+1,7
  3547     04AB  2CAD               	goto	u79_21
  3548     04AC  2CAE               	goto	u79_20
  3549     04AD                     u79_21:
  3550     04AD  2CB5               	goto	i1l1467
  3551     04AE                     u79_20:
  3552     04AE                     i1l1463:
  3553     04AE  09F6               	comf	___awdiv@divisor,f
  3554     04AF  09F7               	comf	___awdiv@divisor+1,f
  3555     04B0  0AF6               	incf	___awdiv@divisor,f
  3556     04B1  1903               	skipnz
  3557     04B2  0AF7               	incf	___awdiv@divisor+1,f
  3558     04B3                     i1l1465:
  3559     04B3  01C4               	clrf	___awdiv@sign
  3560     04B4  0AC4               	incf	___awdiv@sign,f
  3561     04B5                     i1l1467:
  3562     04B5  1FF9               	btfss	___awdiv@dividend+1,7
  3563     04B6  2CB8               	goto	u80_21
  3564     04B7  2CB9               	goto	u80_20
  3565     04B8                     u80_21:
  3566     04B8  2CC2               	goto	i1l1473
  3567     04B9                     u80_20:
  3568     04B9                     i1l1469:
  3569     04B9  09F8               	comf	___awdiv@dividend,f
  3570     04BA  09F9               	comf	___awdiv@dividend+1,f
  3571     04BB  0AF8               	incf	___awdiv@dividend,f
  3572     04BC  1903               	skipnz
  3573     04BD  0AF9               	incf	___awdiv@dividend+1,f
  3574     04BE                     i1l1471:
  3575     04BE  3001               	movlw	1
  3576     04BF  00FA               	movwf	??___awdiv
  3577     04C0  087A               	movf	??___awdiv,w
  3578     04C1  06C4               	xorwf	___awdiv@sign,f
  3579     04C2                     i1l1473:
  3580     04C2  01C5               	clrf	___awdiv@quotient
  3581     04C3  01C6               	clrf	___awdiv@quotient+1
  3582     04C4                     i1l1475:
  3583     04C4  0876               	movf	___awdiv@divisor,w
  3584     04C5  0477               	iorwf	___awdiv@divisor+1,w
  3585     04C6  1903               	btfsc	3,2
  3586     04C7  2CC9               	goto	u81_21
  3587     04C8  2CCA               	goto	u81_20
  3588     04C9                     u81_21:
  3589     04C9  2D01               	goto	i1l1495
  3590     04CA                     u81_20:
  3591     04CA                     i1l1477:
  3592     04CA  01C3               	clrf	___awdiv@counter
  3593     04CB  0AC3               	incf	___awdiv@counter,f
  3594     04CC  2CD8               	goto	i1l1483
  3595     04CD                     i1l1479:
  3596     04CD  3001               	movlw	1
  3597     04CE                     u82_25:
  3598     04CE  1003               	clrc
  3599     04CF  0DF6               	rlf	___awdiv@divisor,f
  3600     04D0  0DF7               	rlf	___awdiv@divisor+1,f
  3601     04D1  3EFF               	addlw	-1
  3602     04D2  1D03               	skipz
  3603     04D3  2CCE               	goto	u82_25
  3604     04D4                     i1l1481:
  3605     04D4  3001               	movlw	1
  3606     04D5  00FA               	movwf	??___awdiv
  3607     04D6  087A               	movf	??___awdiv,w
  3608     04D7  07C3               	addwf	___awdiv@counter,f
  3609     04D8                     i1l1483:
  3610     04D8  1FF7               	btfss	___awdiv@divisor+1,7
  3611     04D9  2CDB               	goto	u83_21
  3612     04DA  2CDC               	goto	u83_20
  3613     04DB                     u83_21:
  3614     04DB  2CCD               	goto	i1l1479
  3615     04DC                     u83_20:
  3616     04DC                     i1l1485:
  3617     04DC  3001               	movlw	1
  3618     04DD                     u84_25:
  3619     04DD  1003               	clrc
  3620     04DE  0DC5               	rlf	___awdiv@quotient,f
  3621     04DF  0DC6               	rlf	___awdiv@quotient+1,f
  3622     04E0  3EFF               	addlw	-1
  3623     04E1  1D03               	skipz
  3624     04E2  2CDD               	goto	u84_25
  3625     04E3  0877               	movf	___awdiv@divisor+1,w
  3626     04E4  0279               	subwf	___awdiv@dividend+1,w
  3627     04E5  1D03               	skipz
  3628     04E6  2CE9               	goto	u85_25
  3629     04E7  0876               	movf	___awdiv@divisor,w
  3630     04E8  0278               	subwf	___awdiv@dividend,w
  3631     04E9                     u85_25:
  3632     04E9  1C03               	skipc
  3633     04EA  2CEC               	goto	u85_21
  3634     04EB  2CED               	goto	u85_20
  3635     04EC                     u85_21:
  3636     04EC  2CF4               	goto	i1l1491
  3637     04ED                     u85_20:
  3638     04ED                     i1l1487:
  3639     04ED  0876               	movf	___awdiv@divisor,w
  3640     04EE  02F8               	subwf	___awdiv@dividend,f
  3641     04EF  0877               	movf	___awdiv@divisor+1,w
  3642     04F0  1C03               	skipc
  3643     04F1  03F9               	decf	___awdiv@dividend+1,f
  3644     04F2  02F9               	subwf	___awdiv@dividend+1,f
  3645     04F3                     i1l1489:
  3646     04F3  1445               	bsf	___awdiv@quotient,0
  3647     04F4                     i1l1491:
  3648     04F4  3001               	movlw	1
  3649     04F5                     u86_25:
  3650     04F5  1003               	clrc
  3651     04F6  0CF7               	rrf	___awdiv@divisor+1,f
  3652     04F7  0CF6               	rrf	___awdiv@divisor,f
  3653     04F8  3EFF               	addlw	-1
  3654     04F9  1D03               	skipz
  3655     04FA  2CF5               	goto	u86_25
  3656     04FB                     i1l1493:
  3657     04FB  3001               	movlw	1
  3658     04FC  02C3               	subwf	___awdiv@counter,f
  3659     04FD  1D03               	btfss	3,2
  3660     04FE  2D00               	goto	u87_21
  3661     04FF  2D01               	goto	u87_20
  3662     0500                     u87_21:
  3663     0500  2CDC               	goto	i1l1485
  3664     0501                     u87_20:
  3665     0501                     i1l1495:
  3666     0501  0844               	movf	___awdiv@sign,w
  3667     0502  1903               	btfsc	3,2
  3668     0503  2D05               	goto	u88_21
  3669     0504  2D06               	goto	u88_20
  3670     0505                     u88_21:
  3671     0505  2D0B               	goto	i1l1499
  3672     0506                     u88_20:
  3673     0506                     i1l1497:
  3674     0506  09C5               	comf	___awdiv@quotient,f
  3675     0507  09C6               	comf	___awdiv@quotient+1,f
  3676     0508  0AC5               	incf	___awdiv@quotient,f
  3677     0509  1903               	skipnz
  3678     050A  0AC6               	incf	___awdiv@quotient+1,f
  3679     050B                     i1l1499:
  3680     050B  0846               	movf	___awdiv@quotient+1,w
  3681     050C  00F7               	movwf	?___awdiv+1
  3682     050D  0845               	movf	___awdiv@quotient,w
  3683     050E  00F6               	movwf	?___awdiv
  3684     050F                     i1l490:
  3685     050F  0008               	return
  3686     0510                     __end_of___awdiv:
  3687                           
  3688                           	psect	text13
  3689     0683                     __ptext13:	
  3690 ;; *************** function _delay *****************
  3691 ;; Defined at:
  3692 ;;		line 476 in file "main.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  micro           2    0[COMMON] unsigned int 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3706 ;;      Params:         2       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0
  3709 ;;      Totals:         2       0       0       0       0
  3710 ;;Total ram usage:        2 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_isr
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719     0683                     _delay:	
  3720                           ;psect for function _delay
  3721                           
  3722     0683                     i1l1507:	
  3723                           ;incstack = 0
  3724                           ; Regs used in _delay: [wreg+status,2+status,0]
  3725                           
  3726                           
  3727                           ;main.c: 477:     while (micro > 0){
  3728     0683  2E8D               	goto	i1l1511
  3729     0684                     i1l240:
  3730                           
  3731                           ;main.c: 478:         _delay((unsigned long)((50)*(500000/4000000.0)));
  3732     0684  2E85               	nop2	;2 cycle nop
  3733     0685  2E86               	nop2	;2 cycle nop
  3734     0686  2E87               	nop2	;2 cycle nop
  3735     0687                     i1l1509:
  3736                           
  3737                           ;main.c: 479:         micro--;
  3738     0687  3001               	movlw	1
  3739     0688  02F0               	subwf	delay@micro,f
  3740     0689  3000               	movlw	0
  3741     068A  1C03               	skipc
  3742     068B  03F1               	decf	delay@micro+1,f
  3743     068C  02F1               	subwf	delay@micro+1,f
  3744     068D                     i1l1511:
  3745                           
  3746                           ;main.c: 477:     while (micro > 0){
  3747     068D  0870               	movf	delay@micro,w
  3748     068E  0471               	iorwf	delay@micro+1,w
  3749     068F  1D03               	btfss	3,2
  3750     0690  2E92               	goto	u89_21
  3751     0691  2E93               	goto	u89_20
  3752     0692                     u89_21:
  3753     0692  2E84               	goto	i1l240
  3754     0693                     u89_20:
  3755     0693                     i1l242:
  3756     0693  0008               	return
  3757     0694                     __end_of_delay:
  3758     007E                     btemp	set	126	;btemp
  3759     007E                     wtemp0	set	126
  3760                           
  3761                           	psect	idloc
  3762                           
  3763                           ;Config register IDLOC0 @ 0x2000
  3764                           ;	unspecified, using default values
  3765     2000                     	org	8192
  3766     2000  3FFF               	dw	16383
  3767                           
  3768                           ;Config register IDLOC1 @ 0x2001
  3769                           ;	unspecified, using default values
  3770     2001                     	org	8193
  3771     2001  3FFF               	dw	16383
  3772                           
  3773                           ;Config register IDLOC2 @ 0x2002
  3774                           ;	unspecified, using default values
  3775     2002                     	org	8194
  3776     2002  3FFF               	dw	16383
  3777                           
  3778                           ;Config register IDLOC3 @ 0x2003
  3779                           ;	unspecified, using default values
  3780     2003                     	org	8195
  3781     2003  3FFF               	dw	16383
  3782                           
  3783                           	psect	config
  3784                           
  3785                           ;Config register CONFIG1 @ 0x2007
  3786                           ;	Oscillator Selection bits
  3787                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3788                           ;	Watchdog Timer Enable bit
  3789                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3790                           ;	Power-up Timer Enable bit
  3791                           ;	PWRTE = OFF, PWRT disabled
  3792                           ;	RE3/MCLR pin function select bit
  3793                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3794                           ;	Code Protection bit
  3795                           ;	CP = OFF, Program memory code protection is disabled
  3796                           ;	Data Code Protection bit
  3797                           ;	CPD = OFF, Data memory code protection is disabled
  3798                           ;	Brown Out Reset Selection bits
  3799                           ;	BOREN = OFF, BOR disabled
  3800                           ;	Internal External Switchover bit
  3801                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3802                           ;	Fail-Safe Clock Monitor Enabled bit
  3803                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3804                           ;	Low Voltage Programming Enable bit
  3805                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3806                           ;	In-Circuit Debugger Mode bit
  3807                           ;	DEBUG = 0x1, unprogramme  3808     2007                     	org	8199
  3809     2007  20D4               	dw	8404
  3810                           
  3811                           ;Config register CONFIG2 @ 0x2008
  3812                           ;	Brown-out Reset Selection bit
  3813                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3814                           ;	Flash Program Memory Self Write Enable bits
  3815                           ;	WRT = OFF, Write protection off
  3816     2008                     	org	8200
  3817     2008  3FFF               	dw	16383

Data Sizes:
    Strings     121
    Constant    0
    Data        35
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     17      66
    BANK1            80      4       4
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@cursor	PTR unsigned char  size(1) Largest target is 121
		 -> STR_1(CODE[121]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_map
    _map->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_map
    _map->___awdiv

Critical Paths under _main in BANK1

    _main->_cadena

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     132
                                              2 BANK1      2     2      0
                             _cadena
                           _interrup
                         _readEEPROM
                              _setup
                           _setupADC
                           _setupPWM
                          _setupUART
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          1     1      0      31
                                              0 BANK1      1     1      0
                           _interrup
 ---------------------------------------------------------------------------------
 (2) _interrup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               2     2      0     101
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0    2241
                                             12 BANK0      5     5      0
                              _delay
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 10     2      8    2066
                                             11 COMMON     2     2      0
                                              4 BANK0      8     0      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     0      2     175
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
   _interrup
   _readEEPROM
   _setup
   _setupADC
   _setupPWM
   _setupUART
   _writeEEPROM
     _interrup

 _isr (ROOT)
   _delay
   _map
     ___awdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4       4       7        5.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      54      12        0.0%
ABS                  0      0      54       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Nov 13 18:01:56 2022

                      _x 0061                        _y 0060                        pc 0002  
            map@inputmax 0049              map@inputmin 0047             ___awdiv@sign 0044  
                     _x1 005F                       _y1 005E                       fsr 0004  
    ___wmul@multiplicand 0072                      l202 0416                      l212 065A  
                    l221 066F                      l230 05A6                      l215 05F2  
                    l224 06A9                      l232 05AC                      l209 054E  
                    l217 05F6                      l233 05AD                      l218 05FB  
                    l251 05D5                      l227 0590                      l236 06A0  
                    l229 0594                      l247 05B2                      l185 0263  
                    l194 0328                      l186 0268                      _PR2 0092  
                    _map 054F                      _isr 0034                      _pot 0056  
                    fsr0 0004                      indf 0000                     l2101 053E  
                   l2111 0543                     l2103 053F                     l2121 0548  
                   l2113 0544                     l2105 0540                     l2123 0549  
                   l2115 0545                     l2107 0541                     l2051 0515  
                   l2131 05D6                     l2043 0694                     l2211 0250  
                   l2203 0238                     l2125 054A                     l2117 0546  
                   l2109 0542                     l2061 051C                     l2053 0516  
                   l2045 0510                     l2141 05E4                     l2133 05D9  
                   l2301 034A                     l2221 0273                     l2213 0256  
                   l2205 023D                     l2119 0547                     l2071 0529  
                   l2063 051D                     l2055 0517                     l2047 0513  
                   l2127 0644                     l2151 05EE                     l2143 05E5  
                   l2135 05DF                     l2311 035D                     l2303 034D  
                   l2231 028C                     l2223 0277                     l2215 025E  
                   l2207 0242                     l2081 052E                     l2073 052A  
                   l2065 051E                     l2057 051A                     l2049 0514  
                   l2129 0654                     l2153 05EF                     l2145 05E6  
                   l2137 05E1                     l2161 0662                     l2321 037C  
                   l2313 0361                     l2305 0351                     l2241 02A7  
                   l2233 0290                     l2225 027E                     l2217 0267  
                   l2209 0247                     l2091 0539                     l2083 0531  
                   l2075 052B                     l2067 051F                     l2059 051B  
                   l2155 05F0                     l2147 05E7                     l2139 05E3  
                   l2171 066E                     l2163 0664                     l2331 039B  
                   l2323 0381                     l2315 0366                     l2307 0356  
                   l2243 02AA                     l2235 0298                     l2227 0281  
                   l2251 02BD                     l2219 026F                     l2173 05B1  
                   l2093 053A                     l2085 0534                     l2077 052C  
                   l2069 0528                     l2149 05EA                     l2165 0665  
                   l2157 065B                     l2181 0587                     l2341 03B3  
                   l2333 039F                     l2325 0390                     l2317 0375  
                   l2309 035A                     l2261 02D4                     l2253 02C1  
                   l2245 02AE                     l2237 029B                     l2229 0289  
                   l2175 05B7                     l2095 053B                     l2087 0537  
                   l2079 052D                     l2167 0668                     l2159 0661  
                   l2191 059D                     l2183 058B                     l2351 03CE  
                   l2343 03B7                     l2335 03A3                     l2327 0393  
                   l2319 0378                     l2271 02F2                     l2263 02DC  
                   l2255 02C5                     l2247 02B6                     l2239 029F  
                   l2177 05C3                     l2097 053C                     l2089 0538  
                   l2169 066B                     l2193 059E                     l2185 058E  
                   l2361 03FD                     l2353 03D3                     l2345 03BA  
                   l2337 03AA                     l2329 0397                     l2273 02FA  
                   l2265 02DF                     l2257 02C9                     l2249 02B9  
                   l2281 0310                     l2179 05C9                     l2099 053D  
                   l2195 05A3                     l2187 058F                     l2371 041E  
                   l2363 0400                     l2355 03E2                     l2347 03BE  
                   l2339 03AE                     l2291 0333                     l2275 0301  
                   l2267 02EB                     l2259 02D0                     l2283 0316  
                   l2197 06A1                     l2189 0597                     l2357 03E5  
                   l2349 03C7                     l2293 0337                     l2365 0404  
                   l2285 031C                     l2277 0309                     l2269 02EE  
                   l2199 06A5                     l2359 03E9                     l2295 033E  
                   l2287 0321                     l2367 040A                     l2279 030C  
                   l2369 0411                     l2297 0341                     l2289 032F  
                   l2299 0346                     ?_map 0047                     ?_isr 0070  
                   STR_1 042E                     u1500 05B7                     u1501 05B6  
                   u1510 05D5                     u1511 05D4                     u1520 0594  
                   u1600 02C9                     u1521 0593                     u1601 02C8  
                   u1530 05AC                     u1610 02D0                     u1531 05AB  
                   u1611 02CF                     u1700 040A                     u1620 0316  
                   u1540 025E                     u1701 0409                     u1621 0315  
                   u1541 025D                     u1710 0411                     u1630 031C  
                   u1550 0267                     u1711 0410                     u1631 031B  
                   u1551 0266                     u1720 0424                     u1640 032F  
                   u1560 026F                     u1721 0423                     u1641 032E  
                   u1561 026E                     u1490 05F6                     u1650 0337  
                   u1570 0277                     u1491 05F5                     u1651 0336  
                   u1571 0276                     u1660 033E                     u1580 027E  
                   u1661 033D                     u1581 027D                     u1670 039B  
                   u1590 02C1                     u1671 039A                     u1591 02C0  
                   u1680 03A3                     u1737 0658                     u1681 03A2  
                   u1690 03AA                     u1691 03A9                     _TMR0 0001  
                   _dato 007D                     _main 0238                     _pot1 0054  
                   _loop 0058                     btemp 007E                     start 0010  
            _writeEEPROM 0584                    ??_map 007B                    ??_isr 004F  
                  ?_main 0070          __end_of___awdiv 0510                    _EEADR 010D  
        ___awdiv@divisor 0076                    i1l135 0583                    i1l240 0684  
                  i1l242 0693                    i1l148 0100                    i1l337 0608  
                  i1l177 022F                    i1l339 0620                    i1l490 050F  
        ___awdiv@counter 0043                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    u80_20 04B9                    u80_21 04B8  
                  u81_20 04CA                    u81_21 04C9                    _TRISD 0088  
                  _TRISE 0089                    u82_25 04CE                    u83_20 04DC  
                  u75_20 0602                    u83_21 04DB                    u75_21 0601  
                  u84_25 04DD                    u76_25 0609                    u85_20 04ED  
                  u85_21 04EC                    u85_25 04E9                    u77_25 0610  
                  u78_20 061C                    u78_21 061B                    u86_25 04F5  
                  u87_20 0501                    u79_20 04AE                    u95_20 0038  
                  u87_21 0500                    u79_21 04AD                    u95_21 0037  
                  u88_20 0506                    u96_20 003D                    u88_21 0505  
                  u96_21 003C                    u89_20 0693                    u97_20 0045  
                  u89_21 0692                    u97_21 0044                    _TXREG 0019  
                  u98_20 004B                    u98_21 004A                    u99_20 005C  
                  u99_21 005B                    _delay 0683                    _servo 0020  
                  _setup 0510                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 0428  
                 ??_main 00A2                   ?_delay 0070                   _ADRESH 001E  
                 _EEADRH 010F                   _EEDATA 010C                   _CCPR1L 0015  
                 _CCPR2L 001B                   _EECON2 018D         ___awdiv@dividend 0078  
                 ?_setup 0070                   _ANSELH 0189                   u100_20 0062  
                 u100_21 0061                   u101_20 006B                   u101_21 006A  
                 u110_20 0151                   u102_20 0092                   u110_21 0150  
                 u102_21 0091                   u111_20 0156                   u103_20 00B9  
                 u111_21 0155                   u103_21 00B8                   i1l1511 068D  
                 i1l1503 0550                   u120_20 01B9                   u112_20 015D  
                 u104_20 00E2                   u120_21 01B8                   u112_21 015C  
                 u104_21 00E1                   i1l1507 0683                   i1l1451 060F  
                 i1l1509 0687                   i1l1461 04AA                   i1l1453 0616  
                 i1l1445 05FC                   i1l1701 0092                   i1l1471 04BE  
                 i1l1463 04AE                   i1l1455 061C                   i1l1447 05FE  
                 i1l1711 00D9                   i1l1703 00AB                   u121_20 01BE  
                 u113_20 0170                   u105_20 0105                   i1l1481 04D4  
                 i1l1473 04C2                   i1l1465 04B3                   i1l1449 0602  
                 u121_21 01BD                   i1l1801 0199                   u113_21 016F  
                 i1l1721 0105                   u105_21 0104                   i1l1713 00E2  
                 i1l1705 00B0                   i1l1491 04F4                   i1l1483 04D8  
                 i1l1475 04C4                   i1l1467 04B5                   i1l1459 04A7  
                 i1l1811 01AA                   i1l1803 019D                   i1l1731 0115  
                 i1l1723 0106                   i1l1715 00FD                   i1l1707 00B9  
                 i1l1493 04FB                   i1l1485 04DC                   i1l1477 04CA  
                 i1l1469 04B9                   i1l1821 01BE                   i1l1813 01B0  
                 i1l1805 019E                   i1l1741 012C                   i1l1733 0116  
                 i1l1725 0108                   i1l1709 00D4                   i1l1717 0100  
                 i1l1487 04ED                   i1l1479 04CD                   i1l1495 0501  
                 i1l1831 01D6                   i1l1823 01BF                   i1l1815 01B2  
                 i1l1807 01A4                   i1l1751 013D                   i1l1743 0130  
                 i1l1735 011F                   i1l1727 0109                   i1l1719 0101  
                 i1l1671 0034                   u122_20 01C5                   u114_20 0175  
                 u106_20 0126                   i1l1497 0506                   i1l1489 04F3  
                 i1l1841 01EE                   i1l1825 01C5                   u122_21 01C4  
                 i1l1833 01D7                   i1l1809 01A9                   i1l1817 01B3  
                 u114_21 0174                   i1l1761 014B                   i1l1753 013E  
                 i1l1745 0131                   u106_21 0125                   i1l1729 0112  
                 i1l1737 0122                   i1l1681 004B                   i1l1673 0038  
                 i1l1499 050B                   i1l1851 01FD                   i1l1843 01F0  
                 i1l1835 01DD                   i1l1827 01C7                   i1l1819 01B9  
                 i1l1771 015F                   i1l1763 0151                   i1l1755 0144  
                 i1l1747 0137                   i1l1739 0126                   i1l1683 0051  
                 i1l1675 003D                   i1l1691 005E                   i1l1853 0203  
                 i1l1861 0215                   i1l1837 01E2                   i1l1845 01F1  
                 i1l1829 01D2                   i1l1781 0175                   i1l1773 0165  
                 i1l1765 0156                   i1l1757 0148                   i1l1749 013B  
                 i1l1693 0062                   i1l1685 0053                   i1l1677 0041  
                 i1l1871 022E                   i1l1863 021B                   i1l1855 0205  
                 i1l1847 01F7                   i1l1839 01E3                   i1l1791 0185  
                 i1l1783 0176                   i1l1775 0169                   i1l1767 0157  
                 i1l1759 014A                   i1l1695 006B                   i1l1687 0055  
                 i1l1679 0045                   u123_20 01DD                   u115_20 0185  
                 u107_20 012C                   i1l1865 0220                   i1l1857 0210  
                 i1l1849 01FC                   u123_21 01DC                   i1l1793 018A  
                 u115_21 0184                   i1l1785 017C                   i1l1769 015D  
                 i1l1777 016A                   u107_21 012B                   i1l1697 0084  
                 i1l1689 005C                   i1l1867 0221                   i1l1859 0214  
                 i1l1795 018B                   i1l1787 017E                   i1l1779 0170  
                 i1l1699 0089                   i1l1869 022C                   i1l1797 0191  
                 i1l1789 017F                   i1l1799 0193                   u124_20 01E2  
                 u116_20 018A                   u108_20 0137                   u124_21 01E1  
                 u116_21 0189                   u108_21 0136                   u125_20 01F7  
                 u117_20 0191                   u109_20 0144                   u125_21 01F6  
                 u117_21 0190                   u109_21 0143                   u126_20 01FC  
                 u118_20 01A4                   u126_21 01FB                   u118_21 01A3  
                 u127_20 0203                   u119_20 01A9                   u127_21 0202  
                 u119_21 01A8                   u128_20 021B                   u128_21 021A  
                 u129_20 0220                   u129_21 021F                   _SPBRGH 009A  
                 _cadena 05AE                   ___wmul 05FC                ??___awdiv 007A  
       ___awdiv@quotient 0045                   _servo2 0032         __end_of_interrup 06A1  
       __end_of_setupADC 065B         __end_of_setupPWM 05FC                   saved_w 007E  
__end_of__initialization 0030          writeEEPROM@data 00A0           __pcstackCOMMON 0070  
           __pidataBANK0 0621            __end_of_delay 0694            __end_of_setup 054F  
         _OPTION_REGbits 0081                  ??_delay 0072                  ??_setup 00A0  
             __pbssBANK0 0054               __pmaintext 0238             ?_writeEEPROM 0070  
                ?_cadena 0070                  ?___wmul 0070               __pintentry 0004  
                _CCP1CON 0017                  _CCP2CON 001D               __stringtab 0428  
           cadena@cursor 00A1               _readEEPROM 06A1                ?_interrup 0070  
              ?_setupADC 0070                ?_setupPWM 0070                  ___awdiv 04A7  
                _bandera 005A                _ANSELbits 0188                  __ptext1 0584  
                __ptext2 0694                  __ptext3 065B                  __ptext4 05D6  
                __ptext5 0644                  __ptext6 0510                  __ptext7 06A1  
                __ptext8 05AE                  __ptext9 0034                _T2CONbits 0012  
             delay@micro 0070     end_of_initialization 0030               ??_interrup 00A0  
      __end_of_setupUART 0670               ??_setupADC 00A0                _RCSTAbits 0018  
             ??_setupPWM 00A0                _PORTBbits 0006                _PORTCbits 0007  
              _PORTDbits 0008                _TRISBbits 0086                _TRISCbits 0087  
            _CCP1CONbits 0017              ?_readEEPROM 0070              _CCP2CONbits 001D  
              _TXSTAbits 0098           __end_of_cadena 05D6           __end_of___wmul 0621  
            _BAUDCTLbits 0187      start_initialization 0013              __end_of_map 0584  
            __end_of_isr 0238                 ??_cadena 00A0                 ??___wmul 0074  
             init_fetch0 0670              __pdataBANK0 0020              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0043            __pcstackBANK1 00A0  
               ?___awdiv 0076                __pstrings 0428        interrupt_function 0004  
         ___wmul@product 0074                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C                _setupUART 065B               _ADCON0bits 001F  
            __stringbase 042D               _ADCON1bits 009F        ___wmul@multiplier 0070  
              map@outmax 004D                map@outmin 004B                 _WPUBbits 0095  
           ??_readEEPROM 00A0               _EECON1bits 018C               ?_setupUART 0070  
     __end_of__stringtab 042E       __end_of_readEEPROM 06AA                 __ptext10 054F  
               __ptext11 05FC                 __ptext12 04A7                 __ptext13 0683  
               _interrup 0694                 _selector 005C            ??_writeEEPROM 00A0  
               _setupADC 0644                 _setupPWM 05D6                 map@value 007C  
             _INTCONbits 000B                 init_ram0 0674                 intlevel1 0000  
              stringcode 0428               _OSCCONbits 008F              ??_setupUART 00A0  
    __end_of_writeEEPROM 05AE                 stringdir 0428                 stringtab 0428  
