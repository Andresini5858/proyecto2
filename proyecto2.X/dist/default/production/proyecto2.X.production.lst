

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Nov 12 19:26:10 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Version 2.40
    33                           ; Generated 17/11/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     008F                     	;# 
   112     0090                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     0105                     	;# 
   131     0107                     	;# 
   132     0108                     	;# 
   133     0109                     	;# 
   134     010C                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     0185                     	;# 
   140     0187                     	;# 
   141     0188                     	;# 
   142     0189                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     008F                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0094                     	;# 
   197     0095                     	;# 
   198     0096                     	;# 
   199     0097                     	;# 
   200     0098                     	;# 
   201     0099                     	;# 
   202     009A                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     009F                     	;# 
   208     0105                     	;# 
   209     0107                     	;# 
   210     0108                     	;# 
   211     0109                     	;# 
   212     010C                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     0185                     	;# 
   218     0187                     	;# 
   219     0188                     	;# 
   220     0189                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223                           
   224                           	psect	idataBANK0
   225     05B0                     __pidataBANK0:
   226                           
   227                           ;initializer for _servo
   228     05B0  3407               	retlw	7
   229     05B1  3408               	retlw	8
   230     05B2  3409               	retlw	9
   231     05B3  340A               	retlw	10
   232     05B4  340B               	retlw	11
   233     05B5  340C               	retlw	12
   234     05B6  340D               	retlw	13
   235     05B7  340E               	retlw	14
   236     05B8  340F               	retlw	15
   237     0019                     _TXREG	set	25
   238     0018                     _RCSTAbits	set	24
   239     001D                     _CCP2CONbits	set	29
   240     001D                     _CCP2CON	set	29
   241     0012                     _T2CONbits	set	18
   242     0017                     _CCP1CONbits	set	23
   243     0017                     _CCP1CON	set	23
   244     0009                     _PORTE	set	9
   245     0008                     _PORTD	set	8
   246     0006                     _PORTB	set	6
   247     0005                     _PORTA	set	5
   248     0008                     _PORTDbits	set	8
   249     001A                     _RCREG	set	26
   250     0007                     _PORTCbits	set	7
   251     0001                     _TMR0	set	1
   252     001B                     _CCPR2L	set	27
   253     001E                     _ADRESH	set	30
   254     0015                     _CCPR1L	set	21
   255     001F                     _ADCON0bits	set	31
   256     000C                     _PIR1bits	set	12
   257     0006                     _PORTBbits	set	6
   258     000B                     _INTCONbits	set	11
   259     0099                     _SPBRG	set	153
   260     009A                     _SPBRGH	set	154
   261     0098                     _TXSTAbits	set	152
   262     0092                     _PR2	set	146
   263     009F                     _ADCON1bits	set	159
   264     0096                     _IOCBbits	set	150
   265     0095                     _WPUBbits	set	149
   266     0081                     _OPTION_REGbits	set	129
   267     008F                     _OSCCONbits	set	143
   268     0088                     _TRISD	set	136
   269     0089                     _TRISE	set	137
   270     0087                     _TRISCbits	set	135
   271     0086                     _TRISBbits	set	134
   272     008C                     _PIE1bits	set	140
   273     010C                     _EEDATA	set	268
   274     010F                     _EEADRH	set	271
   275     010D                     _EEADR	set	269
   276     018D                     _EECON2	set	397
   277     018C                     _EECON1bits	set	396
   278     0187                     _BAUDCTLbits	set	391
   279     0188                     _ANSELbits	set	392
   280     0189                     _ANSELH	set	393
   281                           
   282                           	psect	strings
   283     0361                     __pstrings:
   284     0361                     stringtab:
   285     0361                     __stringtab:
   286     0361                     stringcode:	
   287                           ;	String table - string pointers are 1 byte each
   288                           
   289     0361                     stringdir:
   290     0361  3003               	movlw	high stringdir
   291     0362  008A               	movwf	10
   292     0363  0804               	movf	4,w
   293     0364  0A84               	incf	4,f
   294     0365  0782               	addwf	2,f
   295     0366                     __stringbase:
   296     0366  3400               	retlw	0
   297     0367                     __end_of__stringtab:
   298     0367                     STR_1:
   299     0367  340A               	retlw	10
   300     0368  340D               	retlw	13
   301     0369  342D               	retlw	45	;'-'
   302     036A  342D               	retlw	45	;'-'
   303     036B  342D               	retlw	45	;'-'
   304     036C  342D               	retlw	45	;'-'
   305     036D  342D               	retlw	45	;'-'
   306     036E  342D               	retlw	45	;'-'
   307     036F  342D               	retlw	45	;'-'
   308     0370  342D               	retlw	45	;'-'
   309     0371  342D               	retlw	45	;'-'
   310     0372  342D               	retlw	45	;'-'
   311     0373  342D               	retlw	45	;'-'
   312     0374  342D               	retlw	45	;'-'
   313     0375  342D               	retlw	45	;'-'
   314     0376  342D               	retlw	45	;'-'
   315     0377  342D               	retlw	45	;'-'
   316     0378  342D               	retlw	45	;'-'
   317     0379  342D               	retlw	45	;'-'
   318     037A  342D               	retlw	45	;'-'
   319     037B  342D               	retlw	45	;'-'
   320     037C  342D               	retlw	45	;'-'
   321     037D  342D               	retlw	45	;'-'
   322     037E  342D               	retlw	45	;'-'
   323     037F  342D               	retlw	45	;'-'
   324     0380  342D               	retlw	45	;'-'
   325     0381  342D               	retlw	45	;'-'
   326     0382  342D               	retlw	45	;'-'
   327     0383  342D               	retlw	45	;'-'
   328     0384  342D               	retlw	45	;'-'
   329     0385  342D               	retlw	45	;'-'
   330     0386  342D               	retlw	45	;'-'
   331     0387  342D               	retlw	45	;'-'
   332     0388  342D               	retlw	45	;'-'
   333     0389  342D               	retlw	45	;'-'
   334     038A  3450               	retlw	80	;'P'
   335     038B  3441               	retlw	65	;'A'
   336     038C  3452               	retlw	82	;'R'
   337     038D  3441               	retlw	65	;'A'
   338     038E  3420               	retlw	32	;' '
   339     038F  3443               	retlw	67	;'C'
   340     0390  344F               	retlw	79	;'O'
   341     0391  344E               	retlw	78	;'N'
   342     0392  3454               	retlw	84	;'T'
   343     0393  3452               	retlw	82	;'R'
   344     0394  344F               	retlw	79	;'O'
   345     0395  344C               	retlw	76	;'L'
   346     0396  3441               	retlw	65	;'A'
   347     0397  3452               	retlw	82	;'R'
   348     0398  3420               	retlw	32	;' '
   349     0399  3443               	retlw	67	;'C'
   350     039A  344F               	retlw	79	;'O'
   351     039B  344E               	retlw	78	;'N'
   352     039C  3420               	retlw	32	;' '
   353     039D  344C               	retlw	76	;'L'
   354     039E  3441               	retlw	65	;'A'
   355     039F  3420               	retlw	32	;' '
   356     03A0  3443               	retlw	67	;'C'
   357     03A1  344F               	retlw	79	;'O'
   358     03A2  344D               	retlw	77	;'M'
   359     03A3  3450               	retlw	80	;'P'
   360     03A4  3455               	retlw	85	;'U'
   361     03A5  3454               	retlw	84	;'T'
   362     03A6  3441               	retlw	65	;'A'
   363     03A7  3444               	retlw	68	;'D'
   364     03A8  344F               	retlw	79	;'O'
   365     03A9  3452               	retlw	82	;'R'
   366     03AA  3441               	retlw	65	;'A'
   367     03AB  3420               	retlw	32	;' '
   368     03AC  3445               	retlw	69	;'E'
   369     03AD  344C               	retlw	76	;'L'
   370     03AE  3445               	retlw	69	;'E'
   371     03AF  3447               	retlw	71	;'G'
   372     03B0  3449               	retlw	73	;'I'
   373     03B1  3452               	retlw	82	;'R'
   374     03B2  3420               	retlw	32	;' '
   375     03B3  3445               	retlw	69	;'E'
   376     03B4  344C               	retlw	76	;'L'
   377     03B5  3420               	retlw	32	;' '
   378     03B6  344D               	retlw	77	;'M'
   379     03B7  344F               	retlw	79	;'O'
   380     03B8  3444               	retlw	68	;'D'
   381     03B9  344F               	retlw	79	;'O'
   382     03BA  3420               	retlw	32	;' '
   383     03BB  3433               	retlw	51	;'3'
   384     03BC  342D               	retlw	45	;'-'
   385     03BD  342D               	retlw	45	;'-'
   386     03BE  342D               	retlw	45	;'-'
   387     03BF  342D               	retlw	45	;'-'
   388     03C0  342D               	retlw	45	;'-'
   389     03C1  342D               	retlw	45	;'-'
   390     03C2  342D               	retlw	45	;'-'
   391     03C3  342D               	retlw	45	;'-'
   392     03C4  342D               	retlw	45	;'-'
   393     03C5  342D               	retlw	45	;'-'
   394     03C6  342D               	retlw	45	;'-'
   395     03C7  342D               	retlw	45	;'-'
   396     03C8  342D               	retlw	45	;'-'
   397     03C9  342D               	retlw	45	;'-'
   398     03CA  342D               	retlw	45	;'-'
   399     03CB  342D               	retlw	45	;'-'
   400     03CC  342D               	retlw	45	;'-'
   401     03CD  342D               	retlw	45	;'-'
   402     03CE  342D               	retlw	45	;'-'
   403     03CF  342D               	retlw	45	;'-'
   404     03D0  342D               	retlw	45	;'-'
   405     03D1  342D               	retlw	45	;'-'
   406     03D2  342D               	retlw	45	;'-'
   407     03D3  342D               	retlw	45	;'-'
   408     03D4  342D               	retlw	45	;'-'
   409     03D5  342D               	retlw	45	;'-'
   410     03D6  342D               	retlw	45	;'-'
   411     03D7  342D               	retlw	45	;'-'
   412     03D8  342D               	retlw	45	;'-'
   413     03D9  342D               	retlw	45	;'-'
   414     03DA  342D               	retlw	45	;'-'
   415     03DB  342D               	retlw	45	;'-'
   416     03DC  342D               	retlw	45	;'-'
   417     03DD  340A               	retlw	10
   418     03DE  340D               	retlw	13
   419     03DF  3400               	retlw	0
   420                           
   421                           	psect	cinit
   422     0013                     start_initialization:	
   423                           ; #config settings
   424                           
   425     0013                     __initialization:
   426                           
   427                           ; Initialize objects allocated to BANK0
   428     0013  1383               	bcf	3,7	;select IRP bank0
   429     0014  3049               	movlw	low (__pdataBANK0+9)
   430     0015  00FD               	movwf	btemp+-1
   431     0016  3005               	movlw	high __pidataBANK0
   432     0017  00FE               	movwf	btemp
   433     0018  30B0               	movlw	low __pidataBANK0
   434     0019  00FF               	movwf	btemp+1
   435     001A  3040               	movlw	low __pdataBANK0
   436     001B  0084               	movwf	4
   437     001C  120A  118A  2583  120A  118A  	fcall	init_ram0
   438                           
   439                           ; Clear objects allocated to BANK0
   440     0021  01B4               	clrf	__pbssBANK0& (0+127)
   441     0022  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   442     0023  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   443     0024  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   444     0025  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   445     0026  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   446     0027  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   447     0028  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   448     0029  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   449     002A  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   450     002B  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   451     002C  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   452                           
   453                           ; Clear objects allocated to COMMON
   454     002D  01FD               	clrf	__pbssCOMMON& (0+127)
   455     002E                     end_of_initialization:	
   456                           ;End of C runtime variable initialization code
   457                           
   458     002E                     __end_of__initialization:
   459     002E  0183               	clrf	3
   460     002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMMON
   463     007D                     __pbssCOMMON:
   464     007D                     _dato:
   465     007D                     	ds	1
   466                           
   467                           	psect	bssBANK0
   468     0034                     __pbssBANK0:
   469     0034                     _pot1:
   470     0034                     	ds	2
   471     0036                     _pot:
   472     0036                     	ds	2
   473     0038                     _loop:
   474     0038                     	ds	2
   475     003A                     _bandera:
   476     003A                     	ds	2
   477     003C                     _selector:
   478     003C                     	ds	2
   479     003E                     _y:
   480     003E                     	ds	1
   481     003F                     _x:
   482     003F                     	ds	1
   483                           
   484                           	psect	dataBANK0
   485     0040                     __pdataBANK0:
   486     0040                     _servo:
   487     0040                     	ds	9
   488                           
   489                           	psect	inittext
   490     057F                     init_fetch0:	
   491                           ;	Called with low address in FSR and high address in W
   492                           
   493     057F  087E               	movf	btemp,w
   494     0580  008A               	movwf	10
   495     0581  087F               	movf	btemp+1,w
   496     0582  0082               	movwf	2
   497     0583                     init_ram0:	
   498                           ;Called with:
   499                           ;	high address of idata address in btemp 
   500                           ;	low address of idata address in btemp+1 
   501                           ;	low address of data in FSR
   502                           ;	high address + 1 of data in btemp-1
   503                           
   504     0583  120A  118A  257F  120A  118A  	fcall	init_fetch0
   505     0588  0080               	movwf	0
   506     0589  0A84               	incf	4,f
   507     058A  0804               	movf	4,w
   508     058B  067D               	xorwf	btemp+-1,w
   509     058C  1903               	btfsc	3,2
   510     058D  3400               	retlw	0
   511     058E  0AFF               	incf	btemp+1,f
   512     058F  1903               	btfsc	3,2
   513     0590  0AFE               	incf	btemp,f
   514     0591  2D83               	goto	init_ram0
   515                           
   516                           	psect	cstackCOMMON
   517     0070                     __pcstackCOMMON:
   518     0070                     ?_delay:
   519     0070                     ?_setup:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_setupADC:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_setupPWM:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_setupUART:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_cadena:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_writeEEPROM:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_interrup:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_readEEPROM:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_isr:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_main:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?___wmul:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     delay@micro:	
   553                           ; 2 bytes @ 0x0
   554                           
   555     0070                     ___wmul@multiplier:	
   556                           ; 2 bytes @ 0x0
   557                           
   558                           
   559                           ; 2 bytes @ 0x0
   560     0070                     	ds	2
   561     0072                     ??_delay:
   562     0072                     ___wmul@multiplicand:	
   563                           ; 1 bytes @ 0x2
   564                           
   565                           
   566                           ; 2 bytes @ 0x2
   567     0072                     	ds	2
   568     0074                     ??___wmul:
   569     0074                     ___wmul@product:	
   570                           ; 1 bytes @ 0x4
   571                           
   572                           
   573                           ; 2 bytes @ 0x4
   574     0074                     	ds	2
   575     0076                     ?___awdiv:
   576     0076                     ___awdiv@divisor:	
   577                           ; 2 bytes @ 0x6
   578                           
   579                           
   580                           ; 2 bytes @ 0x6
   581     0076                     	ds	2
   582     0078                     ___awdiv@dividend:
   583                           
   584                           ; 2 bytes @ 0x8
   585     0078                     	ds	2
   586     007A                     ??___awdiv:
   587                           
   588                           ; 1 bytes @ 0xA
   589     007A                     	ds	1
   590     007B                     ??_map:
   591                           
   592                           ; 1 bytes @ 0xB
   593     007B                     	ds	1
   594     007C                     map@value:
   595                           
   596                           ; 1 bytes @ 0xC
   597     007C                     	ds	1
   598                           
   599                           	psect	cstackBANK0
   600     0020                     __pcstackBANK0:
   601     0020                     ___awdiv@counter:
   602                           
   603                           ; 1 bytes @ 0x0
   604     0020                     	ds	1
   605     0021                     ___awdiv@sign:
   606                           
   607                           ; 1 bytes @ 0x1
   608     0021                     	ds	1
   609     0022                     ___awdiv@quotient:
   610                           
   611                           ; 2 bytes @ 0x2
   612     0022                     	ds	2
   613     0024                     ?_map:
   614     0024                     map@inputmin:	
   615                           ; 2 bytes @ 0x4
   616                           
   617                           
   618                           ; 2 bytes @ 0x4
   619     0024                     	ds	2
   620     0026                     map@inputmax:
   621                           
   622                           ; 2 bytes @ 0x6
   623     0026                     	ds	2
   624     0028                     map@outmin:
   625                           
   626                           ; 2 bytes @ 0x8
   627     0028                     	ds	2
   628     002A                     map@outmax:
   629                           
   630                           ; 2 bytes @ 0xA
   631     002A                     	ds	2
   632     002C                     ??_isr:
   633                           
   634                           ; 1 bytes @ 0xC
   635     002C                     	ds	4
   636     0030                     ??_setup:
   637     0030                     ??_setupADC:	
   638                           ; 1 bytes @ 0x10
   639                           
   640     0030                     ??_setupPWM:	
   641                           ; 1 bytes @ 0x10
   642                           
   643     0030                     ??_setupUART:	
   644                           ; 1 bytes @ 0x10
   645                           
   646     0030                     ??_cadena:	
   647                           ; 1 bytes @ 0x10
   648                           
   649     0030                     ??_writeEEPROM:	
   650                           ; 1 bytes @ 0x10
   651                           
   652     0030                     ??_interrup:	
   653                           ; 1 bytes @ 0x10
   654                           
   655     0030                     ??_readEEPROM:	
   656                           ; 1 bytes @ 0x10
   657                           
   658     0030                     writeEEPROM@data:	
   659                           ; 1 bytes @ 0x10
   660                           
   661                           
   662                           ; 1 bytes @ 0x10
   663     0030                     	ds	1
   664     0031                     cadena@cursor:
   665                           
   666                           ; 1 bytes @ 0x11
   667     0031                     	ds	1
   668     0032                     ??_main:
   669                           
   670                           ; 1 bytes @ 0x12
   671     0032                     	ds	2
   672                           
   673                           	psect	maintext
   674     0032                     __pmaintext:	
   675 ;;
   676 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   677 ;;
   678 ;; *************** function _main *****************
   679 ;; Defined at:
   680 ;;		line 140 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : B00/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          0       2       0       0       0
   697 ;;      Totals:         0       2       0       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels required when called: 5
   700 ;; This function calls:
   701 ;;		_cadena
   702 ;;		_interrup
   703 ;;		_readEEPROM
   704 ;;		_setup
   705 ;;		_setupADC
   706 ;;		_setupPWM
   707 ;;		_setupUART
   708 ;;		_writeEEPROM
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714     0032                     _main:	
   715                           ;psect for function _main
   716                           
   717     0032                     l1680:	
   718                           ;incstack = 0
   719                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   720                           
   721                           
   722                           ;main.c: 141:     setup();
   723     0032  120A  118A  2449  120A  118A  	fcall	_setup
   724     0037                     l1682:
   725                           
   726                           ;main.c: 142:     setupADC();
   727     0037  120A  118A  2553  120A  118A  	fcall	_setupADC
   728     003C                     l1684:
   729                           
   730                           ;main.c: 143:     setupPWM();
   731     003C  120A  118A  24E7  120A  118A  	fcall	_setupPWM
   732     0041                     l1686:
   733                           
   734                           ;main.c: 144:     setupUART();
   735     0041  120A  118A  256A  120A  118A  	fcall	_setupUART
   736                           
   737                           ;main.c: 145:     TMR0 = 246;
   738     0046  30F6               	movlw	246
   739     0047  1283               	bcf	3,5	;RP0=0, select bank0
   740     0048  1303               	bcf	3,6	;RP1=0, select bank0
   741     0049  0081               	movwf	1	;volatile
   742     004A                     l1688:
   743                           
   744                           ;main.c: 146:     cadena("\n\r---------------------------------PARA CONTROLAR CON LA COM
      +                          PUTADORA ELEGIR EL MODO 3---------------------------------\n\r");
   745     004A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   746     004B  120A  118A  2532  120A  118A  	fcall	_cadena
   747     0050                     l1690:
   748                           
   749                           ;main.c: 148:         if (selector == 0){
   750     0050  1283               	bcf	3,5	;RP0=0, select bank0
   751     0051  1303               	bcf	3,6	;RP1=0, select bank0
   752     0052  083C               	movf	_selector,w
   753     0053  043D               	iorwf	_selector+1,w
   754     0054  1D03               	btfss	3,2
   755     0055  2857               	goto	u1001
   756     0056  2858               	goto	u1000
   757     0057                     u1001:
   758     0057  2910               	goto	l1760
   759     0058                     u1000:
   760     0058                     l1692:
   761                           
   762                           ;main.c: 149:             loop = 1;
   763     0058  3001               	movlw	1
   764     0059  00B8               	movwf	_loop
   765     005A  3000               	movlw	0
   766     005B  00B9               	movwf	_loop+1
   767                           
   768                           ;main.c: 150:             while (loop == 1){
   769     005C  290A               	goto	l1758
   770     005D                     l164:
   771                           
   772                           ;main.c: 151:                 if (ADCON0bits.GO == 0){
   773     005D  189F               	btfsc	31,1	;volatile
   774     005E  2860               	goto	u1011
   775     005F  2861               	goto	u1010
   776     0060                     u1011:
   777     0060  2862               	goto	l165
   778     0061                     u1010:
   779     0061                     l1694:
   780                           
   781                           ;main.c: 152:                     ADCON0bits.GO = 1;}
   782     0061  149F               	bsf	31,1	;volatile
   783     0062                     l165:
   784                           
   785                           ;main.c: 153:                 PORTDbits.RD5 = 1;
   786     0062  1688               	bsf	8,5	;volatile
   787                           
   788                           ;main.c: 154:                 PORTDbits.RD6 = 0;
   789     0063  1308               	bcf	8,6	;volatile
   790                           
   791                           ;main.c: 155:                 PORTDbits.RD7 = 0;
   792     0064  1388               	bcf	8,7	;volatile
   793                           
   794                           ;main.c: 156:                 if (PORTBbits.RB6 == 0){
   795     0065  1B06               	btfsc	6,6	;volatile
   796     0066  2868               	goto	u1021
   797     0067  2869               	goto	u1020
   798     0068                     u1021:
   799     0068  286D               	goto	l1698
   800     0069                     u1020:
   801     0069                     l1696:
   802                           
   803                           ;main.c: 157:                     bandera = 2;}
   804     0069  3002               	movlw	2
   805     006A  00BA               	movwf	_bandera
   806     006B  3000               	movlw	0
   807     006C  00BB               	movwf	_bandera+1
   808     006D                     l1698:
   809                           
   810                           ;main.c: 158:                 if (PORTBbits.RB6 == 1 && bandera == 2){
   811     006D  1F06               	btfss	6,6	;volatile
   812     006E  2870               	goto	u1031
   813     006F  2871               	goto	u1030
   814     0070                     u1031:
   815     0070  28B7               	goto	l1728
   816     0071                     u1030:
   817     0071                     l1700:
   818     0071  3002               	movlw	2
   819     0072  063A               	xorwf	_bandera,w
   820     0073  043B               	iorwf	_bandera+1,w
   821     0074  1D03               	btfss	3,2
   822     0075  2877               	goto	u1041
   823     0076  2878               	goto	u1040
   824     0077                     u1041:
   825     0077  28B7               	goto	l1728
   826     0078                     u1040:
   827     0078                     l1702:
   828                           
   829                           ;main.c: 159:                     EEADR = 0b00000000;
   830     0078  1283               	bcf	3,5	;RP0=0, select bank2
   831     0079  1703               	bsf	3,6	;RP1=1, select bank2
   832     007A  018D               	clrf	13	;volatile
   833     007B                     l1704:
   834                           
   835                           ;main.c: 160:                     writeEEPROM(CCPR1L);
   836     007B  1283               	bcf	3,5	;RP0=0, select bank0
   837     007C  1303               	bcf	3,6	;RP1=0, select bank0
   838     007D  0815               	movf	21,w	;volatile
   839     007E  120A  118A  24BD  120A  118A  	fcall	_writeEEPROM
   840     0083                     l1706:
   841                           
   842                           ;main.c: 161:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   843     0083  2884               	nop2	;2 cycle nop
   844     0084  2885               	nop2	;2 cycle nop
   845     0085  0000               	nop
   846     0086                     l1708:
   847                           
   848                           ;main.c: 163:                     EEADR = 0b00000001;
   849     0086  3001               	movlw	1
   850     0087  1283               	bcf	3,5	;RP0=0, select bank2
   851     0088  1703               	bsf	3,6	;RP1=1, select bank2
   852     0089  008D               	movwf	13	;volatile
   853     008A                     l1710:
   854                           
   855                           ;main.c: 164:                     writeEEPROM(CCPR2L);
   856     008A  1283               	bcf	3,5	;RP0=0, select bank0
   857     008B  1303               	bcf	3,6	;RP1=0, select bank0
   858     008C  081B               	movf	27,w	;volatile
   859     008D  120A  118A  24BD  120A  118A  	fcall	_writeEEPROM
   860     0092                     l1712:
   861                           
   862                           ;main.c: 165:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   863     0092  2893               	nop2	;2 cycle nop
   864     0093  2894               	nop2	;2 cycle nop
   865     0094  0000               	nop
   866     0095                     l1714:
   867                           
   868                           ;main.c: 167:                     EEADR = 0b00000010;
   869     0095  3002               	movlw	2
   870     0096  1283               	bcf	3,5	;RP0=0, select bank2
   871     0097  1703               	bsf	3,6	;RP1=1, select bank2
   872     0098  008D               	movwf	13	;volatile
   873     0099                     l1716:
   874                           
   875                           ;main.c: 168:                     writeEEPROM(pot);
   876     0099  1283               	bcf	3,5	;RP0=0, select bank0
   877     009A  1303               	bcf	3,6	;RP1=0, select bank0
   878     009B  0836               	movf	_pot,w
   879     009C  120A  118A  24BD  120A  118A  	fcall	_writeEEPROM
   880     00A1                     l1718:
   881                           
   882                           ;main.c: 169:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   883     00A1  28A2               	nop2	;2 cycle nop
   884     00A2  28A3               	nop2	;2 cycle nop
   885     00A3  0000               	nop
   886     00A4                     l1720:
   887                           
   888                           ;main.c: 171:                     EEADR = 0b00000011;
   889     00A4  3003               	movlw	3
   890     00A5  1283               	bcf	3,5	;RP0=0, select bank2
   891     00A6  1703               	bsf	3,6	;RP1=1, select bank2
   892     00A7  008D               	movwf	13	;volatile
   893     00A8                     l1722:
   894                           
   895                           ;main.c: 172:                     writeEEPROM(pot1);
   896     00A8  1283               	bcf	3,5	;RP0=0, select bank0
   897     00A9  1303               	bcf	3,6	;RP1=0, select bank0
   898     00AA  0834               	movf	_pot1,w
   899     00AB  120A  118A  24BD  120A  118A  	fcall	_writeEEPROM
   900     00B0                     l1724:
   901                           
   902                           ;main.c: 173:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   903     00B0  28B1               	nop2	;2 cycle nop
   904     00B1  28B2               	nop2	;2 cycle nop
   905     00B2  0000               	nop
   906     00B3                     l1726:
   907                           
   908                           ;main.c: 175:                     bandera = 0;}
   909     00B3  1283               	bcf	3,5	;RP0=0, select bank0
   910     00B4  1303               	bcf	3,6	;RP1=0, select bank0
   911     00B5  01BA               	clrf	_bandera
   912     00B6  01BB               	clrf	_bandera+1
   913     00B7                     l1728:
   914                           
   915                           ;main.c: 177:                 if (PORTBbits.RB5 == 0){
   916     00B7  1A86               	btfsc	6,5	;volatile
   917     00B8  28BA               	goto	u1051
   918     00B9  28BB               	goto	u1050
   919     00BA                     u1051:
   920     00BA  28BF               	goto	l1732
   921     00BB                     u1050:
   922     00BB                     l1730:
   923                           
   924                           ;main.c: 178:                     bandera = 3;}
   925     00BB  3003               	movlw	3
   926     00BC  00BA               	movwf	_bandera
   927     00BD  3000               	movlw	0
   928     00BE  00BB               	movwf	_bandera+1
   929     00BF                     l1732:
   930                           
   931                           ;main.c: 179:                 if (PORTBbits.RB5 == 1 && bandera == 3){
   932     00BF  1E86               	btfss	6,5	;volatile
   933     00C0  28C2               	goto	u1061
   934     00C1  28C3               	goto	u1060
   935     00C2                     u1061:
   936     00C2  290A               	goto	l1758
   937     00C3                     u1060:
   938     00C3                     l1734:
   939     00C3  3003               	movlw	3
   940     00C4  063A               	xorwf	_bandera,w
   941     00C5  043B               	iorwf	_bandera+1,w
   942     00C6  1D03               	btfss	3,2
   943     00C7  28C9               	goto	u1071
   944     00C8  28CA               	goto	u1070
   945     00C9                     u1071:
   946     00C9  290A               	goto	l1758
   947     00CA                     u1070:
   948     00CA                     l1736:
   949                           
   950                           ;main.c: 180:                     EEADR = 0b00000100;
   951     00CA  3004               	movlw	4
   952     00CB  1283               	bcf	3,5	;RP0=0, select bank2
   953     00CC  1703               	bsf	3,6	;RP1=1, select bank2
   954     00CD  008D               	movwf	13	;volatile
   955     00CE                     l1738:
   956                           
   957                           ;main.c: 181:                     writeEEPROM(CCPR1L);
   958     00CE  1283               	bcf	3,5	;RP0=0, select bank0
   959     00CF  1303               	bcf	3,6	;RP1=0, select bank0
   960     00D0  0815               	movf	21,w	;volatile
   961     00D1  120A  118A  24BD  120A  118A  	fcall	_writeEEPROM
   962     00D6                     l1740:
   963                           
   964                           ;main.c: 182:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   965     00D6  28D7               	nop2	;2 cycle nop
   966     00D7  28D8               	nop2	;2 cycle nop
   967     00D8  0000               	nop
   968     00D9                     l1742:
   969                           
   970                           ;main.c: 184:                     EEADR = 0b00000101;
   971     00D9  3005               	movlw	5
   972     00DA  1283               	bcf	3,5	;RP0=0, select bank2
   973     00DB  1703               	bsf	3,6	;RP1=1, select bank2
   974     00DC  008D               	movwf	13	;volatile
   975                           
   976                           ;main.c: 185:                     writeEEPROM(CCPR2L);
   977     00DD  1283               	bcf	3,5	;RP0=0, select bank0
   978     00DE  1303               	bcf	3,6	;RP1=0, select bank0
   979     00DF  081B               	movf	27,w	;volatile
   980     00E0  120A  118A  24BD  120A  118A  	fcall	_writeEEPROM
   981     00E5                     l1744:
   982                           
   983                           ;main.c: 186:                     _delay((unsigned long)((40)*(500000/4000000.0)));
   984     00E5  28E6               	nop2	;2 cycle nop
   985     00E6  28E7               	nop2	;2 cycle nop
   986     00E7  0000               	nop
   987     00E8                     l1746:
   988                           
   989                           ;main.c: 188:                     EEADR = 0b00000110;
   990     00E8  3006               	movlw	6
   991     00E9  1283               	bcf	3,5	;RP0=0, select bank2
   992     00EA  1703               	bsf	3,6	;RP1=1, select bank2
   993     00EB  008D               	movwf	13	;volatile
   994     00EC                     l1748:
   995                           
   996                           ;main.c: 189:                     writeEEPROM(pot);
   997     00EC  1283               	bcf	3,5	;RP0=0, select bank0
   998     00ED  1303               	bcf	3,6	;RP1=0, select bank0
   999     00EE  0836               	movf	_pot,w
  1000     00EF  120A  118A  24BD  120A  118A  	fcall	_writeEEPROM
  1001     00F4                     l1750:
  1002                           
  1003                           ;main.c: 190:                     _delay((unsigned long)((40)*(500000/4000000.0)));
  1004     00F4  28F5               	nop2	;2 cycle nop
  1005     00F5  28F6               	nop2	;2 cycle nop
  1006     00F6  0000               	nop
  1007                           
  1008                           ;main.c: 192:                     EEADR = 0b00000111;
  1009     00F7  3007               	movlw	7
  1010     00F8  1283               	bcf	3,5	;RP0=0, select bank2
  1011     00F9  1703               	bsf	3,6	;RP1=1, select bank2
  1012     00FA  008D               	movwf	13	;volatile
  1013     00FB                     l1752:
  1014                           
  1015                           ;main.c: 193:                     writeEEPROM(pot1);
  1016     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1017     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1018     00FD  0834               	movf	_pot1,w
  1019     00FE  120A  118A  24BD  120A  118A  	fcall	_writeEEPROM
  1020     0103                     l1754:
  1021                           
  1022                           ;main.c: 194:                     _delay((unsigned long)((40)*(500000/4000000.0)));
  1023     0103  2904               	nop2	;2 cycle nop
  1024     0104  2905               	nop2	;2 cycle nop
  1025     0105  0000               	nop
  1026     0106                     l1756:
  1027                           
  1028                           ;main.c: 196:                     bandera = 0;}
  1029     0106  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0107  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0108  01BA               	clrf	_bandera
  1032     0109  01BB               	clrf	_bandera+1
  1033     010A                     l1758:
  1034                           
  1035                           ;main.c: 150:             while (loop == 1){
  1036     010A  0338               	decf	_loop,w
  1037     010B  0439               	iorwf	_loop+1,w
  1038     010C  1903               	btfsc	3,2
  1039     010D  290F               	goto	u1081
  1040     010E  2910               	goto	u1080
  1041     010F                     u1081:
  1042     010F  285D               	goto	l164
  1043     0110                     u1080:
  1044     0110                     l1760:
  1045                           
  1046                           ;main.c: 200:         if (selector == 1){
  1047     0110  033C               	decf	_selector,w
  1048     0111  043D               	iorwf	_selector+1,w
  1049     0112  1D03               	btfss	3,2
  1050     0113  2915               	goto	u1091
  1051     0114  2916               	goto	u1090
  1052     0115                     u1091:
  1053     0115  29EC               	goto	l1844
  1054     0116                     u1090:
  1055     0116                     l1762:
  1056                           
  1057                           ;main.c: 201:             interrup();
  1058     0116  120A  118A  25A3  120A  118A  	fcall	_interrup
  1059     011B                     l1764:
  1060                           
  1061                           ;main.c: 202:             loop = 1;
  1062     011B  3001               	movlw	1
  1063     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1064     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1065     011E  00B8               	movwf	_loop
  1066     011F  3000               	movlw	0
  1067     0120  00B9               	movwf	_loop+1
  1068                           
  1069                           ;main.c: 203:             while (loop == 1){
  1070     0121  29E6               	goto	l1842
  1071     0122                     l173:
  1072                           
  1073                           ;main.c: 204:                 PORTDbits.RD5 = 0;
  1074     0122  1288               	bcf	8,5	;volatile
  1075                           
  1076                           ;main.c: 205:                 PORTDbits.RD6 = 1;
  1077     0123  1708               	bsf	8,6	;volatile
  1078                           
  1079                           ;main.c: 206:                 PORTDbits.RD7 = 0;
  1080     0124  1388               	bcf	8,7	;volatile
  1081                           
  1082                           ;main.c: 207:             if (PORTBbits.RB6 == 0){
  1083     0125  1B06               	btfsc	6,6	;volatile
  1084     0126  2928               	goto	u1101
  1085     0127  2929               	goto	u1100
  1086     0128                     u1101:
  1087     0128  292D               	goto	l1768
  1088     0129                     u1100:
  1089     0129                     l1766:
  1090                           
  1091                           ;main.c: 208:                 bandera = 2;}
  1092     0129  3002               	movlw	2
  1093     012A  00BA               	movwf	_bandera
  1094     012B  3000               	movlw	0
  1095     012C  00BB               	movwf	_bandera+1
  1096     012D                     l1768:
  1097                           
  1098                           ;main.c: 209:             if (PORTBbits.RB6 == 1 && bandera == 2){
  1099     012D  1F06               	btfss	6,6	;volatile
  1100     012E  2930               	goto	u1111
  1101     012F  2931               	goto	u1110
  1102     0130                     u1111:
  1103     0130  2985               	goto	l1806
  1104     0131                     u1110:
  1105     0131                     l1770:
  1106     0131  3002               	movlw	2
  1107     0132  063A               	xorwf	_bandera,w
  1108     0133  043B               	iorwf	_bandera+1,w
  1109     0134  1D03               	btfss	3,2
  1110     0135  2937               	goto	u1121
  1111     0136  2938               	goto	u1120
  1112     0137                     u1121:
  1113     0137  2985               	goto	l1806
  1114     0138                     u1120:
  1115     0138                     l1772:
  1116                           
  1117                           ;main.c: 210:                 EEADR = 0b00000000;
  1118     0138  1283               	bcf	3,5	;RP0=0, select bank2
  1119     0139  1703               	bsf	3,6	;RP1=1, select bank2
  1120     013A  018D               	clrf	13	;volatile
  1121     013B                     l1774:
  1122                           
  1123                           ;main.c: 211:                 readEEPROM();
  1124     013B  120A  118A  25B9  120A  118A  	fcall	_readEEPROM
  1125     0140                     l1776:
  1126                           
  1127                           ;main.c: 212:                 CCPR1L = dato;
  1128     0140  087D               	movf	_dato,w
  1129     0141  1283               	bcf	3,5	;RP0=0, select bank0
  1130     0142  1303               	bcf	3,6	;RP1=0, select bank0
  1131     0143  0095               	movwf	21	;volatile
  1132     0144                     l1778:
  1133                           
  1134                           ;main.c: 213:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1135     0144  2945               	nop2	;2 cycle nop
  1136     0145  2946               	nop2	;2 cycle nop
  1137     0146  0000               	nop
  1138     0147                     l1780:
  1139                           
  1140                           ;main.c: 215:                 EEADR = 0b00000001;
  1141     0147  3001               	movlw	1
  1142     0148  1283               	bcf	3,5	;RP0=0, select bank2
  1143     0149  1703               	bsf	3,6	;RP1=1, select bank2
  1144     014A  008D               	movwf	13	;volatile
  1145     014B                     l1782:
  1146                           
  1147                           ;main.c: 216:                 readEEPROM();
  1148     014B  120A  118A  25B9  120A  118A  	fcall	_readEEPROM
  1149     0150                     l1784:
  1150                           
  1151                           ;main.c: 217:                 CCPR2L = dato;
  1152     0150  087D               	movf	_dato,w
  1153     0151  1283               	bcf	3,5	;RP0=0, select bank0
  1154     0152  1303               	bcf	3,6	;RP1=0, select bank0
  1155     0153  009B               	movwf	27	;volatile
  1156     0154                     l1786:
  1157                           
  1158                           ;main.c: 218:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1159     0154  2955               	nop2	;2 cycle nop
  1160     0155  2956               	nop2	;2 cycle nop
  1161     0156  0000               	nop
  1162     0157                     l1788:
  1163                           
  1164                           ;main.c: 220:                 EEADR = 0b00000010;
  1165     0157  3002               	movlw	2
  1166     0158  1283               	bcf	3,5	;RP0=0, select bank2
  1167     0159  1703               	bsf	3,6	;RP1=1, select bank2
  1168     015A  008D               	movwf	13	;volatile
  1169     015B                     l1790:
  1170                           
  1171                           ;main.c: 221:                 readEEPROM();
  1172     015B  120A  118A  25B9  120A  118A  	fcall	_readEEPROM
  1173     0160                     l1792:
  1174                           
  1175                           ;main.c: 222:                 pot = dato;
  1176     0160  087D               	movf	_dato,w
  1177     0161  1283               	bcf	3,5	;RP0=0, select bank0
  1178     0162  1303               	bcf	3,6	;RP1=0, select bank0
  1179     0163  00B2               	movwf	??_main
  1180     0164  01B3               	clrf	??_main+1
  1181     0165  0832               	movf	??_main,w
  1182     0166  00B6               	movwf	_pot
  1183     0167  0833               	movf	??_main+1,w
  1184     0168  00B7               	movwf	_pot+1
  1185     0169                     l1794:
  1186                           
  1187                           ;main.c: 223:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1188     0169  296A               	nop2	;2 cycle nop
  1189     016A  296B               	nop2	;2 cycle nop
  1190     016B  0000               	nop
  1191     016C                     l1796:
  1192                           
  1193                           ;main.c: 225:                 EEADR = 0b00000011;
  1194     016C  3003               	movlw	3
  1195     016D  1283               	bcf	3,5	;RP0=0, select bank2
  1196     016E  1703               	bsf	3,6	;RP1=1, select bank2
  1197     016F  008D               	movwf	13	;volatile
  1198     0170                     l1798:
  1199                           
  1200                           ;main.c: 226:                 readEEPROM();
  1201     0170  120A  118A  25B9  120A  118A  	fcall	_readEEPROM
  1202     0175                     l1800:
  1203                           
  1204                           ;main.c: 227:                 pot1 = dato;
  1205     0175  087D               	movf	_dato,w
  1206     0176  1283               	bcf	3,5	;RP0=0, select bank0
  1207     0177  1303               	bcf	3,6	;RP1=0, select bank0
  1208     0178  00B2               	movwf	??_main
  1209     0179  01B3               	clrf	??_main+1
  1210     017A  0832               	movf	??_main,w
  1211     017B  00B4               	movwf	_pot1
  1212     017C  0833               	movf	??_main+1,w
  1213     017D  00B5               	movwf	_pot1+1
  1214     017E                     l1802:
  1215                           
  1216                           ;main.c: 228:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1217     017E  297F               	nop2	;2 cycle nop
  1218     017F  2980               	nop2	;2 cycle nop
  1219     0180  0000               	nop
  1220     0181                     l1804:
  1221                           
  1222                           ;main.c: 230:                 bandera = 0;}
  1223     0181  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0182  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0183  01BA               	clrf	_bandera
  1226     0184  01BB               	clrf	_bandera+1
  1227     0185                     l1806:
  1228                           
  1229                           ;main.c: 232:             if (PORTBbits.RB5 == 0){
  1230     0185  1A86               	btfsc	6,5	;volatile
  1231     0186  2988               	goto	u1131
  1232     0187  2989               	goto	u1130
  1233     0188                     u1131:
  1234     0188  298D               	goto	l1810
  1235     0189                     u1130:
  1236     0189                     l1808:
  1237                           
  1238                           ;main.c: 233:             bandera = 3;}
  1239     0189  3003               	movlw	3
  1240     018A  00BA               	movwf	_bandera
  1241     018B  3000               	movlw	0
  1242     018C  00BB               	movwf	_bandera+1
  1243     018D                     l1810:
  1244                           
  1245                           ;main.c: 234:             if (PORTBbits.RB5 == 1 && bandera == 3){
  1246     018D  1E86               	btfss	6,5	;volatile
  1247     018E  2990               	goto	u1141
  1248     018F  2991               	goto	u1140
  1249     0190                     u1141:
  1250     0190  29E6               	goto	l1842
  1251     0191                     u1140:
  1252     0191                     l1812:
  1253     0191  3003               	movlw	3
  1254     0192  063A               	xorwf	_bandera,w
  1255     0193  043B               	iorwf	_bandera+1,w
  1256     0194  1D03               	btfss	3,2
  1257     0195  2997               	goto	u1151
  1258     0196  2998               	goto	u1150
  1259     0197                     u1151:
  1260     0197  29E6               	goto	l1842
  1261     0198                     u1150:
  1262     0198                     l1814:
  1263                           
  1264                           ;main.c: 235:                 EEADR = 0b00000100;
  1265     0198  3004               	movlw	4
  1266     0199  1283               	bcf	3,5	;RP0=0, select bank2
  1267     019A  1703               	bsf	3,6	;RP1=1, select bank2
  1268     019B  008D               	movwf	13	;volatile
  1269     019C                     l1816:
  1270                           
  1271                           ;main.c: 236:                 readEEPROM();
  1272     019C  120A  118A  25B9  120A  118A  	fcall	_readEEPROM
  1273     01A1                     l1818:
  1274                           
  1275                           ;main.c: 237:                 CCPR1L = dato;
  1276     01A1  087D               	movf	_dato,w
  1277     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1278     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1279     01A4  0095               	movwf	21	;volatile
  1280     01A5                     l1820:
  1281                           
  1282                           ;main.c: 238:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1283     01A5  29A6               	nop2	;2 cycle nop
  1284     01A6  29A7               	nop2	;2 cycle nop
  1285     01A7  0000               	nop
  1286     01A8                     l1822:
  1287                           
  1288                           ;main.c: 240:                 EEADR = 0b00000101;
  1289     01A8  3005               	movlw	5
  1290     01A9  1283               	bcf	3,5	;RP0=0, select bank2
  1291     01AA  1703               	bsf	3,6	;RP1=1, select bank2
  1292     01AB  008D               	movwf	13	;volatile
  1293     01AC                     l1824:
  1294                           
  1295                           ;main.c: 241:                 readEEPROM();
  1296     01AC  120A  118A  25B9  120A  118A  	fcall	_readEEPROM
  1297                           
  1298                           ;main.c: 242:                 CCPR2L = dato;
  1299     01B1  087D               	movf	_dato,w
  1300     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1301     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1302     01B4  009B               	movwf	27	;volatile
  1303     01B5                     l1826:
  1304                           
  1305                           ;main.c: 243:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1306     01B5  29B6               	nop2	;2 cycle nop
  1307     01B6  29B7               	nop2	;2 cycle nop
  1308     01B7  0000               	nop
  1309                           
  1310                           ;main.c: 245:                 EEADR = 0b00000110;
  1311     01B8  3006               	movlw	6
  1312     01B9  1283               	bcf	3,5	;RP0=0, select bank2
  1313     01BA  1703               	bsf	3,6	;RP1=1, select bank2
  1314     01BB  008D               	movwf	13	;volatile
  1315     01BC                     l1828:
  1316                           
  1317                           ;main.c: 246:                 readEEPROM();
  1318     01BC  120A  118A  25B9  120A  118A  	fcall	_readEEPROM
  1319     01C1                     l1830:
  1320                           
  1321                           ;main.c: 247:                 pot = dato;
  1322     01C1  087D               	movf	_dato,w
  1323     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1324     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1325     01C4  00B2               	movwf	??_main
  1326     01C5  01B3               	clrf	??_main+1
  1327     01C6  0832               	movf	??_main,w
  1328     01C7  00B6               	movwf	_pot
  1329     01C8  0833               	movf	??_main+1,w
  1330     01C9  00B7               	movwf	_pot+1
  1331     01CA                     l1832:
  1332                           
  1333                           ;main.c: 248:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1334     01CA  29CB               	nop2	;2 cycle nop
  1335     01CB  29CC               	nop2	;2 cycle nop
  1336     01CC  0000               	nop
  1337     01CD                     l1834:
  1338                           
  1339                           ;main.c: 250:                 EEADR = 0b00000111;
  1340     01CD  3007               	movlw	7
  1341     01CE  1283               	bcf	3,5	;RP0=0, select bank2
  1342     01CF  1703               	bsf	3,6	;RP1=1, select bank2
  1343     01D0  008D               	movwf	13	;volatile
  1344     01D1                     l1836:
  1345                           
  1346                           ;main.c: 251:                 readEEPROM();
  1347     01D1  120A  118A  25B9  120A  118A  	fcall	_readEEPROM
  1348                           
  1349                           ;main.c: 252:                 pot1 = dato;
  1350     01D6  087D               	movf	_dato,w
  1351     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1352     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1353     01D9  00B2               	movwf	??_main
  1354     01DA  01B3               	clrf	??_main+1
  1355     01DB  0832               	movf	??_main,w
  1356     01DC  00B4               	movwf	_pot1
  1357     01DD  0833               	movf	??_main+1,w
  1358     01DE  00B5               	movwf	_pot1+1
  1359     01DF                     l1838:
  1360                           
  1361                           ;main.c: 253:                 _delay((unsigned long)((40)*(500000/4000000.0)));
  1362     01DF  29E0               	nop2	;2 cycle nop
  1363     01E0  29E1               	nop2	;2 cycle nop
  1364     01E1  0000               	nop
  1365     01E2                     l1840:
  1366                           
  1367                           ;main.c: 255:                 bandera = 0;}
  1368     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1369     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1370     01E4  01BA               	clrf	_bandera
  1371     01E5  01BB               	clrf	_bandera+1
  1372     01E6                     l1842:
  1373                           
  1374                           ;main.c: 203:             while (loop == 1){
  1375     01E6  0338               	decf	_loop,w
  1376     01E7  0439               	iorwf	_loop+1,w
  1377     01E8  1903               	btfsc	3,2
  1378     01E9  29EB               	goto	u1161
  1379     01EA  29EC               	goto	u1160
  1380     01EB                     u1161:
  1381     01EB  2922               	goto	l173
  1382     01EC                     u1160:
  1383     01EC                     l1844:
  1384                           
  1385                           ;main.c: 259:         if (selector == 2){
  1386     01EC  3002               	movlw	2
  1387     01ED  063C               	xorwf	_selector,w
  1388     01EE  043D               	iorwf	_selector+1,w
  1389     01EF  1D03               	btfss	3,2
  1390     01F0  29F2               	goto	u1171
  1391     01F1  29F3               	goto	u1170
  1392     01F2                     u1171:
  1393     01F2  2850               	goto	l1690
  1394     01F3                     u1170:
  1395     01F3                     l1846:
  1396                           
  1397                           ;main.c: 260:             loop = 1;
  1398     01F3  3001               	movlw	1
  1399     01F4  00B8               	movwf	_loop
  1400     01F5  3000               	movlw	0
  1401     01F6  00B9               	movwf	_loop+1
  1402                           
  1403                           ;main.c: 261:             while (loop == 1){
  1404     01F7  2A00               	goto	l1848
  1405     01F8                     l181:
  1406                           
  1407                           ;main.c: 262:             PIE1bits.RCIE = 1;
  1408     01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1409     01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1410     01FA  168C               	bsf	12,5	;volatile
  1411                           
  1412                           ;main.c: 263:             PORTDbits.RD5 = 0;
  1413     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1414     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1415     01FD  1288               	bcf	8,5	;volatile
  1416                           
  1417                           ;main.c: 264:             PORTDbits.RD6 = 0;
  1418     01FE  1308               	bcf	8,6	;volatile
  1419                           
  1420                           ;main.c: 265:             PORTDbits.RD7 = 1;
  1421     01FF  1788               	bsf	8,7	;volatile
  1422     0200                     l1848:
  1423                           
  1424                           ;main.c: 261:             while (loop == 1){
  1425     0200  0338               	decf	_loop,w
  1426     0201  0439               	iorwf	_loop+1,w
  1427     0202  1903               	btfsc	3,2
  1428     0203  2A05               	goto	u1181
  1429     0204  2A06               	goto	u1180
  1430     0205                     u1181:
  1431     0205  29F8               	goto	l181
  1432     0206                     u1180:
  1433     0206  2850               	goto	l1690
  1434     0207  120A  118A  2810   	ljmp	start
  1435     020A                     __end_of_main:
  1436                           
  1437                           	psect	text1
  1438     04BD                     __ptext1:	
  1439 ;; *************** function _writeEEPROM *****************
  1440 ;; Defined at:
  1441 ;;		line 400 in file "main.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  data            1    wreg     unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  data            1   16[BANK0 ] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       1       0       0       0
  1457 ;;      Temps:          0       0       0       0       0
  1458 ;;      Totals:         0       1       0       0       0
  1459 ;;Total ram usage:        1 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 4
  1462 ;; This function calls:
  1463 ;;		_interrup
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469     04BD                     _writeEEPROM:	
  1470                           ;psect for function _writeEEPROM
  1471                           
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _writeEEPROM: [wreg+status,2+status,0+pclath+cstack]
  1475                           ;writeEEPROM@data stored from wreg
  1476     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1477     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1478     04BF  00B0               	movwf	writeEEPROM@data
  1479     04C0                     l1542:
  1480                           
  1481                           ;main.c: 401:     EEDATA = data;
  1482     04C0  0830               	movf	writeEEPROM@data,w
  1483     04C1  1283               	bcf	3,5	;RP0=0, select bank2
  1484     04C2  1703               	bsf	3,6	;RP1=1, select bank2
  1485     04C3  008C               	movwf	12	;volatile
  1486     04C4                     l1544:
  1487                           
  1488                           ;main.c: 402:     EECON1bits.EEPGD = 0;
  1489     04C4  1683               	bsf	3,5	;RP0=1, select bank3
  1490     04C5  1703               	bsf	3,6	;RP1=1, select bank3
  1491     04C6  138C               	bcf	12,7	;volsfr
  1492     04C7                     l1546:
  1493                           
  1494                           ;main.c: 403:     EECON1bits.WREN = 1;
  1495     04C7  150C               	bsf	12,2	;volsfr
  1496     04C8                     l1548:
  1497                           
  1498                           ;main.c: 405:     INTCONbits.GIE = 0;
  1499     04C8  138B               	bcf	11,7	;volatile
  1500     04C9                     l206:	
  1501                           ;main.c: 406:     while (INTCONbits.GIE == 1);
  1502                           
  1503     04C9  1B8B               	btfsc	11,7	;volatile
  1504     04CA  2CCC               	goto	u781
  1505     04CB  2CCD               	goto	u780
  1506     04CC                     u781:
  1507     04CC  2CC9               	goto	l206
  1508     04CD                     u780:
  1509     04CD                     l208:
  1510                           
  1511                           ;main.c: 407:     _delay((unsigned long)((50)*(500000/4000000.0)));
  1512     04CD  2CCE               	nop2	;2 cycle nop
  1513     04CE  2CCF               	nop2	;2 cycle nop
  1514     04CF  2CD0               	nop2	;2 cycle nop
  1515     04D0                     l1550:
  1516                           
  1517                           ;main.c: 408:     EECON2 = 0x55;
  1518     04D0  3055               	movlw	85
  1519     04D1  1683               	bsf	3,5	;RP0=1, select bank3
  1520     04D2  1703               	bsf	3,6	;RP1=1, select bank3
  1521     04D3  008D               	movwf	13	;volsfr
  1522                           
  1523                           ;main.c: 409:     EECON2 = 0xAA;
  1524     04D4  30AA               	movlw	170
  1525     04D5  008D               	movwf	13	;volsfr
  1526     04D6                     l1552:
  1527                           
  1528                           ;main.c: 410:     EECON1bits.WR = 1;
  1529     04D6  148C               	bsf	12,1	;volsfr
  1530     04D7                     l1554:
  1531                           
  1532                           ;main.c: 411:     interrup();
  1533     04D7  120A  118A  25A3  120A  118A  	fcall	_interrup
  1534     04DC                     l1556:
  1535                           
  1536                           ;main.c: 412:     _delay((unsigned long)((50)*(500000/4000000.0)));
  1537     04DC  2CDD               	nop2	;2 cycle nop
  1538     04DD  2CDE               	nop2	;2 cycle nop
  1539     04DE  2CDF               	nop2	;2 cycle nop
  1540     04DF                     l209:	
  1541                           ;main.c: 414:     while (EECON1bits.WR == 1);
  1542                           
  1543     04DF  1683               	bsf	3,5	;RP0=1, select bank3
  1544     04E0  1703               	bsf	3,6	;RP1=1, select bank3
  1545     04E1  188C               	btfsc	12,1	;volsfr
  1546     04E2  2CE4               	goto	u791
  1547     04E3  2CE5               	goto	u790
  1548     04E4                     u791:
  1549     04E4  2CDF               	goto	l209
  1550     04E5                     u790:
  1551     04E5                     l211:
  1552                           
  1553                           ;main.c: 415:     EECON1bits.WREN = 0;
  1554     04E5  110C               	bcf	12,2	;volsfr
  1555     04E6                     l212:
  1556     04E6  0008               	return
  1557     04E7                     __end_of_writeEEPROM:
  1558                           
  1559                           	psect	text2
  1560     05A3                     __ptext2:	
  1561 ;; *************** function _interrup *****************
  1562 ;; Defined at:
  1563 ;;		line 418 in file "main.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		None
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0
  1580 ;;      Totals:         0       0       0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 3
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;;		_writeEEPROM
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592     05A3                     _interrup:	
  1593                           ;psect for function _interrup
  1594                           
  1595     05A3                     l1336:	
  1596                           ;incstack = 0
  1597                           ; Regs used in _interrup: []
  1598                           
  1599                           
  1600                           ;main.c: 419:     INTCONbits.GIE = 1;
  1601     05A3  178B               	bsf	11,7	;volatile
  1602                           
  1603                           ;main.c: 420:     INTCONbits.PEIE = 1;
  1604     05A4  170B               	bsf	11,6	;volatile
  1605                           
  1606                           ;main.c: 421:     INTCONbits.RBIE = 1;
  1607     05A5  158B               	bsf	11,3	;volatile
  1608                           
  1609                           ;main.c: 422:     INTCONbits.RBIF = 0;
  1610     05A6  100B               	bcf	11,0	;volatile
  1611                           
  1612                           ;main.c: 423:     INTCONbits.T0IE = 1;
  1613     05A7  168B               	bsf	11,5	;volatile
  1614                           
  1615                           ;main.c: 424:     INTCONbits.T0IF = 0;
  1616     05A8  110B               	bcf	11,2	;volatile
  1617                           
  1618                           ;main.c: 425:     PIE1bits.ADIE = 1;
  1619     05A9  1683               	bsf	3,5	;RP0=1, select bank1
  1620     05AA  1303               	bcf	3,6	;RP1=0, select bank1
  1621     05AB  170C               	bsf	12,6	;volatile
  1622                           
  1623                           ;main.c: 426:     PIR1bits.ADIF = 0;
  1624     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1625     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1626     05AE  130C               	bcf	12,6	;volatile
  1627     05AF                     l215:
  1628     05AF  0008               	return
  1629     05B0                     __end_of_interrup:
  1630                           
  1631                           	psect	text3
  1632     056A                     __ptext3:	
  1633 ;; *************** function _setupUART *****************
  1634 ;; Defined at:
  1635 ;;		line 372 in file "main.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 3
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663     056A                     _setupUART:	
  1664                           ;psect for function _setupUART
  1665                           
  1666     056A                     l1518:	
  1667                           ;incstack = 0
  1668                           ; Regs used in _setupUART: [wreg+status,2]
  1669                           
  1670                           
  1671                           ;main.c: 374:     BAUDCTLbits.BRG16 = 1;
  1672     056A  1683               	bsf	3,5	;RP0=1, select bank3
  1673     056B  1703               	bsf	3,6	;RP1=1, select bank3
  1674     056C  1587               	bsf	7,3	;volatile
  1675                           
  1676                           ;main.c: 375:     TXSTAbits.BRGH = 1;
  1677     056D  1683               	bsf	3,5	;RP0=1, select bank1
  1678     056E  1303               	bcf	3,6	;RP1=0, select bank1
  1679     056F  1518               	bsf	24,2	;volatile
  1680     0570                     l1520:
  1681                           
  1682                           ;main.c: 376:     SPBRGH = 0;
  1683     0570  019A               	clrf	26	;volatile
  1684     0571                     l1522:
  1685                           
  1686                           ;main.c: 377:     SPBRG = 12;
  1687     0571  300C               	movlw	12
  1688     0572  0099               	movwf	25	;volatile
  1689     0573                     l1524:
  1690                           
  1691                           ;main.c: 381:     TXSTAbits.SYNC = 0;
  1692     0573  1218               	bcf	24,4	;volatile
  1693     0574                     l1526:
  1694                           
  1695                           ;main.c: 382:     RCSTAbits.SPEN = 1;
  1696     0574  1283               	bcf	3,5	;RP0=0, select bank0
  1697     0575  1303               	bcf	3,6	;RP1=0, select bank0
  1698     0576  1798               	bsf	24,7	;volatile
  1699     0577                     l1528:
  1700                           
  1701                           ;main.c: 388:     TXSTAbits.TXEN = 1;
  1702     0577  1683               	bsf	3,5	;RP0=1, select bank1
  1703     0578  1303               	bcf	3,6	;RP1=0, select bank1
  1704     0579  1698               	bsf	24,5	;volatile
  1705     057A                     l1530:
  1706                           
  1707                           ;main.c: 389:     PIR1bits.TXIF = 0;
  1708     057A  1283               	bcf	3,5	;RP0=0, select bank0
  1709     057B  1303               	bcf	3,6	;RP1=0, select bank0
  1710     057C  120C               	bcf	12,4	;volatile
  1711     057D                     l1532:
  1712                           
  1713                           ;main.c: 390:     RCSTAbits.CREN = 1;
  1714     057D  1618               	bsf	24,4	;volatile
  1715     057E                     l200:
  1716     057E  0008               	return
  1717     057F                     __end_of_setupUART:
  1718                           
  1719                           	psect	text4
  1720     04E7                     __ptext4:	
  1721 ;; *************** function _setupPWM *****************
  1722 ;; Defined at:
  1723 ;;		line 347 in file "main.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 3
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751     04E7                     _setupPWM:	
  1752                           ;psect for function _setupPWM
  1753                           
  1754     04E7                     l1492:	
  1755                           ;incstack = 0
  1756                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
  1757                           
  1758                           
  1759                           ;main.c: 349:     TRISCbits.TRISC2 = 1;
  1760     04E7  1683               	bsf	3,5	;RP0=1, select bank1
  1761     04E8  1303               	bcf	3,6	;RP1=0, select bank1
  1762     04E9  1507               	bsf	7,2	;volatile
  1763     04EA                     l1494:
  1764                           
  1765                           ;main.c: 350:     PR2 = 155;
  1766     04EA  309B               	movlw	155
  1767     04EB  0092               	movwf	18	;volatile
  1768                           
  1769                           ;main.c: 351:     CCP1CON = 0b00001100;
  1770     04EC  300C               	movlw	12
  1771     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1772     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1773     04EF  0097               	movwf	23	;volatile
  1774     04F0                     l1496:
  1775                           
  1776                           ;main.c: 352:     CCP1CONbits.DC1B = 0b11;
  1777     04F0  3030               	movlw	48
  1778     04F1  0497               	iorwf	23,f	;volatile
  1779     04F2                     l1498:
  1780                           
  1781                           ;main.c: 353:     CCPR1L = 11;
  1782     04F2  300B               	movlw	11
  1783     04F3  0095               	movwf	21	;volatile
  1784     04F4                     l1500:
  1785                           
  1786                           ;main.c: 354:     PIR1bits.TMR2IF = 0;
  1787     04F4  108C               	bcf	12,1	;volatile
  1788     04F5                     l1502:
  1789                           
  1790                           ;main.c: 355:     T2CONbits.T2CKPS1 = 1;
  1791     04F5  1492               	bsf	18,1	;volatile
  1792     04F6                     l1504:
  1793                           
  1794                           ;main.c: 356:     T2CONbits.T2CKPS0 = 1;
  1795     04F6  1412               	bsf	18,0	;volatile
  1796     04F7                     l1506:
  1797                           
  1798                           ;main.c: 357:     T2CONbits.TMR2ON = 1;
  1799     04F7  1512               	bsf	18,2	;volatile
  1800     04F8                     l1508:
  1801                           
  1802                           ;main.c: 360:    TRISCbits.TRISC1 = 1;
  1803     04F8  1683               	bsf	3,5	;RP0=1, select bank1
  1804     04F9  1303               	bcf	3,6	;RP1=0, select bank1
  1805     04FA  1487               	bsf	7,1	;volatile
  1806     04FB                     l1510:
  1807                           
  1808                           ;main.c: 361:    CCP2CON = 0b00001100;
  1809     04FB  300C               	movlw	12
  1810     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1811     04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1812     04FE  009D               	movwf	29	;volatile
  1813     04FF                     l1512:
  1814                           
  1815                           ;main.c: 362:    CCP2CONbits.DC2B0 = 1;
  1816     04FF  161D               	bsf	29,4	;volatile
  1817     0500                     l1514:
  1818                           
  1819                           ;main.c: 363:    CCP2CONbits.DC2B1 = 1;
  1820     0500  169D               	bsf	29,5	;volatile
  1821     0501                     l1516:
  1822                           
  1823                           ;main.c: 364:    CCPR2L = 11;
  1824     0501  300B               	movlw	11
  1825     0502  009B               	movwf	27	;volatile
  1826     0503                     l194:	
  1827                           ;main.c: 366:    while (PIR1bits.TMR2IF == 0);
  1828                           
  1829     0503  1C8C               	btfss	12,1	;volatile
  1830     0504  2D06               	goto	u751
  1831     0505  2D07               	goto	u750
  1832     0506                     u751:
  1833     0506  2D03               	goto	l194
  1834     0507                     u750:
  1835     0507                     l196:
  1836                           
  1837                           ;main.c: 367:     PIR1bits.TMR2IF = 0;
  1838     0507  108C               	bcf	12,1	;volatile
  1839                           
  1840                           ;main.c: 368:     TRISCbits.TRISC2 = 0;
  1841     0508  1683               	bsf	3,5	;RP0=1, select bank1
  1842     0509  1303               	bcf	3,6	;RP1=0, select bank1
  1843     050A  1107               	bcf	7,2	;volatile
  1844                           
  1845                           ;main.c: 369:     TRISCbits.TRISC1 = 0;
  1846     050B  1087               	bcf	7,1	;volatile
  1847     050C                     l197:
  1848     050C  0008               	return
  1849     050D                     __end_of_setupPWM:
  1850                           
  1851                           	psect	text5
  1852     0553                     __ptext5:	
  1853 ;; *************** function _setupADC *****************
  1854 ;; Defined at:
  1855 ;;		line 328 in file "main.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0
  1871 ;;      Temps:          0       1       0       0       0
  1872 ;;      Totals:         0       1       0       0       0
  1873 ;;Total ram usage:        1 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 3
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883     0553                     _setupADC:	
  1884                           ;psect for function _setupADC
  1885                           
  1886     0553                     l1488:	
  1887                           ;incstack = 0
  1888                           ; Regs used in _setupADC: [wreg]
  1889                           
  1890                           
  1891                           ;main.c: 329:     ADCON0bits.ADCS1 = 0;
  1892     0553  1283               	bcf	3,5	;RP0=0, select bank0
  1893     0554  1303               	bcf	3,6	;RP1=0, select bank0
  1894     0555  139F               	bcf	31,7	;volatile
  1895                           
  1896                           ;main.c: 330:     ADCON0bits.ADCS0 = 0;
  1897     0556  131F               	bcf	31,6	;volatile
  1898                           
  1899                           ;main.c: 332:     ADCON1bits.VCFG1 = 0;
  1900     0557  1683               	bsf	3,5	;RP0=1, select bank1
  1901     0558  1303               	bcf	3,6	;RP1=0, select bank1
  1902     0559  129F               	bcf	31,5	;volatile
  1903                           
  1904                           ;main.c: 333:     ADCON1bits.VCFG0 = 0;
  1905     055A  121F               	bcf	31,4	;volatile
  1906                           
  1907                           ;main.c: 335:     ADCON1bits.ADFM = 0;
  1908     055B  139F               	bcf	31,7	;volatile
  1909                           
  1910                           ;main.c: 337:     ADCON0bits.CHS3 = 0;
  1911     055C  1283               	bcf	3,5	;RP0=0, select bank0
  1912     055D  1303               	bcf	3,6	;RP1=0, select bank0
  1913     055E  129F               	bcf	31,5	;volatile
  1914                           
  1915                           ;main.c: 338:     ADCON0bits.CHS2 = 0;
  1916     055F  121F               	bcf	31,4	;volatile
  1917                           
  1918                           ;main.c: 339:     ADCON0bits.CHS1 = 0;
  1919     0560  119F               	bcf	31,3	;volatile
  1920                           
  1921                           ;main.c: 340:     ADCON0bits.CHS0 = 0;
  1922     0561  111F               	bcf	31,2	;volatile
  1923                           
  1924                           ;main.c: 342:     ADCON0bits.ADON = 1;
  1925     0562  141F               	bsf	31,0	;volatile
  1926     0563                     l1490:
  1927                           
  1928                           ;main.c: 343:     _delay((unsigned long)((100)*(500000/4000000.0)));
  1929     0563  3003               	movlw	3
  1930     0564  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0565  1303               	bcf	3,6	;RP1=0, select bank0
  1932     0566  00B0               	movwf	??_setupADC
  1933     0567                     u1197:
  1934     0567  0BB0               	decfsz	??_setupADC,f
  1935     0568  2D67               	goto	u1197
  1936     0569                     l191:
  1937     0569  0008               	return
  1938     056A                     __end_of_setupADC:
  1939                           
  1940                           	psect	text6
  1941     0449                     __ptext6:	
  1942 ;; *************** function _setup *****************
  1943 ;; Defined at:
  1944 ;;		line 270 in file "main.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		status,2
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0
  1961 ;;      Totals:         0       0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 3
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972     0449                     _setup:	
  1973                           ;psect for function _setup
  1974                           
  1975     0449                     l1406:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _setup: [status,2]
  1978                           
  1979                           
  1980                           ;main.c: 271:     ANSELH = 0;
  1981     0449  1683               	bsf	3,5	;RP0=1, select bank3
  1982     044A  1703               	bsf	3,6	;RP1=1, select bank3
  1983     044B  0189               	clrf	9	;volatile
  1984     044C                     l1408:
  1985                           
  1986                           ;main.c: 272:     ANSELbits.ANS0 = 1;
  1987     044C  1408               	bsf	8,0	;volatile
  1988     044D                     l1410:
  1989                           
  1990                           ;main.c: 273:     ANSELbits.ANS1 = 1;
  1991     044D  1488               	bsf	8,1	;volatile
  1992     044E                     l1412:
  1993                           
  1994                           ;main.c: 274:     ANSELbits.ANS2 = 1;
  1995     044E  1508               	bsf	8,2	;volatile
  1996     044F                     l1414:
  1997                           
  1998                           ;main.c: 275:     ANSELbits.ANS3 = 1;
  1999     044F  1588               	bsf	8,3	;volatile
  2000     0450                     l1416:
  2001                           
  2002                           ;main.c: 276:     TRISBbits.TRISB7 = 1;
  2003     0450  1683               	bsf	3,5	;RP0=1, select bank1
  2004     0451  1303               	bcf	3,6	;RP1=0, select bank1
  2005     0452  1786               	bsf	6,7	;volatile
  2006     0453                     l1418:
  2007                           
  2008                           ;main.c: 277:     TRISBbits.TRISB6 = 1;
  2009     0453  1706               	bsf	6,6	;volatile
  2010     0454                     l1420:
  2011                           
  2012                           ;main.c: 278:     TRISBbits.TRISB5 = 1;
  2013     0454  1686               	bsf	6,5	;volatile
  2014     0455                     l1422:
  2015                           
  2016                           ;main.c: 279:     TRISBbits.TRISB4 = 1;
  2017     0455  1606               	bsf	6,4	;volatile
  2018     0456                     l1424:
  2019                           
  2020                           ;main.c: 280:     TRISBbits.TRISB3 = 1;
  2021     0456  1586               	bsf	6,3	;volatile
  2022     0457                     l1426:
  2023                           
  2024                           ;main.c: 281:     TRISCbits.TRISC0 = 0;
  2025     0457  1007               	bcf	7,0	;volatile
  2026     0458                     l1428:
  2027                           
  2028                           ;main.c: 282:     TRISCbits.TRISC3 = 0;
  2029     0458  1187               	bcf	7,3	;volatile
  2030                           
  2031                           ;main.c: 283:     TRISE = 0;
  2032     0459  0189               	clrf	9	;volatile
  2033                           
  2034                           ;main.c: 284:     TRISD = 0;
  2035     045A  0188               	clrf	8	;volatile
  2036                           
  2037                           ;main.c: 285:     PORTA = 0;
  2038     045B  1283               	bcf	3,5	;RP0=0, select bank0
  2039     045C  1303               	bcf	3,6	;RP1=0, select bank0
  2040     045D  0185               	clrf	5	;volatile
  2041                           
  2042                           ;main.c: 286:     PORTB = 0;
  2043     045E  0186               	clrf	6	;volatile
  2044                           
  2045                           ;main.c: 287:     PORTD = 0;
  2046     045F  0188               	clrf	8	;volatile
  2047                           
  2048                           ;main.c: 288:     PORTE = 0;
  2049     0460  0189               	clrf	9	;volatile
  2050     0461                     l1430:
  2051                           
  2052                           ;main.c: 290:     INTCONbits.GIE = 1;
  2053     0461  178B               	bsf	11,7	;volatile
  2054     0462                     l1432:
  2055                           
  2056                           ;main.c: 291:     INTCONbits.PEIE = 1;
  2057     0462  170B               	bsf	11,6	;volatile
  2058     0463                     l1434:
  2059                           
  2060                           ;main.c: 292:     INTCONbits.RBIE = 1;
  2061     0463  158B               	bsf	11,3	;volatile
  2062     0464                     l1436:
  2063                           
  2064                           ;main.c: 293:     INTCONbits.RBIF = 0;
  2065     0464  100B               	bcf	11,0	;volatile
  2066     0465                     l1438:
  2067                           
  2068                           ;main.c: 294:     INTCONbits.T0IE = 1;
  2069     0465  168B               	bsf	11,5	;volatile
  2070     0466                     l1440:
  2071                           
  2072                           ;main.c: 295:     INTCONbits.T0IF = 0;
  2073     0466  110B               	bcf	11,2	;volatile
  2074     0467                     l1442:
  2075                           
  2076                           ;main.c: 296:     PIE1bits.ADIE = 1;
  2077     0467  1683               	bsf	3,5	;RP0=1, select bank1
  2078     0468  1303               	bcf	3,6	;RP1=0, select bank1
  2079     0469  170C               	bsf	12,6	;volatile
  2080     046A                     l1444:
  2081                           
  2082                           ;main.c: 297:     PIR1bits.ADIF = 0;
  2083     046A  1283               	bcf	3,5	;RP0=0, select bank0
  2084     046B  1303               	bcf	3,6	;RP1=0, select bank0
  2085     046C  130C               	bcf	12,6	;volatile
  2086     046D                     l1446:
  2087                           
  2088                           ;main.c: 298:     PIE1bits.RCIE = 0;
  2089     046D  1683               	bsf	3,5	;RP0=1, select bank1
  2090     046E  1303               	bcf	3,6	;RP1=0, select bank1
  2091     046F  128C               	bcf	12,5	;volatile
  2092     0470                     l1448:
  2093                           
  2094                           ;main.c: 300:     OSCCONbits.IRCF2 = 0;
  2095     0470  130F               	bcf	15,6	;volatile
  2096     0471                     l1450:
  2097                           
  2098                           ;main.c: 301:     OSCCONbits.IRCF1 = 1;
  2099     0471  168F               	bsf	15,5	;volatile
  2100     0472                     l1452:
  2101                           
  2102                           ;main.c: 302:     OSCCONbits.IRCF0 = 1;
  2103     0472  160F               	bsf	15,4	;volatile
  2104     0473                     l1454:
  2105                           
  2106                           ;main.c: 303:     OSCCONbits.SCS = 1;
  2107     0473  140F               	bsf	15,0	;volatile
  2108     0474                     l1456:
  2109                           
  2110                           ;main.c: 305:     OPTION_REGbits.nRBPU = 0;
  2111     0474  1381               	bcf	1,7	;volatile
  2112     0475                     l1458:
  2113                           
  2114                           ;main.c: 306:     OPTION_REGbits.T0CS = 0;
  2115     0475  1281               	bcf	1,5	;volatile
  2116     0476                     l1460:
  2117                           
  2118                           ;main.c: 307:     OPTION_REGbits.PSA = 0;
  2119     0476  1181               	bcf	1,3	;volatile
  2120     0477                     l1462:
  2121                           
  2122                           ;main.c: 308:     OPTION_REGbits.PS2 = 1;
  2123     0477  1501               	bsf	1,2	;volatile
  2124     0478                     l1464:
  2125                           
  2126                           ;main.c: 309:     OPTION_REGbits.PS1 = 1;
  2127     0478  1481               	bsf	1,1	;volatile
  2128     0479                     l1466:
  2129                           
  2130                           ;main.c: 310:     OPTION_REGbits.PS0 = 1;
  2131     0479  1401               	bsf	1,0	;volatile
  2132     047A                     l1468:
  2133                           
  2134                           ;main.c: 312:     WPUBbits.WPUB7 = 1;
  2135     047A  1795               	bsf	21,7	;volatile
  2136     047B                     l1470:
  2137                           
  2138                           ;main.c: 313:     WPUBbits.WPUB6 = 1;
  2139     047B  1715               	bsf	21,6	;volatile
  2140     047C                     l1472:
  2141                           
  2142                           ;main.c: 314:     WPUBbits.WPUB5 = 1;
  2143     047C  1695               	bsf	21,5	;volatile
  2144     047D                     l1474:
  2145                           
  2146                           ;main.c: 315:     WPUBbits.WPUB4 = 1;
  2147     047D  1615               	bsf	21,4	;volatile
  2148     047E                     l1476:
  2149                           
  2150                           ;main.c: 316:     WPUBbits.WPUB3 = 1;
  2151     047E  1595               	bsf	21,3	;volatile
  2152     047F                     l1478:
  2153                           
  2154                           ;main.c: 318:     IOCBbits.IOCB7 = 1;
  2155     047F  1796               	bsf	22,7	;volatile
  2156     0480                     l1480:
  2157                           
  2158                           ;main.c: 319:     IOCBbits.IOCB6 = 0;
  2159     0480  1316               	bcf	22,6	;volatile
  2160     0481                     l1482:
  2161                           
  2162                           ;main.c: 320:     IOCBbits.IOCB5 = 0;
  2163     0481  1296               	bcf	22,5	;volatile
  2164     0482                     l1484:
  2165                           
  2166                           ;main.c: 321:     IOCBbits.IOCB4 = 0;
  2167     0482  1216               	bcf	22,4	;volatile
  2168     0483                     l1486:
  2169                           
  2170                           ;main.c: 322:     IOCBbits.IOCB3 = 0;
  2171     0483  1196               	bcf	22,3	;volatile
  2172                           
  2173                           ;main.c: 324:     EEADRH = 0;
  2174     0484  1283               	bcf	3,5	;RP0=0, select bank2
  2175     0485  1703               	bsf	3,6	;RP1=1, select bank2
  2176     0486  018F               	clrf	15	;volatile
  2177     0487                     l188:
  2178     0487  0008               	return
  2179     0488                     __end_of_setup:
  2180                           
  2181                           	psect	text7
  2182     05B9                     __ptext7:	
  2183 ;; *************** function _readEEPROM *****************
  2184 ;; Defined at:
  2185 ;;		line 393 in file "main.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      unsigned char 
  2192 ;; Registers used:
  2193 ;;		wreg
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 3
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213     05B9                     _readEEPROM:	
  2214                           ;psect for function _readEEPROM
  2215                           
  2216     05B9                     l1558:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _readEEPROM: [wreg]
  2219                           
  2220                           
  2221                           ;main.c: 394:     EECON1bits.EEPGD = 0;
  2222     05B9  1683               	bsf	3,5	;RP0=1, select bank3
  2223     05BA  1703               	bsf	3,6	;RP1=1, select bank3
  2224     05BB  138C               	bcf	12,7	;volsfr
  2225                           
  2226                           ;main.c: 395:     EECON1bits.RD = 1;
  2227     05BC  140C               	bsf	12,0	;volsfr
  2228     05BD                     l1560:
  2229                           
  2230                           ;main.c: 396:     dato = EEDATA;
  2231     05BD  1283               	bcf	3,5	;RP0=0, select bank2
  2232     05BE  1703               	bsf	3,6	;RP1=1, select bank2
  2233     05BF  080C               	movf	12,w	;volatile
  2234     05C0  00FD               	movwf	_dato
  2235     05C1                     l203:
  2236     05C1  0008               	return
  2237     05C2                     __end_of_readEEPROM:
  2238                           
  2239                           	psect	text8
  2240     0532                     __ptext8:	
  2241 ;; *************** function _cadena *****************
  2242 ;; Defined at:
  2243 ;;		line 438 in file "main.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  cursor          1    wreg     PTR unsigned char 
  2246 ;;		 -> STR_1(121), 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  cursor          1   17[BANK0 ] PTR unsigned char 
  2249 ;;		 -> STR_1(121), 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       0       0       0       0
  2260 ;;      Locals:         0       1       0       0       0
  2261 ;;      Temps:          0       1       0       0       0
  2262 ;;      Totals:         0       2       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 3
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273     0532                     _cadena:	
  2274                           ;psect for function _cadena
  2275                           
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+pclath]
  2279                           ;cadena@cursor stored from wreg
  2280     0532  1283               	bcf	3,5	;RP0=0, select bank0
  2281     0533  1303               	bcf	3,6	;RP1=0, select bank0
  2282     0534  00B1               	movwf	cadena@cursor
  2283     0535                     l1534:
  2284                           
  2285                           ;main.c: 439:     while (*cursor != '\0'){
  2286     0535  2D46               	goto	l1540
  2287     0536                     l226:
  2288     0536  1E0C               	btfss	12,4	;volatile
  2289     0537  2D39               	goto	u761
  2290     0538  2D3A               	goto	u760
  2291     0539                     u761:
  2292     0539  2D36               	goto	l226
  2293     053A                     u760:
  2294     053A                     l1536:
  2295                           
  2296                           ;main.c: 441:             TXREG = *cursor;
  2297     053A  0831               	movf	cadena@cursor,w
  2298     053B  0084               	movwf	4
  2299     053C  120A  118A  2361  120A  118A  	fcall	stringdir
  2300     0541  0099               	movwf	25	;volatile
  2301     0542                     l1538:
  2302                           
  2303                           ;main.c: 442:             *cursor++;
  2304     0542  3001               	movlw	1
  2305     0543  00B0               	movwf	??_cadena
  2306     0544  0830               	movf	??_cadena,w
  2307     0545  07B1               	addwf	cadena@cursor,f
  2308     0546                     l1540:
  2309                           
  2310                           ;main.c: 439:     while (*cursor != '\0'){
  2311     0546  0831               	movf	cadena@cursor,w
  2312     0547  0084               	movwf	4
  2313     0548  120A  118A  2361  120A  118A  	fcall	stringdir
  2314     054D  3A00               	xorlw	0
  2315     054E  1D03               	skipz
  2316     054F  2D51               	goto	u771
  2317     0550  2D52               	goto	u770
  2318     0551                     u771:
  2319     0551  2D36               	goto	l226
  2320     0552                     u770:
  2321     0552                     l230:
  2322     0552  0008               	return
  2323     0553                     __end_of_cadena:
  2324                           
  2325                           	psect	text9
  2326     020A                     __ptext9:	
  2327 ;; *************** function _isr *****************
  2328 ;; Defined at:
  2329 ;;		line 53 in file "main.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0
  2345 ;;      Temps:          0       4       0       0       0
  2346 ;;      Totals:         0       4       0       0       0
  2347 ;;Total ram usage:        4 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 2
  2350 ;; This function calls:
  2351 ;;		_delay
  2352 ;;		_map
  2353 ;; This function is called by:
  2354 ;;		Interrupt level 1
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358     020A                     _isr:	
  2359                           ;psect for function _isr
  2360                           
  2361     020A                     i1l1564:
  2362                           
  2363                           ;main.c: 54:     if (INTCONbits.RBIF == 1){
  2364     020A  1C0B               	btfss	11,0	;volatile
  2365     020B  2A0D               	goto	u80_21
  2366     020C  2A0E               	goto	u80_20
  2367     020D                     u80_21:
  2368     020D  2A34               	goto	i1l1584
  2369     020E                     u80_20:
  2370     020E                     i1l1566:
  2371                           
  2372                           ;main.c: 55:         INTCONbits.RBIF = 0;
  2373     020E  100B               	bcf	11,0	;volatile
  2374                           
  2375                           ;main.c: 56:         if (PORTBbits.RB7 == 0){
  2376     020F  1B86               	btfsc	6,7	;volatile
  2377     0210  2A12               	goto	u81_21
  2378     0211  2A13               	goto	u81_20
  2379     0212                     u81_21:
  2380     0212  2A17               	goto	i1l1570
  2381     0213                     u81_20:
  2382     0213                     i1l1568:
  2383                           
  2384                           ;main.c: 57:             bandera = 1;}
  2385     0213  3001               	movlw	1
  2386     0214  00BA               	movwf	_bandera
  2387     0215  3000               	movlw	0
  2388     0216  00BB               	movwf	_bandera+1
  2389     0217                     i1l1570:
  2390                           
  2391                           ;main.c: 58:         if (PORTBbits.RB7 == 1 && bandera == 1){
  2392     0217  1F86               	btfss	6,7	;volatile
  2393     0218  2A1A               	goto	u82_21
  2394     0219  2A1B               	goto	u82_20
  2395     021A                     u82_21:
  2396     021A  2A34               	goto	i1l1584
  2397     021B                     u82_20:
  2398     021B                     i1l1572:
  2399     021B  033A               	decf	_bandera,w
  2400     021C  043B               	iorwf	_bandera+1,w
  2401     021D  1D03               	btfss	3,2
  2402     021E  2A20               	goto	u83_21
  2403     021F  2A21               	goto	u83_20
  2404     0220                     u83_21:
  2405     0220  2A34               	goto	i1l1584
  2406     0221                     u83_20:
  2407     0221                     i1l1574:
  2408                           
  2409                           ;main.c: 59:             selector++;
  2410     0221  3001               	movlw	1
  2411     0222  07BC               	addwf	_selector,f
  2412     0223  1803               	skipnc
  2413     0224  0ABD               	incf	_selector+1,f
  2414     0225  3000               	movlw	0
  2415     0226  07BD               	addwf	_selector+1,f
  2416     0227                     i1l1576:
  2417                           
  2418                           ;main.c: 60:             loop = 0;
  2419     0227  01B8               	clrf	_loop
  2420     0228  01B9               	clrf	_loop+1
  2421     0229                     i1l1578:
  2422                           
  2423                           ;main.c: 61:             bandera = 0;
  2424     0229  01BA               	clrf	_bandera
  2425     022A  01BB               	clrf	_bandera+1
  2426     022B                     i1l1580:
  2427                           
  2428                           ;main.c: 62:             if (selector == 3){
  2429     022B  3003               	movlw	3
  2430     022C  063C               	xorwf	_selector,w
  2431     022D  043D               	iorwf	_selector+1,w
  2432     022E  1D03               	btfss	3,2
  2433     022F  2A31               	goto	u84_21
  2434     0230  2A32               	goto	u84_20
  2435     0231                     u84_21:
  2436     0231  2A34               	goto	i1l1584
  2437     0232                     u84_20:
  2438     0232                     i1l1582:
  2439                           
  2440                           ;main.c: 63:                 selector = 0;}
  2441     0232  01BC               	clrf	_selector
  2442     0233  01BD               	clrf	_selector+1
  2443     0234                     i1l1584:
  2444                           
  2445                           ;main.c: 67:     if (PIR1bits.ADIF == 1){
  2446     0234  1F0C               	btfss	12,6	;volatile
  2447     0235  2A37               	goto	u85_21
  2448     0236  2A38               	goto	u85_20
  2449     0237                     u85_21:
  2450     0237  2AD7               	goto	i1l1612
  2451     0238                     u85_20:
  2452     0238                     i1l1586:
  2453                           
  2454                           ;main.c: 68:         if (ADCON0bits.CHS == 0b0000){
  2455     0238  0C1F               	rrf	31,w	;volatile
  2456     0239  00AC               	movwf	??_isr
  2457     023A  0C2C               	rrf	??_isr,w
  2458     023B  390F               	andlw	15
  2459     023C  3A00               	xorlw	0
  2460     023D  1D03               	skipz
  2461     023E  2A40               	goto	u86_21
  2462     023F  2A41               	goto	u86_20
  2463     0240                     u86_21:
  2464     0240  2A5F               	goto	i1l1592
  2465     0241                     u86_20:
  2466     0241                     i1l1588:
  2467                           
  2468                           ;main.c: 69:             CCPR1L = map(ADRESH, 0, 255, 7, 15);
  2469     0241  3000               	movlw	0
  2470     0242  00A4               	movwf	map@inputmin
  2471     0243  00A5               	movwf	map@inputmin+1
  2472     0244  30FF               	movlw	255
  2473     0245  00A6               	movwf	map@inputmax
  2474     0246  3000               	movlw	0
  2475     0247  00A7               	movwf	map@inputmax+1
  2476     0248  3007               	movlw	7
  2477     0249  00A8               	movwf	map@outmin
  2478     024A  3000               	movlw	0
  2479     024B  00A9               	movwf	map@outmin+1
  2480     024C  300F               	movlw	15
  2481     024D  00AA               	movwf	map@outmax
  2482     024E  3000               	movlw	0
  2483     024F  00AB               	movwf	map@outmax+1
  2484     0250  081E               	movf	30,w	;volatile
  2485     0251  120A  118A  2488  120A  118A  	fcall	_map
  2486     0256  1283               	bcf	3,5	;RP0=0, select bank0
  2487     0257  1303               	bcf	3,6	;RP1=0, select bank0
  2488     0258  0824               	movf	?_map,w
  2489     0259  0095               	movwf	21	;volatile
  2490     025A                     i1l1590:
  2491                           
  2492                           ;main.c: 70:             ADCON0bits.CHS = 0b0001;}
  2493     025A  081F               	movf	31,w	;volatile
  2494     025B  39C3               	andlw	-61
  2495     025C  3804               	iorlw	4
  2496     025D  009F               	movwf	31	;volatile
  2497     025E  2AD6               	goto	i1l1610
  2498     025F                     i1l1592:
  2499     025F  0C1F               	rrf	31,w	;volatile
  2500     0260  00AC               	movwf	??_isr
  2501     0261  0C2C               	rrf	??_isr,w
  2502     0262  390F               	andlw	15
  2503     0263  3A01               	xorlw	1
  2504     0264  1D03               	skipz
  2505     0265  2A67               	goto	u87_21
  2506     0266  2A68               	goto	u87_20
  2507     0267                     u87_21:
  2508     0267  2A86               	goto	i1l1598
  2509     0268                     u87_20:
  2510     0268                     i1l1594:
  2511                           
  2512                           ;main.c: 73:             CCPR2L = map(ADRESH, 0, 255, 7, 15);
  2513     0268  3000               	movlw	0
  2514     0269  00A4               	movwf	map@inputmin
  2515     026A  00A5               	movwf	map@inputmin+1
  2516     026B  30FF               	movlw	255
  2517     026C  00A6               	movwf	map@inputmax
  2518     026D  3000               	movlw	0
  2519     026E  00A7               	movwf	map@inputmax+1
  2520     026F  3007               	movlw	7
  2521     0270  00A8               	movwf	map@outmin
  2522     0271  3000               	movlw	0
  2523     0272  00A9               	movwf	map@outmin+1
  2524     0273  300F               	movlw	15
  2525     0274  00AA               	movwf	map@outmax
  2526     0275  3000               	movlw	0
  2527     0276  00AB               	movwf	map@outmax+1
  2528     0277  081E               	movf	30,w	;volatile
  2529     0278  120A  118A  2488  120A  118A  	fcall	_map
  2530     027D  1283               	bcf	3,5	;RP0=0, select bank0
  2531     027E  1303               	bcf	3,6	;RP1=0, select bank0
  2532     027F  0824               	movf	?_map,w
  2533     0280  009B               	movwf	27	;volatile
  2534     0281                     i1l1596:
  2535                           
  2536                           ;main.c: 74:             ADCON0bits.CHS = 0b0010;}
  2537     0281  081F               	movf	31,w	;volatile
  2538     0282  39C3               	andlw	-61
  2539     0283  3808               	iorlw	8
  2540     0284  009F               	movwf	31	;volatile
  2541     0285  2AD6               	goto	i1l1610
  2542     0286                     i1l1598:
  2543     0286  0C1F               	rrf	31,w	;volatile
  2544     0287  00AC               	movwf	??_isr
  2545     0288  0C2C               	rrf	??_isr,w
  2546     0289  390F               	andlw	15
  2547     028A  3A02               	xorlw	2
  2548     028B  1D03               	skipz
  2549     028C  2A8E               	goto	u88_21
  2550     028D  2A8F               	goto	u88_20
  2551     028E                     u88_21:
  2552     028E  2AAF               	goto	i1l1604
  2553     028F                     u88_20:
  2554     028F                     i1l1600:
  2555                           
  2556                           ;main.c: 77:             pot = map(ADRESH, 0, 255, 5, 14);
  2557     028F  3000               	movlw	0
  2558     0290  00A4               	movwf	map@inputmin
  2559     0291  00A5               	movwf	map@inputmin+1
  2560     0292  30FF               	movlw	255
  2561     0293  00A6               	movwf	map@inputmax
  2562     0294  3000               	movlw	0
  2563     0295  00A7               	movwf	map@inputmax+1
  2564     0296  3005               	movlw	5
  2565     0297  00A8               	movwf	map@outmin
  2566     0298  3000               	movlw	0
  2567     0299  00A9               	movwf	map@outmin+1
  2568     029A  300E               	movlw	14
  2569     029B  00AA               	movwf	map@outmax
  2570     029C  3000               	movlw	0
  2571     029D  00AB               	movwf	map@outmax+1
  2572     029E  081E               	movf	30,w	;volatile
  2573     029F  120A  118A  2488  120A  118A  	fcall	_map
  2574     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2575     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2576     02A6  0825               	movf	?_map+1,w
  2577     02A7  00B7               	movwf	_pot+1
  2578     02A8  0824               	movf	?_map,w
  2579     02A9  00B6               	movwf	_pot
  2580     02AA                     i1l1602:
  2581                           
  2582                           ;main.c: 78:             ADCON0bits.CHS = 0b0011;}
  2583     02AA  081F               	movf	31,w	;volatile
  2584     02AB  39C3               	andlw	-61
  2585     02AC  380C               	iorlw	12
  2586     02AD  009F               	movwf	31	;volatile
  2587     02AE  2AD6               	goto	i1l1610
  2588     02AF                     i1l1604:
  2589     02AF  0C1F               	rrf	31,w	;volatile
  2590     02B0  00AC               	movwf	??_isr
  2591     02B1  0C2C               	rrf	??_isr,w
  2592     02B2  390F               	andlw	15
  2593     02B3  3A03               	xorlw	3
  2594     02B4  1D03               	skipz
  2595     02B5  2AB7               	goto	u89_21
  2596     02B6  2AB8               	goto	u89_20
  2597     02B7                     u89_21:
  2598     02B7  2AD6               	goto	i1l142
  2599     02B8                     u89_20:
  2600     02B8                     i1l1606:
  2601                           
  2602                           ;main.c: 81:             pot1 = map(ADRESH, 0, 255, 5, 14);
  2603     02B8  3000               	movlw	0
  2604     02B9  00A4               	movwf	map@inputmin
  2605     02BA  00A5               	movwf	map@inputmin+1
  2606     02BB  30FF               	movlw	255
  2607     02BC  00A6               	movwf	map@inputmax
  2608     02BD  3000               	movlw	0
  2609     02BE  00A7               	movwf	map@inputmax+1
  2610     02BF  3005               	movlw	5
  2611     02C0  00A8               	movwf	map@outmin
  2612     02C1  3000               	movlw	0
  2613     02C2  00A9               	movwf	map@outmin+1
  2614     02C3  300E               	movlw	14
  2615     02C4  00AA               	movwf	map@outmax
  2616     02C5  3000               	movlw	0
  2617     02C6  00AB               	movwf	map@outmax+1
  2618     02C7  081E               	movf	30,w	;volatile
  2619     02C8  120A  118A  2488  120A  118A  	fcall	_map
  2620     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2621     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2622     02CF  0825               	movf	?_map+1,w
  2623     02D0  00B5               	movwf	_pot1+1
  2624     02D1  0824               	movf	?_map,w
  2625     02D2  00B4               	movwf	_pot1
  2626     02D3                     i1l1608:
  2627                           
  2628                           ;main.c: 82:             ADCON0bits.CHS = 0b0000;}
  2629     02D3  30C3               	movlw	-61
  2630     02D4  059F               	andwf	31,f	;volatile
  2631     02D5  2AD6               	goto	i1l1610
  2632     02D6                     i1l142:
  2633     02D6                     i1l1610:
  2634                           
  2635                           ;main.c: 83:             PIR1bits.ADIF = 0;}
  2636     02D6  130C               	bcf	12,6	;volatile
  2637     02D7                     i1l1612:
  2638                           
  2639                           ;main.c: 85:     if (INTCONbits.T0IF == 1){
  2640     02D7  1D0B               	btfss	11,2	;volatile
  2641     02D8  2ADA               	goto	u90_21
  2642     02D9  2ADB               	goto	u90_20
  2643     02DA                     u90_21:
  2644     02DA  2AF8               	goto	i1l1630
  2645     02DB                     u90_20:
  2646     02DB                     i1l1614:
  2647                           
  2648                           ;main.c: 86:         INTCONbits.T0IF = 0;
  2649     02DB  110B               	bcf	11,2	;volatile
  2650     02DC                     i1l1616:
  2651                           
  2652                           ;main.c: 87:         TMR0 = 246;
  2653     02DC  30F6               	movlw	246
  2654     02DD  0081               	movwf	1	;volatile
  2655     02DE                     i1l1618:
  2656                           
  2657                           ;main.c: 88:         PORTCbits.RC0 = 1;
  2658     02DE  1407               	bsf	7,0	;volatile
  2659     02DF                     i1l1620:
  2660                           
  2661                           ;main.c: 89:         delay(pot);
  2662     02DF  0837               	movf	_pot+1,w
  2663     02E0  00F1               	movwf	delay@micro+1
  2664     02E1  0836               	movf	_pot,w
  2665     02E2  00F0               	movwf	delay@micro
  2666     02E3  120A  118A  2592  120A  118A  	fcall	_delay
  2667     02E8                     i1l1622:
  2668                           
  2669                           ;main.c: 90:         PORTCbits.RC0 = 0;
  2670     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2671     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2672     02EA  1007               	bcf	7,0	;volatile
  2673     02EB                     i1l1624:
  2674                           
  2675                           ;main.c: 91:         PORTCbits.RC3 = 1;
  2676     02EB  1587               	bsf	7,3	;volatile
  2677     02EC                     i1l1626:
  2678                           
  2679                           ;main.c: 92:         delay(pot1);
  2680     02EC  0835               	movf	_pot1+1,w
  2681     02ED  00F1               	movwf	delay@micro+1
  2682     02EE  0834               	movf	_pot1,w
  2683     02EF  00F0               	movwf	delay@micro
  2684     02F0  120A  118A  2592  120A  118A  	fcall	_delay
  2685     02F5                     i1l1628:
  2686                           
  2687                           ;main.c: 93:         PORTCbits.RC3 = 0;
  2688     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2689     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2690     02F7  1187               	bcf	7,3	;volatile
  2691     02F8                     i1l1630:
  2692                           
  2693                           ;main.c: 107:     if (PIR1bits.RCIF == 1){
  2694     02F8  1E8C               	btfss	12,5	;volatile
  2695     02F9  2AFB               	goto	u91_21
  2696     02FA  2AFC               	goto	u91_20
  2697     02FB                     u91_21:
  2698     02FB  2B58               	goto	i1l156
  2699     02FC                     u91_20:
  2700     02FC                     i1l1632:
  2701                           
  2702                           ;main.c: 108:         if (RCREG == 'd'){
  2703     02FC  3064               	movlw	100
  2704     02FD  061A               	xorwf	26,w	;volatile
  2705     02FE  1D03               	btfss	3,2
  2706     02FF  2B01               	goto	u92_21
  2707     0300  2B02               	goto	u92_20
  2708     0301                     u92_21:
  2709     0301  2B15               	goto	i1l1644
  2710     0302                     u92_20:
  2711     0302                     i1l1634:
  2712                           
  2713                           ;main.c: 109:             if (x == 9){
  2714     0302  3009               	movlw	9
  2715     0303  063F               	xorwf	_x,w
  2716     0304  1D03               	btfss	3,2
  2717     0305  2B07               	goto	u93_21
  2718     0306  2B08               	goto	u93_20
  2719     0307                     u93_21:
  2720     0307  2B0A               	goto	i1l1638
  2721     0308                     u93_20:
  2722     0308                     i1l1636:
  2723                           
  2724                           ;main.c: 110:                 x = 8;}
  2725     0308  3008               	movlw	8
  2726     0309  00BF               	movwf	_x
  2727     030A                     i1l1638:
  2728                           
  2729                           ;main.c: 111:             CCPR1L = servo[x];
  2730     030A  083F               	movf	_x,w
  2731     030B  3E40               	addlw	(low (_servo| 0))& (0+255)
  2732     030C  0084               	movwf	4
  2733     030D  1383               	bcf	3,7	;select IRP bank0
  2734     030E  0800               	movf	0,w
  2735     030F  0095               	movwf	21	;volatile
  2736     0310                     i1l1640:
  2737                           
  2738                           ;main.c: 112:             x++;
  2739     0310  3001               	movlw	1
  2740     0311  00AC               	movwf	??_isr
  2741     0312  082C               	movf	??_isr,w
  2742     0313  07BF               	addwf	_x,f
  2743     0314                     i1l1642:
  2744                           
  2745                           ;main.c: 113:             PIR1bits.RCIF = 0;
  2746     0314  128C               	bcf	12,5	;volatile
  2747     0315                     i1l1644:
  2748                           
  2749                           ;main.c: 115:         if (RCREG == 'a'){
  2750     0315  3061               	movlw	97
  2751     0316  061A               	xorwf	26,w	;volatile
  2752     0317  1D03               	btfss	3,2
  2753     0318  2B1A               	goto	u94_21
  2754     0319  2B1B               	goto	u94_20
  2755     031A                     u94_21:
  2756     031A  2B2A               	goto	i1l1656
  2757     031B                     u94_20:
  2758     031B                     i1l1646:
  2759                           
  2760                           ;main.c: 116:             if (x == 255){
  2761     031B  0A3F               	incf	_x,w
  2762     031C  1D03               	btfss	3,2
  2763     031D  2B1F               	goto	u95_21
  2764     031E  2B20               	goto	u95_20
  2765     031F                     u95_21:
  2766     031F  2B21               	goto	i1l1650
  2767     0320                     u95_20:
  2768     0320                     i1l1648:
  2769                           
  2770                           ;main.c: 117:                 x = 0;}
  2771     0320  01BF               	clrf	_x
  2772     0321                     i1l1650:
  2773                           
  2774                           ;main.c: 118:             CCPR1L = servo[x];
  2775     0321  083F               	movf	_x,w
  2776     0322  3E40               	addlw	(low (_servo| 0))& (0+255)
  2777     0323  0084               	movwf	4
  2778     0324  1383               	bcf	3,7	;select IRP bank0
  2779     0325  0800               	movf	0,w
  2780     0326  0095               	movwf	21	;volatile
  2781     0327                     i1l1652:
  2782                           
  2783                           ;main.c: 119:             x--;
  2784     0327  3001               	movlw	1
  2785     0328  02BF               	subwf	_x,f
  2786     0329                     i1l1654:
  2787                           
  2788                           ;main.c: 120:             PIR1bits.RCIF = 0;
  2789     0329  128C               	bcf	12,5	;volatile
  2790     032A                     i1l1656:
  2791                           
  2792                           ;main.c: 122:         if (RCREG == 'w'){
  2793     032A  3077               	movlw	119
  2794     032B  061A               	xorwf	26,w	;volatile
  2795     032C  1D03               	btfss	3,2
  2796     032D  2B2F               	goto	u96_21
  2797     032E  2B30               	goto	u96_20
  2798     032F                     u96_21:
  2799     032F  2B43               	goto	i1l1668
  2800     0330                     u96_20:
  2801     0330                     i1l1658:
  2802                           
  2803                           ;main.c: 123:             if (y == 9){
  2804     0330  3009               	movlw	9
  2805     0331  063E               	xorwf	_y,w
  2806     0332  1D03               	btfss	3,2
  2807     0333  2B35               	goto	u97_21
  2808     0334  2B36               	goto	u97_20
  2809     0335                     u97_21:
  2810     0335  2B38               	goto	i1l1662
  2811     0336                     u97_20:
  2812     0336                     i1l1660:
  2813                           
  2814                           ;main.c: 124:                 y = 8;}
  2815     0336  3008               	movlw	8
  2816     0337  00BE               	movwf	_y
  2817     0338                     i1l1662:
  2818                           
  2819                           ;main.c: 125:             CCPR1L = servo[y];
  2820     0338  083E               	movf	_y,w
  2821     0339  3E40               	addlw	(low (_servo| 0))& (0+255)
  2822     033A  0084               	movwf	4
  2823     033B  1383               	bcf	3,7	;select IRP bank0
  2824     033C  0800               	movf	0,w
  2825     033D  0095               	movwf	21	;volatile
  2826     033E                     i1l1664:
  2827                           
  2828                           ;main.c: 126:             y++;
  2829     033E  3001               	movlw	1
  2830     033F  00AC               	movwf	??_isr
  2831     0340  082C               	movf	??_isr,w
  2832     0341  07BE               	addwf	_y,f
  2833     0342                     i1l1666:
  2834                           
  2835                           ;main.c: 127:             PIR1bits.RCIF = 0;
  2836     0342  128C               	bcf	12,5	;volatile
  2837     0343                     i1l1668:
  2838                           
  2839                           ;main.c: 129:         if (RCREG == 's'){
  2840     0343  3073               	movlw	115
  2841     0344  061A               	xorwf	26,w	;volatile
  2842     0345  1D03               	btfss	3,2
  2843     0346  2B48               	goto	u98_21
  2844     0347  2B49               	goto	u98_20
  2845     0348                     u98_21:
  2846     0348  2B58               	goto	i1l156
  2847     0349                     u98_20:
  2848     0349                     i1l1670:
  2849                           
  2850                           ;main.c: 130:             if (y == 255){
  2851     0349  0A3E               	incf	_y,w
  2852     034A  1D03               	btfss	3,2
  2853     034B  2B4D               	goto	u99_21
  2854     034C  2B4E               	goto	u99_20
  2855     034D                     u99_21:
  2856     034D  2B4F               	goto	i1l1674
  2857     034E                     u99_20:
  2858     034E                     i1l1672:
  2859                           
  2860                           ;main.c: 131:                 y = 0;}
  2861     034E  01BE               	clrf	_y
  2862     034F                     i1l1674:
  2863                           
  2864                           ;main.c: 132:             CCPR1L = servo[y];
  2865     034F  083E               	movf	_y,w
  2866     0350  3E40               	addlw	(low (_servo| 0))& (0+255)
  2867     0351  0084               	movwf	4
  2868     0352  1383               	bcf	3,7	;select IRP bank0
  2869     0353  0800               	movf	0,w
  2870     0354  0095               	movwf	21	;volatile
  2871     0355                     i1l1676:
  2872                           
  2873                           ;main.c: 133:             y--;
  2874     0355  3001               	movlw	1
  2875     0356  02BE               	subwf	_y,f
  2876     0357                     i1l1678:
  2877                           
  2878                           ;main.c: 134:             PIR1bits.RCIF = 0;
  2879     0357  128C               	bcf	12,5	;volatile
  2880     0358                     i1l156:
  2881     0358  082F               	movf	??_isr+3,w
  2882     0359  008A               	movwf	10
  2883     035A  082E               	movf	??_isr+2,w
  2884     035B  0084               	movwf	4
  2885     035C  0E2D               	swapf	??_isr+1,w
  2886     035D  0083               	movwf	3
  2887     035E  0EFE               	swapf	btemp,f
  2888     035F  0E7E               	swapf	btemp,w
  2889     0360  0009               	retfie
  2890     0361                     __end_of_isr:
  2891                           
  2892                           	psect	intentry
  2893     0004                     __pintentry:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2896                           
  2897     0004                     interrupt_function:
  2898     007E                     saved_w	set	btemp
  2899     0004  00FE               	movwf	btemp
  2900     0005  0E03               	swapf	3,w
  2901     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2902     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2903     0008  00AD               	movwf	??_isr+1
  2904     0009  0804               	movf	4,w
  2905     000A  00AE               	movwf	??_isr+2
  2906     000B  080A               	movf	10,w
  2907     000C  00AF               	movwf	??_isr+3
  2908     000D  120A  118A  2A0A   	ljmp	_isr
  2909                           
  2910                           	psect	text10
  2911     0488                     __ptext10:	
  2912 ;; *************** function _map *****************
  2913 ;; Defined at:
  2914 ;;		line 49 in file "main.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  value           1    wreg     unsigned char 
  2917 ;;  inputmin        2    4[BANK0 ] int 
  2918 ;;  inputmax        2    6[BANK0 ] int 
  2919 ;;  outmin          2    8[BANK0 ] int 
  2920 ;;  outmax          2   10[BANK0 ] int 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  value           1   12[COMMON] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  2    4[BANK0 ] unsigned int 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       8       0       0       0
  2933 ;;      Locals:         1       0       0       0       0
  2934 ;;      Temps:          1       0       0       0       0
  2935 ;;      Totals:         2       8       0       0       0
  2936 ;;Total ram usage:       10 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 1
  2939 ;; This function calls:
  2940 ;;		___awdiv
  2941 ;;		___wmul
  2942 ;; This function is called by:
  2943 ;;		_isr
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947     0488                     _map:	
  2948                           ;psect for function _map
  2949                           
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2953                           ;map@value stored from wreg
  2954     0488  00FC               	movwf	map@value
  2955     0489                     i1l1396:
  2956                           
  2957                           ;main.c: 50:     return ((value - inputmin)*(outmax-outmin)) / (inputmax-inputmin)+outmi
      +                          n;}
  2958     0489  1283               	bcf	3,5	;RP0=0, select bank0
  2959     048A  1303               	bcf	3,6	;RP1=0, select bank0
  2960     048B  0824               	movf	map@inputmin,w
  2961     048C  0226               	subwf	map@inputmax,w
  2962     048D  00F6               	movwf	___awdiv@divisor
  2963     048E  0825               	movf	map@inputmin+1,w
  2964     048F  1C03               	skipc
  2965     0490  0A25               	incf	map@inputmin+1,w
  2966     0491  0227               	subwf	map@inputmax+1,w
  2967     0492  00F7               	movwf	___awdiv@divisor+1
  2968     0493  087C               	movf	map@value,w
  2969     0494  00FB               	movwf	??_map
  2970     0495  0824               	movf	map@inputmin,w
  2971     0496  027B               	subwf	??_map,w
  2972     0497  00F0               	movwf	___wmul@multiplier
  2973     0498  0925               	comf	map@inputmin+1,w
  2974     0499  1803               	skipnc
  2975     049A  3E01               	addlw	1
  2976     049B  00F1               	movwf	___wmul@multiplier+1
  2977     049C  0828               	movf	map@outmin,w
  2978     049D  022A               	subwf	map@outmax,w
  2979     049E  00F2               	movwf	___wmul@multiplicand
  2980     049F  0829               	movf	map@outmin+1,w
  2981     04A0  1C03               	skipc
  2982     04A1  0A29               	incf	map@outmin+1,w
  2983     04A2  022B               	subwf	map@outmax+1,w
  2984     04A3  00F3               	movwf	___wmul@multiplicand+1
  2985     04A4  120A  118A  250D  120A  118A  	fcall	___wmul
  2986     04A9  0871               	movf	?___wmul+1,w
  2987     04AA  00F9               	movwf	___awdiv@dividend+1
  2988     04AB  0870               	movf	?___wmul,w
  2989     04AC  00F8               	movwf	___awdiv@dividend
  2990     04AD  120A  118A  23E0  120A  118A  	fcall	___awdiv
  2991     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2992     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2993     04B4  0828               	movf	map@outmin,w
  2994     04B5  0776               	addwf	?___awdiv,w
  2995     04B6  00A4               	movwf	?_map
  2996     04B7  0829               	movf	map@outmin+1,w
  2997     04B8  1803               	skipnc
  2998     04B9  0A29               	incf	map@outmin+1,w
  2999     04BA  0777               	addwf	?___awdiv+1,w
  3000     04BB  00A5               	movwf	?_map+1
  3001     04BC                     i1l129:
  3002     04BC  0008               	return
  3003     04BD                     __end_of_map:
  3004                           
  3005                           	psect	text11
  3006     050D                     __ptext11:	
  3007 ;; *************** function ___wmul *****************
  3008 ;; Defined at:
  3009 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  multiplier      2    0[COMMON] unsigned int 
  3012 ;;  multiplicand    2    2[COMMON] unsigned int 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  product         2    4[COMMON] unsigned int 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  2    0[COMMON] unsigned int 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3024 ;;      Params:         4       0       0       0       0
  3025 ;;      Locals:         2       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0
  3027 ;;      Totals:         6       0       0       0       0
  3028 ;;Total ram usage:        6 bytes
  3029 ;; Hardware stack levels used: 1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_map
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037     050D                     ___wmul:	
  3038                           ;psect for function ___wmul
  3039                           
  3040     050D                     i1l1338:	
  3041                           ;incstack = 0
  3042                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3043                           
  3044     050D  01F4               	clrf	___wmul@product
  3045     050E  01F5               	clrf	___wmul@product+1
  3046     050F                     i1l1340:
  3047     050F  1C70               	btfss	___wmul@multiplier,0
  3048     0510  2D12               	goto	u60_21
  3049     0511  2D13               	goto	u60_20
  3050     0512                     u60_21:
  3051     0512  2D19               	goto	i1l316
  3052     0513                     u60_20:
  3053     0513                     i1l1342:
  3054     0513  0872               	movf	___wmul@multiplicand,w
  3055     0514  07F4               	addwf	___wmul@product,f
  3056     0515  1803               	skipnc
  3057     0516  0AF5               	incf	___wmul@product+1,f
  3058     0517  0873               	movf	___wmul@multiplicand+1,w
  3059     0518  07F5               	addwf	___wmul@product+1,f
  3060     0519                     i1l316:
  3061     0519  3001               	movlw	1
  3062     051A                     u61_25:
  3063     051A  1003               	clrc
  3064     051B  0DF2               	rlf	___wmul@multiplicand,f
  3065     051C  0DF3               	rlf	___wmul@multiplicand+1,f
  3066     051D  3EFF               	addlw	-1
  3067     051E  1D03               	skipz
  3068     051F  2D1A               	goto	u61_25
  3069     0520                     i1l1344:
  3070     0520  3001               	movlw	1
  3071     0521                     u62_25:
  3072     0521  1003               	clrc
  3073     0522  0CF1               	rrf	___wmul@multiplier+1,f
  3074     0523  0CF0               	rrf	___wmul@multiplier,f
  3075     0524  3EFF               	addlw	-1
  3076     0525  1D03               	skipz
  3077     0526  2D21               	goto	u62_25
  3078     0527                     i1l1346:
  3079     0527  0870               	movf	___wmul@multiplier,w
  3080     0528  0471               	iorwf	___wmul@multiplier+1,w
  3081     0529  1D03               	btfss	3,2
  3082     052A  2D2C               	goto	u63_21
  3083     052B  2D2D               	goto	u63_20
  3084     052C                     u63_21:
  3085     052C  2D0F               	goto	i1l1340
  3086     052D                     u63_20:
  3087     052D                     i1l1348:
  3088     052D  0875               	movf	___wmul@product+1,w
  3089     052E  00F1               	movwf	?___wmul+1
  3090     052F  0874               	movf	___wmul@product,w
  3091     0530  00F0               	movwf	?___wmul
  3092     0531                     i1l318:
  3093     0531  0008               	return
  3094     0532                     __end_of___wmul:
  3095                           
  3096                           	psect	text12
  3097     03E0                     __ptext12:	
  3098 ;; *************** function ___awdiv *****************
  3099 ;; Defined at:
  3100 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  divisor         2    6[COMMON] int 
  3103 ;;  dividend        2    8[COMMON] int 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  quotient        2    2[BANK0 ] int 
  3106 ;;  sign            1    1[BANK0 ] unsigned char 
  3107 ;;  counter         1    0[BANK0 ] unsigned char 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  2    6[COMMON] int 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3117 ;;      Params:         4       0       0       0       0
  3118 ;;      Locals:         0       4       0       0       0
  3119 ;;      Temps:          1       0       0       0       0
  3120 ;;      Totals:         5       4       0       0       0
  3121 ;;Total ram usage:        9 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_map
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130     03E0                     ___awdiv:	
  3131                           ;psect for function ___awdiv
  3132                           
  3133     03E0                     i1l1352:	
  3134                           ;incstack = 0
  3135                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3136                           
  3137     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3138     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3139     03E2  01A1               	clrf	___awdiv@sign
  3140     03E3                     i1l1354:
  3141     03E3  1FF7               	btfss	___awdiv@divisor+1,7
  3142     03E4  2BE6               	goto	u64_21
  3143     03E5  2BE7               	goto	u64_20
  3144     03E6                     u64_21:
  3145     03E6  2BEE               	goto	i1l1360
  3146     03E7                     u64_20:
  3147     03E7                     i1l1356:
  3148     03E7  09F6               	comf	___awdiv@divisor,f
  3149     03E8  09F7               	comf	___awdiv@divisor+1,f
  3150     03E9  0AF6               	incf	___awdiv@divisor,f
  3151     03EA  1903               	skipnz
  3152     03EB  0AF7               	incf	___awdiv@divisor+1,f
  3153     03EC                     i1l1358:
  3154     03EC  01A1               	clrf	___awdiv@sign
  3155     03ED  0AA1               	incf	___awdiv@sign,f
  3156     03EE                     i1l1360:
  3157     03EE  1FF9               	btfss	___awdiv@dividend+1,7
  3158     03EF  2BF1               	goto	u65_21
  3159     03F0  2BF2               	goto	u65_20
  3160     03F1                     u65_21:
  3161     03F1  2BFB               	goto	i1l1366
  3162     03F2                     u65_20:
  3163     03F2                     i1l1362:
  3164     03F2  09F8               	comf	___awdiv@dividend,f
  3165     03F3  09F9               	comf	___awdiv@dividend+1,f
  3166     03F4  0AF8               	incf	___awdiv@dividend,f
  3167     03F5  1903               	skipnz
  3168     03F6  0AF9               	incf	___awdiv@dividend+1,f
  3169     03F7                     i1l1364:
  3170     03F7  3001               	movlw	1
  3171     03F8  00FA               	movwf	??___awdiv
  3172     03F9  087A               	movf	??___awdiv,w
  3173     03FA  06A1               	xorwf	___awdiv@sign,f
  3174     03FB                     i1l1366:
  3175     03FB  01A2               	clrf	___awdiv@quotient
  3176     03FC  01A3               	clrf	___awdiv@quotient+1
  3177     03FD                     i1l1368:
  3178     03FD  0876               	movf	___awdiv@divisor,w
  3179     03FE  0477               	iorwf	___awdiv@divisor+1,w
  3180     03FF  1903               	btfsc	3,2
  3181     0400  2C02               	goto	u66_21
  3182     0401  2C03               	goto	u66_20
  3183     0402                     u66_21:
  3184     0402  2C3A               	goto	i1l1388
  3185     0403                     u66_20:
  3186     0403                     i1l1370:
  3187     0403  01A0               	clrf	___awdiv@counter
  3188     0404  0AA0               	incf	___awdiv@counter,f
  3189     0405  2C11               	goto	i1l1376
  3190     0406                     i1l1372:
  3191     0406  3001               	movlw	1
  3192     0407                     u67_25:
  3193     0407  1003               	clrc
  3194     0408  0DF6               	rlf	___awdiv@divisor,f
  3195     0409  0DF7               	rlf	___awdiv@divisor+1,f
  3196     040A  3EFF               	addlw	-1
  3197     040B  1D03               	skipz
  3198     040C  2C07               	goto	u67_25
  3199     040D                     i1l1374:
  3200     040D  3001               	movlw	1
  3201     040E  00FA               	movwf	??___awdiv
  3202     040F  087A               	movf	??___awdiv,w
  3203     0410  07A0               	addwf	___awdiv@counter,f
  3204     0411                     i1l1376:
  3205     0411  1FF7               	btfss	___awdiv@divisor+1,7
  3206     0412  2C14               	goto	u68_21
  3207     0413  2C15               	goto	u68_20
  3208     0414                     u68_21:
  3209     0414  2C06               	goto	i1l1372
  3210     0415                     u68_20:
  3211     0415                     i1l1378:
  3212     0415  3001               	movlw	1
  3213     0416                     u69_25:
  3214     0416  1003               	clrc
  3215     0417  0DA2               	rlf	___awdiv@quotient,f
  3216     0418  0DA3               	rlf	___awdiv@quotient+1,f
  3217     0419  3EFF               	addlw	-1
  3218     041A  1D03               	skipz
  3219     041B  2C16               	goto	u69_25
  3220     041C  0877               	movf	___awdiv@divisor+1,w
  3221     041D  0279               	subwf	___awdiv@dividend+1,w
  3222     041E  1D03               	skipz
  3223     041F  2C22               	goto	u70_25
  3224     0420  0876               	movf	___awdiv@divisor,w
  3225     0421  0278               	subwf	___awdiv@dividend,w
  3226     0422                     u70_25:
  3227     0422  1C03               	skipc
  3228     0423  2C25               	goto	u70_21
  3229     0424  2C26               	goto	u70_20
  3230     0425                     u70_21:
  3231     0425  2C2D               	goto	i1l1384
  3232     0426                     u70_20:
  3233     0426                     i1l1380:
  3234     0426  0876               	movf	___awdiv@divisor,w
  3235     0427  02F8               	subwf	___awdiv@dividend,f
  3236     0428  0877               	movf	___awdiv@divisor+1,w
  3237     0429  1C03               	skipc
  3238     042A  03F9               	decf	___awdiv@dividend+1,f
  3239     042B  02F9               	subwf	___awdiv@dividend+1,f
  3240     042C                     i1l1382:
  3241     042C  1422               	bsf	___awdiv@quotient,0
  3242     042D                     i1l1384:
  3243     042D  3001               	movlw	1
  3244     042E                     u71_25:
  3245     042E  1003               	clrc
  3246     042F  0CF7               	rrf	___awdiv@divisor+1,f
  3247     0430  0CF6               	rrf	___awdiv@divisor,f
  3248     0431  3EFF               	addlw	-1
  3249     0432  1D03               	skipz
  3250     0433  2C2E               	goto	u71_25
  3251     0434                     i1l1386:
  3252     0434  3001               	movlw	1
  3253     0435  02A0               	subwf	___awdiv@counter,f
  3254     0436  1D03               	btfss	3,2
  3255     0437  2C39               	goto	u72_21
  3256     0438  2C3A               	goto	u72_20
  3257     0439                     u72_21:
  3258     0439  2C15               	goto	i1l1378
  3259     043A                     u72_20:
  3260     043A                     i1l1388:
  3261     043A  0821               	movf	___awdiv@sign,w
  3262     043B  1903               	btfsc	3,2
  3263     043C  2C3E               	goto	u73_21
  3264     043D  2C3F               	goto	u73_20
  3265     043E                     u73_21:
  3266     043E  2C44               	goto	i1l1392
  3267     043F                     u73_20:
  3268     043F                     i1l1390:
  3269     043F  09A2               	comf	___awdiv@quotient,f
  3270     0440  09A3               	comf	___awdiv@quotient+1,f
  3271     0441  0AA2               	incf	___awdiv@quotient,f
  3272     0442  1903               	skipnz
  3273     0443  0AA3               	incf	___awdiv@quotient+1,f
  3274     0444                     i1l1392:
  3275     0444  0823               	movf	___awdiv@quotient+1,w
  3276     0445  00F7               	movwf	?___awdiv+1
  3277     0446  0822               	movf	___awdiv@quotient,w
  3278     0447  00F6               	movwf	?___awdiv
  3279     0448                     i1l469:
  3280     0448  0008               	return
  3281     0449                     __end_of___awdiv:
  3282                           
  3283                           	psect	text13
  3284     0592                     __ptext13:	
  3285 ;; *************** function _delay *****************
  3286 ;; Defined at:
  3287 ;;		line 430 in file "main.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  micro           2    0[COMMON] unsigned int 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         2       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         2       0       0       0       0
  3305 ;;Total ram usage:        2 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_isr
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314     0592                     _delay:	
  3315                           ;psect for function _delay
  3316                           
  3317     0592                     i1l1400:	
  3318                           ;incstack = 0
  3319                           ; Regs used in _delay: [wreg+status,2+status,0]
  3320                           
  3321                           
  3322                           ;main.c: 431:     while (micro > 0){
  3323     0592  2D9C               	goto	i1l1404
  3324     0593                     i1l219:
  3325                           
  3326                           ;main.c: 432:         _delay((unsigned long)((50)*(500000/4000000.0)));
  3327     0593  2D94               	nop2	;2 cycle nop
  3328     0594  2D95               	nop2	;2 cycle nop
  3329     0595  2D96               	nop2	;2 cycle nop
  3330     0596                     i1l1402:
  3331                           
  3332                           ;main.c: 433:         micro--;
  3333     0596  3001               	movlw	1
  3334     0597  02F0               	subwf	delay@micro,f
  3335     0598  3000               	movlw	0
  3336     0599  1C03               	skipc
  3337     059A  03F1               	decf	delay@micro+1,f
  3338     059B  02F1               	subwf	delay@micro+1,f
  3339     059C                     i1l1404:
  3340                           
  3341                           ;main.c: 431:     while (micro > 0){
  3342     059C  0870               	movf	delay@micro,w
  3343     059D  0471               	iorwf	delay@micro+1,w
  3344     059E  1D03               	btfss	3,2
  3345     059F  2DA1               	goto	u74_21
  3346     05A0  2DA2               	goto	u74_20
  3347     05A1                     u74_21:
  3348     05A1  2D93               	goto	i1l219
  3349     05A2                     u74_20:
  3350     05A2                     i1l221:
  3351     05A2  0008               	return
  3352     05A3                     __end_of_delay:
  3353     007E                     btemp	set	126	;btemp
  3354     007E                     wtemp0	set	126
  3355                           
  3356                           	psect	idloc
  3357                           
  3358                           ;Config register IDLOC0 @ 0x2000
  3359                           ;	unspecified, using default values
  3360     2000                     	org	8192
  3361     2000  3FFF               	dw	16383
  3362                           
  3363                           ;Config register IDLOC1 @ 0x2001
  3364                           ;	unspecified, using default values
  3365     2001                     	org	8193
  3366     2001  3FFF               	dw	16383
  3367                           
  3368                           ;Config register IDLOC2 @ 0x2002
  3369                           ;	unspecified, using default values
  3370     2002                     	org	8194
  3371     2002  3FFF               	dw	16383
  3372                           
  3373                           ;Config register IDLOC3 @ 0x2003
  3374                           ;	unspecified, using default values
  3375     2003                     	org	8195
  3376     2003  3FFF               	dw	16383
  3377                           
  3378                           	psect	config
  3379                           
  3380                           ;Config register CONFIG1 @ 0x2007
  3381                           ;	Oscillator Selection bits
  3382                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3383                           ;	Watchdog Timer Enable bit
  3384                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3385                           ;	Power-up Timer Enable bit
  3386                           ;	PWRTE = OFF, PWRT disabled
  3387                           ;	RE3/MCLR pin function select bit
  3388                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3389                           ;	Code Protection bit
  3390                           ;	CP = OFF, Program memory code protection is disabled
  3391                           ;	Data Code Protection bit
  3392                           ;	CPD = OFF, Data memory code protection is disabled
  3393                           ;	Brown Out Reset Selection bits
  3394                           ;	BOREN = OFF, BOR disabled
  3395                           ;	Internal External Switchover bit
  3396                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3397                           ;	Fail-Safe Clock Monitor Enabled bit
  3398                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3399                           ;	Low Voltage Programming Enable bit
  3400                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3401                           ;	In-Circuit Debugger Mode bit
  3402                           ;	DEBUG = 0x1, unprogramme  3403     2007                     	org	8199
  3404     2007  20D4               	dw	8404
  3405                           
  3406                           ;Config register CONFIG2 @ 0x2008
  3407                           ;	Brown-out Reset Selection bit
  3408                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3409                           ;	Flash Program Memory Self Write Enable bits
  3410                           ;	WRT = OFF, Write protection off
  3411     2008                     	org	8200
  3412     2008  3FFF               	dw	16383

Data Sizes:
    Strings     121
    Constant    0
    Data        9
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     20      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@cursor	PTR unsigned char  size(1) Largest target is 121
		 -> STR_1(CODE[121]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_map
    _map->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_cadena

Critical Paths under _isr in BANK0

    _isr->_map
    _map->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     100
                                             18 BANK0      2     2      0
                             _cadena
                           _interrup
                         _readEEPROM
                              _setup
                           _setupADC
                           _setupPWM
                          _setupUART
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          1     1      0      22
                                             16 BANK0      1     1      0
                           _interrup
 ---------------------------------------------------------------------------------
 (2) _interrup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               2     2      0      78
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0    2241
                                             12 BANK0      4     4      0
                              _delay
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 10     2      8    2066
                                             11 COMMON     2     2      0
                                              4 BANK0      8     0      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     0      2     175
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
   _interrup
   _readEEPROM
   _setup
   _setupADC
   _setupPWM
   _setupUART
   _writeEEPROM
     _interrup

 _isr (ROOT)
   _delay
   _map
     ___awdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Nov 12 19:26:10 2022

                      _x 003F                        _y 003E                        pc 0002  
            map@inputmax 0026              map@inputmin 0024             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0072                      l200 057E  
                    l203 05C1                      l211 04E5                      l212 04E6  
                    l230 0552                      l206 04C9                      l215 05AF  
                    l208 04CD                      l209 04DF                      l226 0536  
                    l164 005D                      l181 01F8                      l173 0122  
                    l165 0062                      l191 0569                      l194 0503  
                    l188 0487                      l196 0507                      l197 050C  
                    _PR2 0092                      u750 0507                      u751 0506  
                    u760 053A                      u761 0539                      u770 0552  
                    u771 0551                      u780 04CD                      u781 04CC  
                    u790 04E5                      u791 04E4                      _map 0488  
                    _isr 020A                      _pot 0036                      fsr0 0004  
                    indf 0000                     l1410 044D                     l1420 0454  
                   l1412 044E                     l1500 04F4                     l1430 0461  
                   l1422 0455                     l1414 044F                     l1406 0449  
                   l1510 04FB                     l1502 04F5                     l1440 0466  
                   l1432 0462                     l1424 0456                     l1416 0450  
                   l1408 044C                     l1512 04FF                     l1504 04F6  
                   l1520 0570                     l1336 05A3                     l1450 0471  
                   l1442 0467                     l1434 0463                     l1426 0457  
                   l1418 0453                     l1514 0500                     l1506 04F7  
                   l1530 057A                     l1522 0571                     l1540 0546  
                   l1460 0476                     l1452 0472                     l1444 046A  
                   l1436 0464                     l1428 0458                     l1516 0501  
                   l1508 04F8                     l1532 057D                     l1524 0573  
                   l1700 0071                     l1534 0535                     l1470 047B  
                   l1462 0477                     l1454 0473                     l1446 046D  
                   l1438 0465                     l1526 0574                     l1518 056A  
                   l1550 04D0                     l1542 04C0                     l1710 008A  
                   l1702 0078                     l1536 053A                     l1560 05BD  
                   l1480 0480                     l1472 047C                     l1464 0478  
                   l1456 0474                     l1448 0470                     l1528 0577  
                   l1552 04D6                     l1544 04C4                     l1800 0175  
                   l1720 00A4                     l1712 0092                     l1704 007B  
                   l1538 0542                     l1482 0481                     l1474 047D  
                   l1466 0479                     l1458 0475                     l1490 0563  
                   l1554 04D7                     l1546 04C7                     l1810 018D  
                   l1802 017E                     l1730 00BB                     l1722 00A8  
                   l1714 0095                     l1706 0083                     l1484 0482  
                   l1476 047E                     l1468 047A                     l1492 04E7  
                   l1556 04DC                     l1548 04C8                     l1820 01A5  
                   l1812 0191                     l1804 0181                     l1740 00D6  
                   l1732 00BF                     l1724 00B0                     l1716 0099  
                   l1708 0086                     l1558 05B9                     l1486 0483  
                   l1478 047F                     l1494 04EA                     l1830 01C1  
                   l1822 01A8                     l1814 0198                     l1806 0185  
                   l1750 00F4                     l1742 00D9                     l1734 00C3  
                   l1726 00B3                     l1718 00A1                     l1488 0553  
                   l1496 04F0                     l1840 01E2                     l1832 01CA  
                   l1824 01AC                     l1816 019C                     l1808 0189  
                   l1752 00FB                     l1744 00E5                     l1736 00CA  
                   l1728 00B7                     l1760 0110                     l1680 0032  
                   l1498 04F2                     l1834 01CD                     l1826 01B5  
                   l1818 01A1                     l1770 0131                     l1842 01E6  
                   l1762 0116                     l1754 0103                     l1746 00E8  
                   l1738 00CE                     l1690 0050                     l1682 0037  
                   l1836 01D1                     l1828 01BC                     l1780 0147  
                   l1772 0138                     l1764 011B                     l1844 01EC  
                   l1756 0106                     l1748 00EC                     l1692 0058  
                   l1684 003C                     l1846 01F3                     l1838 01DF  
                   l1790 015B                     l1782 014B                     l1774 013B  
                   l1766 0129                     l1694 0061                     l1758 010A  
                   l1686 0041                     l1848 0200                     l1792 0160  
                   l1784 0150                     l1776 0140                     l1768 012D  
                   l1696 0069                     l1688 004A                     l1794 0169  
                   l1786 0154                     l1778 0144                     l1698 006D  
                   l1796 016C                     l1788 0157                     l1798 0170  
                   ?_map 0024                     ?_isr 0070                     STR_1 0367  
                   u1000 0058                     u1001 0057                     u1010 0061  
                   u1011 0060                     u1100 0129                     u1020 0069  
                   u1101 0128                     u1021 0068                     u1110 0131  
                   u1030 0071                     u1111 0130                     u1031 0070  
                   u1120 0138                     u1040 0078                     u1121 0137  
                   u1041 0077                     u1130 0189                     u1050 00BB  
                   u1131 0188                     u1051 00BA                     u1140 0191  
                   u1060 00C3                     u1141 0190                     u1061 00C2  
                   u1150 0198                     u1070 00CA                     u1151 0197  
                   u1071 00C9                     u1160 01EC                     u1080 0110  
                   u1161 01EB                     u1081 010F                     u1170 01F3  
                   u1090 0116                     u1171 01F2                     u1091 0115  
                   u1180 0206                     u1181 0205                     u1197 0567  
                   _TMR0 0001                     _dato 007D                     _main 0032  
                   _pot1 0034                     _loop 0038                     btemp 007E  
                   start 0010              _writeEEPROM 04BD                    ??_map 007B  
                  ??_isr 002C                    ?_main 0070          __end_of___awdiv 0449  
                  _EEADR 010D          ___awdiv@divisor 0076                    i1l221 05A2  
                  i1l142 02D6                    i1l129 04BC                    i1l219 0593  
                  i1l316 0519                    i1l156 0358                    i1l318 0531  
                  i1l469 0448          ___awdiv@counter 0020                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    u60_20 0513  
                  u60_21 0512                    u61_25 051A                    u70_20 0426  
                  u70_21 0425                    u70_25 0422                    u62_25 0521  
                  u63_20 052D                    u63_21 052C                    u71_25 042E  
                  u72_20 043A                    u64_20 03E7                    u80_20 020E  
                  u72_21 0439                    u64_21 03E6                    u80_21 020D  
                  u73_20 043F                    u65_20 03F2                    u81_20 0213  
                  u73_21 043E                    u65_21 03F1                    u81_21 0212  
                  _TRISD 0088                    _TRISE 0089                    u74_20 05A2  
                  u66_20 0403                    u90_20 02DB                    u82_20 021B  
                  u74_21 05A1                    u66_21 0402                    u90_21 02DA  
                  u82_21 021A                    u91_20 02FC                    u83_20 0221  
                  u91_21 02FB                    u83_21 0220                    u67_25 0407  
                  u68_20 0415                    u92_20 0302                    u84_20 0232  
                  u68_21 0414                    u92_21 0301                    u84_21 0231  
                  u93_20 0308                    u85_20 0238                    u93_21 0307  
                  u85_21 0237                    u69_25 0416                    u94_20 031B  
                  u86_20 0241                    u94_21 031A                    u86_21 0240  
                  u95_20 0320                    u87_20 0268                    u95_21 031F  
                  u87_21 0267                    u96_20 0330                    u88_20 028F  
                  u96_21 032F                    u88_21 028E                    u97_20 0336  
                  u89_20 02B8                    u97_21 0335                    u89_21 02B7  
                  _TXREG 0019                    u98_20 0349                    u98_21 0348  
                  u99_20 034E                    u99_21 034D                    _delay 0592  
                  _servo 0040                    _setup 0449                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 020A                   ??_main 0032                   ?_delay 0070  
                 _ADRESH 001E                   _EEADRH 010F                   _EEDATA 010C  
                 _CCPR1L 0015                   _CCPR2L 001B                   _EECON2 018D  
       ___awdiv@dividend 0078                   ?_setup 0070                   _ANSELH 0189  
                 i1l1400 0592                   i1l1402 0596                   i1l1404 059C  
                 i1l1340 050F                   i1l1342 0513                   i1l1360 03EE  
                 i1l1352 03E0                   i1l1344 0520                   i1l1600 028F  
                 i1l1370 0403                   i1l1362 03F2                   i1l1354 03E3  
                 i1l1346 0527                   i1l1338 050D                   i1l1602 02AA  
                 i1l1610 02D6                   i1l1380 0426                   i1l1372 0406  
                 i1l1364 03F7                   i1l1356 03E7                   i1l1348 052D  
                 i1l1620 02DF                   i1l1604 02AF                   i1l1612 02D7  
                 i1l1390 043F                   i1l1382 042C                   i1l1374 040D  
                 i1l1366 03FB                   i1l1358 03EC                   i1l1622 02E8  
                 i1l1614 02DB                   i1l1630 02F8                   i1l1606 02B8  
                 i1l1392 0444                   i1l1384 042D                   i1l1376 0411  
                 i1l1368 03FD                   i1l1640 0310                   i1l1632 02FC  
                 i1l1624 02EB                   i1l1616 02DC                   i1l1608 02D3  
                 i1l1386 0434                   i1l1378 0415                   i1l1650 0321  
                 i1l1642 0314                   i1l1634 0302                   i1l1626 02EC  
                 i1l1618 02DE                   i1l1570 0217                   i1l1388 043A  
                 i1l1396 0489                   i1l1660 0336                   i1l1652 0327  
                 i1l1636 0308                   i1l1644 0315                   i1l1628 02F5  
                 i1l1580 022B                   i1l1572 021B                   i1l1564 020A  
                 i1l1670 0349                   i1l1662 0338                   i1l1654 0329  
                 i1l1646 031B                   i1l1638 030A                   i1l1590 025A  
                 i1l1582 0232                   i1l1574 0221                   i1l1566 020E  
                 i1l1672 034E                   i1l1664 033E                   i1l1648 0320  
                 i1l1656 032A                   i1l1592 025F                   i1l1576 0227  
                 i1l1568 0213                   i1l1584 0234                   i1l1674 034F  
                 i1l1666 0342                   i1l1658 0330                   i1l1594 0268  
                 i1l1586 0238                   i1l1578 0229                   i1l1676 0355  
                 i1l1668 0343                   i1l1596 0281                   i1l1588 0241  
                 i1l1678 0357                   i1l1598 0286                   _SPBRGH 009A  
                 _cadena 0532                   ___wmul 050D                ??___awdiv 007A  
       ___awdiv@quotient 0022         __end_of_interrup 05B0         __end_of_setupADC 056A  
       __end_of_setupPWM 050D                   saved_w 007E  __end_of__initialization 002E  
        writeEEPROM@data 0030           __pcstackCOMMON 0070             __pidataBANK0 05B0  
          __end_of_delay 05A3            __end_of_setup 0488           _OPTION_REGbits 0081  
                ??_delay 0072                  ??_setup 0030               __pbssBANK0 0034  
             __pmaintext 0032             ?_writeEEPROM 0070                  ?_cadena 0070  
                ?___wmul 0070               __pintentry 0004                  _CCP1CON 0017  
                _CCP2CON 001D               __stringtab 0361             cadena@cursor 0031  
             _readEEPROM 05B9                ?_interrup 0070                ?_setupADC 0070  
              ?_setupPWM 0070                  ___awdiv 03E0                  _bandera 003A  
              _ANSELbits 0188                  __ptext1 04BD                  __ptext2 05A3  
                __ptext3 056A                  __ptext4 04E7                  __ptext5 0553  
                __ptext6 0449                  __ptext7 05B9                  __ptext8 0532  
                __ptext9 020A                _T2CONbits 0012               delay@micro 0070  
   end_of_initialization 002E               ??_interrup 0030        __end_of_setupUART 057F  
             ??_setupADC 0030                _RCSTAbits 0018               ??_setupPWM 0030  
              _PORTBbits 0006                _PORTCbits 0007                _PORTDbits 0008  
              _TRISBbits 0086                _TRISCbits 0087              _CCP1CONbits 0017  
            ?_readEEPROM 0070              _CCP2CONbits 001D                _TXSTAbits 0098  
         __end_of_cadena 0553           __end_of___wmul 0532              _BAUDCTLbits 0187  
    start_initialization 0013              __end_of_map 04BD              __end_of_isr 0361  
               ??_cadena 0030                 ??___wmul 0074               init_fetch0 057F  
            __pdataBANK0 0040              __pbssCOMMON 007D                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0076                __pstrings 0361  
      interrupt_function 0004           ___wmul@product 0074                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C                _setupUART 056A  
             _ADCON0bits 001F              __stringbase 0366               _ADCON1bits 009F  
      ___wmul@multiplier 0070                map@outmax 002A                map@outmin 0028  
               _WPUBbits 0095             ??_readEEPROM 0030               _EECON1bits 018C  
             ?_setupUART 0070       __end_of__stringtab 0367       __end_of_readEEPROM 05C2  
               __ptext10 0488                 __ptext11 050D                 __ptext12 03E0  
               __ptext13 0592                 _interrup 05A3                 _selector 003C  
          ??_writeEEPROM 0030                 _setupADC 0553                 _setupPWM 04E7  
               map@value 007C               _INTCONbits 000B                 init_ram0 0583  
               intlevel1 0000                stringcode 0361               _OSCCONbits 008F  
            ??_setupUART 0030      __end_of_writeEEPROM 04E7                 stringdir 0361  
               stringtab 0361  
